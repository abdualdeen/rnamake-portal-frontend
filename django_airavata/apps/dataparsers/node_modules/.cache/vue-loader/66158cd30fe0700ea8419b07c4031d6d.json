{"remainingRequest":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/dataparsers/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vanishing/git/airavata-django-portal/django_airavata/static/common/js/components/ComputeResourceName.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/static/common/js/components/ComputeResourceName.vue","mtime":1638641844579},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/dataparsers/node_modules/babel-loader/lib/index.js","mtime":1638646225600},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/dataparsers/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/dataparsers/node_modules/vue-loader/lib/index.js","mtime":1638646228900}],"contextDependencies":[],"result":["//\n//\n//\n\nimport { services } from \"django-airavata-api\";\nexport default {\n  name: \"compute-resource-name\",\n  props: {\n    computeResourceId: {\n      type: String,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      computeResource: null,\n      notAvailable: false,\n    };\n  },\n  created() {\n    this.loadComputeResource();\n  },\n  methods: {\n    loadComputeResource() {\n      services.ComputeResourceService.retrieve(\n        { lookup: this.computeResourceId },\n        { ignoreErrors: true, cache: true }\n      )\n        .then((computeResource) => (this.computeResource = computeResource))\n        .catch(() => (this.notAvailable = true));\n    },\n  },\n  computed: {\n    name() {\n      if (this.notAvailable) {\n        return \"N/A\";\n      } else {\n        return this.computeResource ? this.computeResource.hostName : \"\";\n      }\n    },\n  },\n  watch: {\n    computeResourceId() {\n      this.loadComputeResource();\n    },\n  },\n};\n",{"version":3,"sources":["ComputeResourceName.vue"],"names":[],"mappings":";;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ComputeResourceName.vue","sourceRoot":"../../static/common/js/components","sourcesContent":["<template>\n  <span :class=\"{ 'font-italic': notAvailable }\">{{ name }}</span>\n</template>\n<script>\nimport { services } from \"django-airavata-api\";\nexport default {\n  name: \"compute-resource-name\",\n  props: {\n    computeResourceId: {\n      type: String,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      computeResource: null,\n      notAvailable: false,\n    };\n  },\n  created() {\n    this.loadComputeResource();\n  },\n  methods: {\n    loadComputeResource() {\n      services.ComputeResourceService.retrieve(\n        { lookup: this.computeResourceId },\n        { ignoreErrors: true, cache: true }\n      )\n        .then((computeResource) => (this.computeResource = computeResource))\n        .catch(() => (this.notAvailable = true));\n    },\n  },\n  computed: {\n    name() {\n      if (this.notAvailable) {\n        return \"N/A\";\n      } else {\n        return this.computeResource ? this.computeResource.hostName : \"\";\n      }\n    },\n  },\n  watch: {\n    computeResourceId() {\n      this.loadComputeResource();\n    },\n  },\n};\n</script>\n"]}]}