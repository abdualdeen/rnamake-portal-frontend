{"remainingRequest":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/dataparsers/node_modules/thread-loader/dist/cjs.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/dataparsers/node_modules/babel-loader/lib/index.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/dataparsers/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/validators/ValidatorFactory.js","dependencies":[{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/validators/ValidatorFactory.js","mtime":1638641844323},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/dataparsers/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/dataparsers/node_modules/thread-loader/dist/cjs.js","mtime":1638646228889},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/dataparsers/node_modules/babel-loader/lib/index.js","mtime":1638646225600},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/dataparsers/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1638646227499}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport _classCallCheck from \"/home/vanishing/git/airavata-django-portal/django_airavata/apps/dataparsers/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vanishing/git/airavata-django-portal/django_airavata/apps/dataparsers/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\nimport MaxLengthValidator from \"./MaxLengthValidator\";\nimport MinLengthValidator from \"./MinLengthValidator\";\nimport RegularExpressionValidator from \"./RegularExpressionValidator\";\nvar VALIDATOR_MAPPING = {\n  \"max-length\": MaxLengthValidator,\n  \"min-length\": MinLengthValidator,\n  regex: RegularExpressionValidator\n};\n\nvar ValidatorFactory =\n/*#__PURE__*/\nfunction () {\n  function ValidatorFactory() {\n    _classCallCheck(this, ValidatorFactory);\n  }\n\n  _createClass(ValidatorFactory, [{\n    key: \"validate\",\n    value: function validate(validationsConfig, value) {\n      var errorMessages = [];\n      validationsConfig.forEach(function (validation) {\n        var validatorClass = VALIDATOR_MAPPING[validation.type];\n        var validator = new validatorClass(validation);\n        var errorMessage = validator.validate(value);\n\n        if (errorMessage !== null) {\n          errorMessages.push(Promise.resolve(errorMessage));\n        }\n      });\n      return errorMessages;\n    }\n  }]);\n\n  return ValidatorFactory;\n}();\n\nexport { ValidatorFactory as default };",{"version":3,"sources":["/home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/validators/ValidatorFactory.js"],"names":["MaxLengthValidator","MinLengthValidator","RegularExpressionValidator","VALIDATOR_MAPPING","regex","ValidatorFactory","validationsConfig","value","errorMessages","forEach","validation","validatorClass","type","validator","errorMessage","validate","push","Promise","resolve"],"mappings":";;;AAAA,OAAOA,kBAAP;AACA,OAAOC,kBAAP;AACA,OAAOC,0BAAP;AAEA,IAAMC,iBAAiB,GAAG;AACxB,gBAAcH,kBADU;AAExB,gBAAcC,kBAFU;AAGxBG,EAAAA,KAAK,EAAEF;AAHiB,CAA1B;;IAKqBG,gB;;;;;;;;;6BACVC,iB,EAAmBC,K,EAAO;AACjC,UAAMC,aAAa,GAAG,EAAtB;AACAF,MAAAA,iBAAiB,CAACG,OAAlB,CAA0B,UAACC,UAAD,EAAgB;AACxC,YAAIC,cAAc,GAAGR,iBAAiB,CAACO,UAAU,CAACE,IAAZ,CAAtC;AACA,YAAIC,SAAS,GAAG,IAAIF,cAAJ,CAAmBD,UAAnB,CAAhB;AACA,YAAII,YAAY,GAAGD,SAAS,CAACE,QAAV,CAAmBR,KAAnB,CAAnB;;AACA,YAAIO,YAAY,KAAK,IAArB,EAA2B;AACzBN,UAAAA,aAAa,CAACQ,IAAd,CAAmBC,OAAO,CAACC,OAAR,CAAgBJ,YAAhB,CAAnB;AACD;AACF,OAPD;AAQA,aAAON,aAAP;AACD;;;;;;SAZkBH,gB","sourcesContent":["import MaxLengthValidator from \"./MaxLengthValidator\";\nimport MinLengthValidator from \"./MinLengthValidator\";\nimport RegularExpressionValidator from \"./RegularExpressionValidator\";\n\nconst VALIDATOR_MAPPING = {\n  \"max-length\": MaxLengthValidator,\n  \"min-length\": MinLengthValidator,\n  regex: RegularExpressionValidator,\n};\nexport default class ValidatorFactory {\n  validate(validationsConfig, value) {\n    const errorMessages = [];\n    validationsConfig.forEach((validation) => {\n      let validatorClass = VALIDATOR_MAPPING[validation.type];\n      let validator = new validatorClass(validation);\n      let errorMessage = validator.validate(value);\n      if (errorMessage !== null) {\n        errorMessages.push(Promise.resolve(errorMessage));\n      }\n    });\n    return errorMessages;\n  }\n}\n"]}]}