{"remainingRequest":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/dataparsers/node_modules/thread-loader/dist/cjs.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/dataparsers/node_modules/babel-loader/lib/index.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/dataparsers/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/home/vanishing/git/airavata-django-portal/django_airavata/static/common/js/mixins/VModelMixin.js","dependencies":[{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/static/common/js/mixins/VModelMixin.js","mtime":1638641844579},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/dataparsers/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/dataparsers/node_modules/thread-loader/dist/cjs.js","mtime":1638646228889},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/dataparsers/node_modules/babel-loader/lib/index.js","mtime":1638646225600},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/dataparsers/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1638646227499}],"contextDependencies":[],"result":["import _typeof from \"/home/vanishing/git/airavata-django-portal/django_airavata/apps/dataparsers/node_modules/@babel/runtime-corejs2/helpers/esm/typeof\";\nimport { models } from \"django-airavata-api\";\nexport default {\n  watch: {\n    data: {\n      handler: function handler(newValue, oldValue) {\n        // Only emit 'input' for objects when one of their deep properties has\n        // changed to prevent infinite loop since 'data' is recloned whenever\n        // 'value' changes\n        if (_typeof(this.value) === \"object\" && newValue === oldValue) {\n          this.$emit(\"input\", newValue);\n        } else if ((this.value === null || _typeof(this.value) !== \"object\") && newValue !== oldValue) {\n          this.$emit(\"input\", newValue);\n        }\n      },\n      deep: true\n    },\n    value: {\n      handler: function handler(newValue) {\n        this.data = this.copyValue(newValue);\n      },\n      deep: true\n    }\n  },\n  methods: {\n    copyValue: function copyValue(value) {\n      var _this = this;\n\n      if (value instanceof Array) {\n        return value.map(function (item) {\n          return _this.copyValue(item);\n        });\n      } else {\n        if (value === null) {\n          return null;\n        } else if (value instanceof models.BaseModel) {\n          return value.clone();\n        } else if (_typeof(value) === \"object\") {\n          return JSON.parse(JSON.stringify(value));\n        } else {\n          // Must be number, boolean or string\n          return value;\n        }\n      }\n    }\n  },\n  data: function data() {\n    return {\n      data: this.copyValue(this.value)\n    };\n  },\n  props: {\n    value: {\n      required: true\n    }\n  }\n};",{"version":3,"sources":["/home/vanishing/git/airavata-django-portal/django_airavata/static/common/js/mixins/VModelMixin.js"],"names":["models","watch","data","handler","newValue","oldValue","value","$emit","deep","copyValue","methods","Array","map","item","BaseModel","clone","JSON","parse","stringify","props","required"],"mappings":";AAAA,SAASA,MAAT,QAAuB,qBAAvB;AAEA,eAAe;AACbC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAE;AACJC,MAAAA,OAAO,EAAE,iBAAUC,QAAV,EAAoBC,QAApB,EAA8B;AACrC;AACA;AACA;AACA,YAAI,QAAO,KAAKC,KAAZ,MAAsB,QAAtB,IAAkCF,QAAQ,KAAKC,QAAnD,EAA6D;AAC3D,eAAKE,KAAL,CAAW,OAAX,EAAoBH,QAApB;AACD,SAFD,MAEO,IACL,CAAC,KAAKE,KAAL,KAAe,IAAf,IAAuB,QAAO,KAAKA,KAAZ,MAAsB,QAA9C,KACAF,QAAQ,KAAKC,QAFR,EAGL;AACA,eAAKE,KAAL,CAAW,OAAX,EAAoBH,QAApB;AACD;AACF,OAbG;AAcJI,MAAAA,IAAI,EAAE;AAdF,KADD;AAiBLF,IAAAA,KAAK,EAAE;AACLH,MAAAA,OAAO,EAAE,iBAAUC,QAAV,EAAoB;AAC3B,aAAKF,IAAL,GAAY,KAAKO,SAAL,CAAeL,QAAf,CAAZ;AACD,OAHI;AAILI,MAAAA,IAAI,EAAE;AAJD;AAjBF,GADM;AAyBbE,EAAAA,OAAO,EAAE;AACPD,IAAAA,SADO,qBACGH,KADH,EACU;AAAA;;AACf,UAAIA,KAAK,YAAYK,KAArB,EAA4B;AAC1B,eAAOL,KAAK,CAACM,GAAN,CAAU,UAACC,IAAD;AAAA,iBAAU,KAAI,CAACJ,SAAL,CAAeI,IAAf,CAAV;AAAA,SAAV,CAAP;AACD,OAFD,MAEO;AACL,YAAIP,KAAK,KAAK,IAAd,EAAoB;AAClB,iBAAO,IAAP;AACD,SAFD,MAEO,IAAIA,KAAK,YAAYN,MAAM,CAACc,SAA5B,EAAuC;AAC5C,iBAAOR,KAAK,CAACS,KAAN,EAAP;AACD,SAFM,MAEA,IAAI,QAAOT,KAAP,MAAiB,QAArB,EAA+B;AACpC,iBAAOU,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeZ,KAAf,CAAX,CAAP;AACD,SAFM,MAEA;AACL;AACA,iBAAOA,KAAP;AACD;AACF;AACF;AAhBM,GAzBI;AA2CbJ,EAAAA,IAAI,EAAE,gBAAY;AAChB,WAAO;AACLA,MAAAA,IAAI,EAAE,KAAKO,SAAL,CAAe,KAAKH,KAApB;AADD,KAAP;AAGD,GA/CY;AAgDba,EAAAA,KAAK,EAAE;AACLb,IAAAA,KAAK,EAAE;AACLc,MAAAA,QAAQ,EAAE;AADL;AADF;AAhDM,CAAf","sourcesContent":["import { models } from \"django-airavata-api\";\n\nexport default {\n  watch: {\n    data: {\n      handler: function (newValue, oldValue) {\n        // Only emit 'input' for objects when one of their deep properties has\n        // changed to prevent infinite loop since 'data' is recloned whenever\n        // 'value' changes\n        if (typeof this.value === \"object\" && newValue === oldValue) {\n          this.$emit(\"input\", newValue);\n        } else if (\n          (this.value === null || typeof this.value !== \"object\") &&\n          newValue !== oldValue\n        ) {\n          this.$emit(\"input\", newValue);\n        }\n      },\n      deep: true,\n    },\n    value: {\n      handler: function (newValue) {\n        this.data = this.copyValue(newValue);\n      },\n      deep: true,\n    },\n  },\n  methods: {\n    copyValue(value) {\n      if (value instanceof Array) {\n        return value.map((item) => this.copyValue(item));\n      } else {\n        if (value === null) {\n          return null;\n        } else if (value instanceof models.BaseModel) {\n          return value.clone();\n        } else if (typeof value === \"object\") {\n          return JSON.parse(JSON.stringify(value));\n        } else {\n          // Must be number, boolean or string\n          return value;\n        }\n      }\n    },\n  },\n  data: function () {\n    return {\n      data: this.copyValue(this.value),\n    };\n  },\n  props: {\n    value: {\n      required: true,\n    },\n  },\n};\n"]}]}