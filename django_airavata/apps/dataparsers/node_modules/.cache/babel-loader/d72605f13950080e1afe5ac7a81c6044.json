{"remainingRequest":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/dataparsers/node_modules/thread-loader/dist/cjs.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/dataparsers/node_modules/babel-loader/lib/index.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/dataparsers/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/ExperimentStatus.js","dependencies":[{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/ExperimentStatus.js","mtime":1638641844319},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/dataparsers/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/dataparsers/node_modules/thread-loader/dist/cjs.js","mtime":1638646228889},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/dataparsers/node_modules/babel-loader/lib/index.js","mtime":1638646225600},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/dataparsers/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1638646227499}],"contextDependencies":[],"result":["import _classCallCheck from \"/home/vanishing/git/airavata-django-portal/django_airavata/apps/dataparsers/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vanishing/git/airavata-django-portal/django_airavata/apps/dataparsers/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vanishing/git/airavata-django-portal/django_airavata/apps/dataparsers/node_modules/@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vanishing/git/airavata-django-portal/django_airavata/apps/dataparsers/node_modules/@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vanishing/git/airavata-django-portal/django_airavata/apps/dataparsers/node_modules/@babel/runtime-corejs2/helpers/esm/inherits\";\nimport BaseModel from \"./BaseModel\";\nimport ExperimentState from \"./ExperimentState\";\nvar FIELDS = [{\n  name: \"state\",\n  type: ExperimentState\n}, {\n  name: \"timeOfStateChange\",\n  type: \"date\"\n}, \"reason\", \"statusId\"];\n\nvar ExperimentStatus =\n/*#__PURE__*/\nfunction (_BaseModel) {\n  _inherits(ExperimentStatus, _BaseModel);\n\n  function ExperimentStatus() {\n    var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, ExperimentStatus);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ExperimentStatus).call(this, FIELDS, data));\n  }\n\n  _createClass(ExperimentStatus, [{\n    key: \"isProgressing\",\n    get: function get() {\n      return this.state && this.state.isProgressing;\n    }\n  }, {\n    key: \"isFinished\",\n    get: function get() {\n      return this.state && this.state.isFinished;\n    }\n  }]);\n\n  return ExperimentStatus;\n}(BaseModel);\n\nexport { ExperimentStatus as default };",{"version":3,"sources":["/home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/ExperimentStatus.js"],"names":["BaseModel","ExperimentState","FIELDS","name","type","ExperimentStatus","data","state","isProgressing","isFinished"],"mappings":";;;;;AAAA,OAAOA,SAAP;AACA,OAAOC,eAAP;AAEA,IAAMC,MAAM,GAAG,CACb;AACEC,EAAAA,IAAI,EAAE,OADR;AAEEC,EAAAA,IAAI,EAAEH;AAFR,CADa,EAKb;AACEE,EAAAA,IAAI,EAAE,mBADR;AAEEC,EAAAA,IAAI,EAAE;AAFR,CALa,EASb,QATa,EAUb,UAVa,CAAf;;IAaqBC,gB;;;;;AACnB,8BAAuB;AAAA,QAAXC,IAAW,uEAAJ,EAAI;;AAAA;;AAAA,yFACfJ,MADe,EACPI,IADO;AAEtB;;;;wBAEmB;AAClB,aAAO,KAAKC,KAAL,IAAc,KAAKA,KAAL,CAAWC,aAAhC;AACD;;;wBAEgB;AACf,aAAO,KAAKD,KAAL,IAAc,KAAKA,KAAL,CAAWE,UAAhC;AACD;;;;EAX2CT,S;;SAAzBK,gB","sourcesContent":["import BaseModel from \"./BaseModel\";\nimport ExperimentState from \"./ExperimentState\";\n\nconst FIELDS = [\n  {\n    name: \"state\",\n    type: ExperimentState,\n  },\n  {\n    name: \"timeOfStateChange\",\n    type: \"date\",\n  },\n  \"reason\",\n  \"statusId\",\n];\n\nexport default class ExperimentStatus extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n  }\n\n  get isProgressing() {\n    return this.state && this.state.isProgressing;\n  }\n\n  get isFinished() {\n    return this.state && this.state.isFinished;\n  }\n}\n"]}]}