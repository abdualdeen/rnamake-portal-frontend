{"remainingRequest":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/static/django_airavata_workspace/js/containers/DashboardContainer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/static/django_airavata_workspace/js/containers/DashboardContainer.vue","mtime":1638641844343},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/thread-loader/dist/cjs.js","mtime":1638646228889},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/babel-loader/lib/index.js","mtime":1638646225600},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/vue-loader/lib/index.js","mtime":1638646228900}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { services, session } from \"django-airavata-api\";\nimport { components as comps } from \"django-airavata-common-ui\";\nimport urls from \"../utils/urls\";\nimport PgaLink from \"../components/PgaLink\";\n\nexport default {\n  name: \"dashboard-container\",\n  data() {\n    return {\n      accessibleAppModules: null,\n      userProfile: null,\n      allApplicationModules: null,\n      workspacePreferences: null,\n    };\n  },\n  components: {\n    \"application-card\": comps.ApplicationCard,\n    \"favorite-toggle\": comps.FavoriteToggle,\n    \"pga-link\": PgaLink,\n  },\n  methods: {\n    handleAppSelected: function (appModule) {\n      urls.navigateToCreateExperiment(appModule);\n    },\n    markFavorite(appModule) {\n      services.ApplicationModuleService.favorite({\n        lookup: appModule.appModuleId,\n      })\n        .then(() => {\n          return services.WorkspacePreferencesService.get().then(\n            (prefs) => (this.workspacePreferences = prefs)\n          );\n        })\n        .then(() => {\n          const index = this.favoriteApplicationsData.findIndex(\n            (data) => data.appModule.appModuleId === appModule.appModuleId\n          );\n          this.$nextTick(() => {\n            this.$refs.favoriteApplicationCards[index].$el.scrollIntoView({\n              behavior: \"smooth\",\n              block: \"center\",\n            });\n          });\n        });\n    },\n    markNotFavorite(appModule) {\n      services.ApplicationModuleService.unfavorite({\n        lookup: appModule.appModuleId,\n      }).then(() => {\n        return services.WorkspacePreferencesService.get().then(\n          (prefs) => (this.workspacePreferences = prefs)\n        );\n      });\n    },\n  },\n  computed: {\n    isNewUser() {\n      return (\n        this.userProfile &&\n        Date.now() - this.userProfile.creationTime.getTime() <\n          7 * 24 * 60 * 60 * 1000\n      );\n    },\n    showNewUserMessage() {\n      return (\n        this.isNewUser &&\n        this.userProfile &&\n        this.accessibleAppModules &&\n        this.accessibleAppModules.length === 0\n      );\n    },\n    accessibleModuleIds() {\n      return this.accessibleAppModules\n        ? this.accessibleAppModules.map((a) => a.appModuleId)\n        : [];\n    },\n    allApplicationData() {\n      return this.allApplicationModules\n        ? this.allApplicationModules.map((app) => {\n            return {\n              appModule: app,\n              disabled: this.accessibleModuleIds.indexOf(app.appModuleId) < 0,\n            };\n          })\n        : [];\n    },\n    favoriteApplicationsData() {\n      return this.allApplicationData.filter(\n        (app) =>\n          this.favoriteApplicationIds.indexOf(app.appModule.appModuleId) >= 0\n      );\n    },\n    nonFavoriteApplicationsData() {\n      return this.allApplicationData.filter(\n        (app) =>\n          this.favoriteApplicationIds.indexOf(app.appModule.appModuleId) < 0\n      );\n    },\n    favoriteApplicationIds() {\n      if (\n        this.workspacePreferences &&\n        this.workspacePreferences.application_preferences\n      ) {\n        return this.workspacePreferences.application_preferences\n          .filter((p) => p.favorite)\n          .map((p) => p.application_id);\n      } else {\n        return [];\n      }\n    },\n  },\n  beforeMount: function () {\n    services.ApplicationModuleService.list().then(\n      (result) => (this.accessibleAppModules = result)\n    );\n    services.UserProfileService.retrieve({\n      lookup: session.Session.username,\n    }).then((userProfile) => (this.userProfile = userProfile));\n    // Load all application, including ones that aren't accessible by this user\n    services.ApplicationModuleService.listAll().then(\n      (result) => (this.allApplicationModules = result)\n    );\n    services.WorkspacePreferencesService.get().then(\n      (prefs) => (this.workspacePreferences = prefs)\n    );\n  },\n};\n",{"version":3,"sources":["DashboardContainer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"DashboardContainer.vue","sourceRoot":"static/django_airavata_workspace/js/containers","sourcesContent":["<template>\n  <div>\n    <pga-link />\n    <div class=\"row\">\n      <div class=\"col\">\n        <h1 class=\"h4 mb-4\">Dashboard</h1>\n        <h2 class=\"h6 mb-2 text-uppercase text-muted\">Applications</h2>\n      </div>\n    </div>\n    <div class=\"row\" v-if=\"showNewUserMessage\">\n      <div class=\"col\">\n        <b-alert variant=\"info\" show\n          >Welcome {{ userProfile.firstName }} {{ userProfile.lastName }}! You\n          currently don't have access to run any applications but the\n          administrator of this gateway has been notified and will be in contact\n          to grant you the appropriate privileges.</b-alert\n        >\n      </div>\n    </div>\n    <template v-if=\"favoriteApplicationsData.length > 0\">\n      <div class=\"row\">\n        <div class=\"col\">\n          <h1 class=\"h5 mb-2\">Favorites</h1>\n        </div>\n      </div>\n      <div class=\"row\">\n        <application-card\n          v-for=\"item in favoriteApplicationsData\"\n          v-bind:appModule=\"item.appModule\"\n          v-bind:key=\"item.appModule.appModuleId\"\n          @app-selected=\"handleAppSelected\"\n          :disabled=\"item.disabled\"\n          @favorite=\"markFavorite(item.appModule)\"\n          @unfavorite=\"markNotFavorite(item.appModule)\"\n          ref=\"favoriteApplicationCards\"\n        >\n          <favorite-toggle\n            slot=\"card-actions\"\n            :favorite=\"true\"\n            class=\"card-link\"\n            @favorite=\"markFavorite(item.appModule)\"\n            @unfavorite=\"markNotFavorite(item.appModule)\"\n          />\n        </application-card>\n      </div>\n      <hr />\n    </template>\n    <div class=\"row\">\n      <application-card\n        v-for=\"item in nonFavoriteApplicationsData\"\n        v-bind:appModule=\"item.appModule\"\n        v-bind:key=\"item.appModule.appModuleId\"\n        @app-selected=\"handleAppSelected\"\n        :disabled=\"item.disabled\"\n        @favorite=\"markFavorite(item.appModule)\"\n        @unfavorite=\"markNotFavorite(item.appModule)\"\n      >\n        <favorite-toggle\n          slot=\"card-actions\"\n          :favorite=\"false\"\n          class=\"card-link\"\n          @favorite=\"markFavorite(item.appModule)\"\n          @unfavorite=\"markNotFavorite(item.appModule)\"\n        />\n      </application-card>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { services, session } from \"django-airavata-api\";\nimport { components as comps } from \"django-airavata-common-ui\";\nimport urls from \"../utils/urls\";\nimport PgaLink from \"../components/PgaLink\";\n\nexport default {\n  name: \"dashboard-container\",\n  data() {\n    return {\n      accessibleAppModules: null,\n      userProfile: null,\n      allApplicationModules: null,\n      workspacePreferences: null,\n    };\n  },\n  components: {\n    \"application-card\": comps.ApplicationCard,\n    \"favorite-toggle\": comps.FavoriteToggle,\n    \"pga-link\": PgaLink,\n  },\n  methods: {\n    handleAppSelected: function (appModule) {\n      urls.navigateToCreateExperiment(appModule);\n    },\n    markFavorite(appModule) {\n      services.ApplicationModuleService.favorite({\n        lookup: appModule.appModuleId,\n      })\n        .then(() => {\n          return services.WorkspacePreferencesService.get().then(\n            (prefs) => (this.workspacePreferences = prefs)\n          );\n        })\n        .then(() => {\n          const index = this.favoriteApplicationsData.findIndex(\n            (data) => data.appModule.appModuleId === appModule.appModuleId\n          );\n          this.$nextTick(() => {\n            this.$refs.favoriteApplicationCards[index].$el.scrollIntoView({\n              behavior: \"smooth\",\n              block: \"center\",\n            });\n          });\n        });\n    },\n    markNotFavorite(appModule) {\n      services.ApplicationModuleService.unfavorite({\n        lookup: appModule.appModuleId,\n      }).then(() => {\n        return services.WorkspacePreferencesService.get().then(\n          (prefs) => (this.workspacePreferences = prefs)\n        );\n      });\n    },\n  },\n  computed: {\n    isNewUser() {\n      return (\n        this.userProfile &&\n        Date.now() - this.userProfile.creationTime.getTime() <\n          7 * 24 * 60 * 60 * 1000\n      );\n    },\n    showNewUserMessage() {\n      return (\n        this.isNewUser &&\n        this.userProfile &&\n        this.accessibleAppModules &&\n        this.accessibleAppModules.length === 0\n      );\n    },\n    accessibleModuleIds() {\n      return this.accessibleAppModules\n        ? this.accessibleAppModules.map((a) => a.appModuleId)\n        : [];\n    },\n    allApplicationData() {\n      return this.allApplicationModules\n        ? this.allApplicationModules.map((app) => {\n            return {\n              appModule: app,\n              disabled: this.accessibleModuleIds.indexOf(app.appModuleId) < 0,\n            };\n          })\n        : [];\n    },\n    favoriteApplicationsData() {\n      return this.allApplicationData.filter(\n        (app) =>\n          this.favoriteApplicationIds.indexOf(app.appModule.appModuleId) >= 0\n      );\n    },\n    nonFavoriteApplicationsData() {\n      return this.allApplicationData.filter(\n        (app) =>\n          this.favoriteApplicationIds.indexOf(app.appModule.appModuleId) < 0\n      );\n    },\n    favoriteApplicationIds() {\n      if (\n        this.workspacePreferences &&\n        this.workspacePreferences.application_preferences\n      ) {\n        return this.workspacePreferences.application_preferences\n          .filter((p) => p.favorite)\n          .map((p) => p.application_id);\n      } else {\n        return [];\n      }\n    },\n  },\n  beforeMount: function () {\n    services.ApplicationModuleService.list().then(\n      (result) => (this.accessibleAppModules = result)\n    );\n    services.UserProfileService.retrieve({\n      lookup: session.Session.username,\n    }).then((userProfile) => (this.userProfile = userProfile));\n    // Load all application, including ones that aren't accessible by this user\n    services.ApplicationModuleService.listAll().then(\n      (result) => (this.allApplicationModules = result)\n    );\n    services.WorkspacePreferencesService.get().then(\n      (prefs) => (this.workspacePreferences = prefs)\n    );\n  },\n};\n</script>\n"]}]}