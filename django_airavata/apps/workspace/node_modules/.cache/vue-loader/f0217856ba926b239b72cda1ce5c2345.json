{"remainingRequest":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/static/django_airavata_workspace/js/components/experiment/input-editors/CheckboxInputEditor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/static/django_airavata_workspace/js/components/experiment/input-editors/CheckboxInputEditor.vue","mtime":1638641844339},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/babel-loader/lib/index.js","mtime":1638646225600},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/vue-loader/lib/index.js","mtime":1638646228900}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { InputEditorMixin } from \"django-airavata-workspace-plugin-api\";\n\nconst CONFIG_OPTION_TEXT_KEY = \"text\";\nconst CONFIG_OPTION_VALUE_KEY = \"value\";\n\nexport default {\n  name: \"checkbox-input-editor\",\n  mixins: [InputEditorMixin],\n  props: {\n    value: {\n      type: String,\n    },\n    options: {\n      type: Array,\n      default: null,\n    },\n  },\n  computed: {\n    checkboxOptions: function () {\n      // passed in options take precedence over options in input metadata\n      const options = this.options || this.editorConfig.options || [];\n      return options.map((option) => {\n        return {\n          text: option[CONFIG_OPTION_TEXT_KEY],\n          value: option[CONFIG_OPTION_VALUE_KEY],\n        };\n      });\n    },\n    selectedOptions() {\n      return this.data ? this.data.split(\",\") : [];\n    },\n  },\n  methods: {\n    selectionsChanged(values) {\n      this.data = values && values.length > 0 ? values.join(\",\") : null;\n      this.valueChanged();\n    },\n  },\n};\n",{"version":3,"sources":["CheckboxInputEditor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgBA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CheckboxInputEditor.vue","sourceRoot":"static/django_airavata_workspace/js/components/experiment/input-editors","sourcesContent":["<template>\n  <!-- stop propagation of native input events so that they don't conflict with\n  native input events generated by web component wrappers -->\n  <b-form-checkbox-group\n    :id=\"id\"\n    :checked=\"selectedOptions\"\n    :options=\"checkboxOptions\"\n    stacked\n    :state=\"componentValidState\"\n    :disabled=\"readOnly\"\n    @input=\"selectionsChanged\"\n    @input.native.stop\n  />\n</template>\n\n<script>\nimport { InputEditorMixin } from \"django-airavata-workspace-plugin-api\";\n\nconst CONFIG_OPTION_TEXT_KEY = \"text\";\nconst CONFIG_OPTION_VALUE_KEY = \"value\";\n\nexport default {\n  name: \"checkbox-input-editor\",\n  mixins: [InputEditorMixin],\n  props: {\n    value: {\n      type: String,\n    },\n    options: {\n      type: Array,\n      default: null,\n    },\n  },\n  computed: {\n    checkboxOptions: function () {\n      // passed in options take precedence over options in input metadata\n      const options = this.options || this.editorConfig.options || [];\n      return options.map((option) => {\n        return {\n          text: option[CONFIG_OPTION_TEXT_KEY],\n          value: option[CONFIG_OPTION_VALUE_KEY],\n        };\n      });\n    },\n    selectedOptions() {\n      return this.data ? this.data.split(\",\") : [];\n    },\n  },\n  methods: {\n    selectionsChanged(values) {\n      this.data = values && values.length > 0 ? values.join(\",\") : null;\n      this.valueChanged();\n    },\n  },\n};\n</script>\n"]}]}