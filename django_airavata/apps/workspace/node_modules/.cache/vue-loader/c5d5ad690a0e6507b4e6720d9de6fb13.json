{"remainingRequest":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/static/django_airavata_workspace/js/components/experiment/GroupResourceProfileSelector.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/static/django_airavata_workspace/js/components/experiment/GroupResourceProfileSelector.vue","mtime":1638641844339},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/thread-loader/dist/cjs.js","mtime":1638646228889},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/babel-loader/lib/index.js","mtime":1638646225600},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/vue-loader/lib/index.js","mtime":1638646228900}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { services } from \"django-airavata-api\";\n\nexport default {\n  name: \"group-resource-profile-selector\",\n  props: {\n    value: {\n      type: String,\n    },\n  },\n  data() {\n    return {\n      groupResourceProfileId: this.value,\n      groupResourceProfiles: [],\n      workspacePreferences: null,\n    };\n  },\n  mounted: function () {\n    this.loadWorkspacePreferences().then(() => {\n      return this.loadGroupResourceProfiles();\n    });\n  },\n  computed: {\n    groupResourceProfileOptions: function () {\n      if (this.groupResourceProfiles && this.groupResourceProfiles.length > 0) {\n        const groupResourceProfileOptions = this.groupResourceProfiles.map(\n          (groupResourceProfile) => {\n            return {\n              value: groupResourceProfile.groupResourceProfileId,\n              text: groupResourceProfile.groupResourceProfileName,\n            };\n          }\n        );\n        groupResourceProfileOptions.sort((a, b) =>\n          a.text.localeCompare(b.text)\n        );\n        return groupResourceProfileOptions;\n      } else {\n        return [];\n      }\n    },\n  },\n  methods: {\n    loadGroupResourceProfiles: function () {\n      return services.GroupResourceProfileService.list().then(\n        (groupResourceProfiles) => {\n          this.groupResourceProfiles = groupResourceProfiles;\n          if (\n            (!this.value ||\n              !this.selectedValueInGroupResourceProfileList(\n                groupResourceProfiles\n              )) &&\n            this.groupResourceProfiles &&\n            this.groupResourceProfiles.length > 0\n          ) {\n            // automatically select the last one user selected\n            this.groupResourceProfileId = this.workspacePreferences.most_recent_group_resource_profile_id;\n            this.emitValueChanged();\n          }\n        }\n      );\n    },\n    loadWorkspacePreferences() {\n      return services.WorkspacePreferencesService.get().then(\n        (workspacePreferences) =>\n          (this.workspacePreferences = workspacePreferences)\n      );\n    },\n    groupResourceProfileChanged: function (groupResourceProfileId) {\n      this.groupResourceProfileId = groupResourceProfileId;\n      this.emitValueChanged();\n    },\n    emitValueChanged: function () {\n      this.$emit(\"input\", this.groupResourceProfileId);\n    },\n    selectedValueInGroupResourceProfileList(groupResourceProfiles) {\n      return (\n        groupResourceProfiles\n          .map((grp) => grp.groupResourceProfileId)\n          .indexOf(this.value) >= 0\n      );\n    },\n  },\n  watch: {},\n};\n",{"version":3,"sources":["GroupResourceProfileSelector.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAqBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"GroupResourceProfileSelector.vue","sourceRoot":"static/django_airavata_workspace/js/components/experiment","sourcesContent":["<template>\n  <div class=\"row\">\n    <div class=\"col\">\n      <b-form-group label=\"Allocation\" label-for=\"group-resource-profile\">\n        <b-form-select\n          id=\"group-resource-profile\"\n          v-model=\"groupResourceProfileId\"\n          :options=\"groupResourceProfileOptions\"\n          required\n          @change=\"groupResourceProfileChanged\"\n        >\n          <template slot=\"first\">\n            <option :value=\"null\" disabled>Select an allocation</option>\n          </template>\n        </b-form-select>\n      </b-form-group>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { services } from \"django-airavata-api\";\n\nexport default {\n  name: \"group-resource-profile-selector\",\n  props: {\n    value: {\n      type: String,\n    },\n  },\n  data() {\n    return {\n      groupResourceProfileId: this.value,\n      groupResourceProfiles: [],\n      workspacePreferences: null,\n    };\n  },\n  mounted: function () {\n    this.loadWorkspacePreferences().then(() => {\n      return this.loadGroupResourceProfiles();\n    });\n  },\n  computed: {\n    groupResourceProfileOptions: function () {\n      if (this.groupResourceProfiles && this.groupResourceProfiles.length > 0) {\n        const groupResourceProfileOptions = this.groupResourceProfiles.map(\n          (groupResourceProfile) => {\n            return {\n              value: groupResourceProfile.groupResourceProfileId,\n              text: groupResourceProfile.groupResourceProfileName,\n            };\n          }\n        );\n        groupResourceProfileOptions.sort((a, b) =>\n          a.text.localeCompare(b.text)\n        );\n        return groupResourceProfileOptions;\n      } else {\n        return [];\n      }\n    },\n  },\n  methods: {\n    loadGroupResourceProfiles: function () {\n      return services.GroupResourceProfileService.list().then(\n        (groupResourceProfiles) => {\n          this.groupResourceProfiles = groupResourceProfiles;\n          if (\n            (!this.value ||\n              !this.selectedValueInGroupResourceProfileList(\n                groupResourceProfiles\n              )) &&\n            this.groupResourceProfiles &&\n            this.groupResourceProfiles.length > 0\n          ) {\n            // automatically select the last one user selected\n            this.groupResourceProfileId = this.workspacePreferences.most_recent_group_resource_profile_id;\n            this.emitValueChanged();\n          }\n        }\n      );\n    },\n    loadWorkspacePreferences() {\n      return services.WorkspacePreferencesService.get().then(\n        (workspacePreferences) =>\n          (this.workspacePreferences = workspacePreferences)\n      );\n    },\n    groupResourceProfileChanged: function (groupResourceProfileId) {\n      this.groupResourceProfileId = groupResourceProfileId;\n      this.emitValueChanged();\n    },\n    emitValueChanged: function () {\n      this.$emit(\"input\", this.groupResourceProfileId);\n    },\n    selectedValueInGroupResourceProfileList(groupResourceProfiles) {\n      return (\n        groupResourceProfiles\n          .map((grp) => grp.groupResourceProfileId)\n          .indexOf(this.value) >= 0\n      );\n    },\n  },\n  watch: {},\n};\n</script>\n\n<style></style>\n"]}]}