{"remainingRequest":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/static/django_airavata_workspace/js/containers/CreateExperimentContainer.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/static/django_airavata_workspace/js/containers/CreateExperimentContainer.vue","mtime":1638641844343},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/css-loader/index.js","mtime":1638646228588},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1638646228900},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/postcss-loader/src/index.js","mtime":1638646228869},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/vue-loader/lib/index.js","mtime":1638646228900}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* style the containing div, in base.html template */\n.main-content-wrapper {\n  background-color: #ffffff;\n}\n",{"version":3,"sources":["CreateExperimentContainer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgFA;AACA;AACA;AACA","file":"CreateExperimentContainer.vue","sourceRoot":"static/django_airavata_workspace/js/containers","sourcesContent":["<template>\n  <experiment-editor\n    v-if=\"experiment\"\n    :experiment=\"experiment\"\n    :app-module=\"appModule\"\n    @saved=\"handleSavedExperiment\"\n    @savedAndLaunched=\"handleSavedAndLaunchedExperiment\"\n  >\n    <span slot=\"title\">Create a New Experiment</span>\n  </experiment-editor>\n</template>\n\n<script>\nimport { services } from \"django-airavata-api\";\nimport { notifications } from \"django-airavata-common-ui\";\nimport ExperimentEditor from \"../components/experiment/ExperimentEditor.vue\";\nimport urls from \"../utils/urls\";\n\nimport moment from \"moment\";\n\nexport default {\n  name: \"create-experiment-container\",\n  props: [\"app-module-id\", \"user-input-values\", \"experiment-data-dir\"],\n  data() {\n    return {\n      experiment: null,\n      appModule: null,\n    };\n  },\n  components: {\n    \"experiment-editor\": ExperimentEditor,\n  },\n  methods: {\n    handleSavedExperiment: function () {\n      // Redirect to experiment view\n      urls.navigateToExperimentsList();\n    },\n    handleSavedAndLaunchedExperiment: function (experiment) {\n      // Redirect to experiment view\n      urls.navigateToViewExperiment(experiment, { launching: true });\n    },\n  },\n  computed: {},\n  mounted: function () {\n    const loadAppModule = services.ApplicationModuleService.retrieve(\n      { lookup: this.appModuleId },\n      { ignoreErrors: true }\n    );\n    const loadAppInterface = services.ApplicationModuleService.getApplicationInterface(\n      { lookup: this.appModuleId },\n      { ignoreErrors: true }\n    );\n    Promise.all([loadAppModule, loadAppInterface])\n      .then(([appModule, appInterface]) => {\n        const experiment = appInterface.createExperiment();\n        experiment.experimentName =\n          appModule.appModuleName + \" on \" + moment().format(\"lll\");\n        this.appModule = appModule;\n        if (this.userInputValues) {\n          Object.keys(this.userInputValues).forEach((k) => {\n            const experimentInput = experiment.experimentInputs.find(\n              (inp) => inp.name === k\n            );\n            if (experimentInput) {\n              experimentInput.value = this.userInputValues[k];\n            }\n          });\n        }\n        if (this.experimentDataDir) {\n          experiment.userConfigurationData.experimentDataDir = this.experimentDataDir;\n        }\n        this.experiment = experiment;\n      })\n      .catch((error) => {\n        notifications.NotificationList.addError(error);\n      });\n  },\n};\n</script>\n<style>\n/* style the containing div, in base.html template */\n.main-content-wrapper {\n  background-color: #ffffff;\n}\n</style>\n"]}]}