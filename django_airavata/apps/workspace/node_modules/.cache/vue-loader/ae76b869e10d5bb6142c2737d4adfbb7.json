{"remainingRequest":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/static/django_airavata_workspace/js/components/experiment/output-displays/interactive-parameters/InteractiveParametersPanel.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/static/django_airavata_workspace/js/components/experiment/output-displays/interactive-parameters/InteractiveParametersPanel.vue","mtime":1638641844343},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/thread-loader/dist/cjs.js","mtime":1638646228889},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/babel-loader/lib/index.js","mtime":1638646225600},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/vue-loader/lib/index.js","mtime":1638646228900}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport InteractiveParameterWidgetContainer from \"./InteractiveParameterWidgetContainer\";\nimport { components } from \"django-airavata-common-ui\";\n\nexport default {\n  name: \"interactive-parameters-panel\",\n  components: {\n    InteractiveParameterWidgetContainer,\n    \"validated-form\": components.ValidatedForm,\n  },\n  props: {\n    parameters: {\n      type: Array,\n      required: true,\n    },\n  },\n  computed: {\n    formItems() {\n      return this.localParameters.map((p) => {\n        return {\n          key: p.name,\n          label: p.label || p.name,\n          item: p,\n          description: p.help,\n        };\n      });\n    },\n    valid() {\n      return this.$refs.validatedForm.valid;\n    },\n  },\n  data() {\n    return {\n      localParameters: this.parametersCopy(),\n    };\n  },\n  methods: {\n    updated(param, value) {\n      const i = this.localParameters.findIndex((x) => x.name === param.name);\n      this.localParameters[i].value = value;\n      this.$emit(\"input\", this.localParameters);\n    },\n    parametersCopy() {\n      return JSON.parse(JSON.stringify(this.parameters));\n    },\n  },\n  watch: {\n    parameters() {\n      this.localParameters = this.parametersCopy();\n    },\n  },\n};\n",{"version":3,"sources":["InteractiveParametersPanel.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAeA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"InteractiveParametersPanel.vue","sourceRoot":"static/django_airavata_workspace/js/components/experiment/output-displays/interactive-parameters","sourcesContent":["<template>\n  <b-card title=\"Parameters\">\n    <validated-form ref=\"validatedForm\" :items=\"formItems\">\n      <interactive-parameter-widget-container\n        slot-scope=\"form\"\n        :parameter=\"form.item\"\n        @valid=\"form.valid\"\n        @invalid=\"form.invalid\"\n        @input=\"updated(form.item, $event)\"\n      />\n    </validated-form>\n  </b-card>\n</template>\n\n<script>\nimport InteractiveParameterWidgetContainer from \"./InteractiveParameterWidgetContainer\";\nimport { components } from \"django-airavata-common-ui\";\n\nexport default {\n  name: \"interactive-parameters-panel\",\n  components: {\n    InteractiveParameterWidgetContainer,\n    \"validated-form\": components.ValidatedForm,\n  },\n  props: {\n    parameters: {\n      type: Array,\n      required: true,\n    },\n  },\n  computed: {\n    formItems() {\n      return this.localParameters.map((p) => {\n        return {\n          key: p.name,\n          label: p.label || p.name,\n          item: p,\n          description: p.help,\n        };\n      });\n    },\n    valid() {\n      return this.$refs.validatedForm.valid;\n    },\n  },\n  data() {\n    return {\n      localParameters: this.parametersCopy(),\n    };\n  },\n  methods: {\n    updated(param, value) {\n      const i = this.localParameters.findIndex((x) => x.name === param.name);\n      this.localParameters[i].value = value;\n      this.$emit(\"input\", this.localParameters);\n    },\n    parametersCopy() {\n      return JSON.parse(JSON.stringify(this.parameters));\n    },\n  },\n  watch: {\n    parameters() {\n      this.localParameters = this.parametersCopy();\n    },\n  },\n};\n</script>\n"]}]}