{"remainingRequest":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/static/django_airavata_workspace/js/web-components/QueueSettingsEditor.vue?vue&type=style&index=0&lang=scss&shadow","dependencies":[{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/static/django_airavata_workspace/js/web-components/QueueSettingsEditor.vue","mtime":1638641844346},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/css-loader/index.js","mtime":1638646228588},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1638646228900},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/postcss-loader/src/index.js","mtime":1638646228869},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/postcss-loader/src/index.js","mtime":1638646228869},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/sass-loader/dist/cjs.js","mtime":1639685351807},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/vue-loader/lib/index.js","mtime":1638646228900}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import \"./styles\";\n\n:host {\n  display: block;\n  margin-bottom: 1rem;\n}\n",{"version":3,"sources":["QueueSettingsEditor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6NA;;AAEA;AACA;AACA;AACA","file":"QueueSettingsEditor.vue","sourceRoot":"static/django_airavata_workspace/js/web-components","sourcesContent":["<template>\n  <div>\n    <div class=\"card border-default\">\n      <b-link\n        @click=\"showConfiguration = !showConfiguration\"\n        class=\"card-link text-dark\"\n      >\n        <div class=\"card-body\">\n          <h5 class=\"card-title mb-4\">\n            Settings for queue {{ selectedQueueName }}\n          </h5>\n          <div class=\"row\">\n            <div class=\"col\">\n              <h3 class=\"h5 mb-0\">\n                {{ nodeCount }}\n              </h3>\n              <span class=\"text-muted text-uppercase\">NODE COUNT</span>\n            </div>\n            <div class=\"col\">\n              <h3 class=\"h5 mb-0\">\n                {{ totalCPUCount }}\n              </h3>\n              <span class=\"text-muted text-uppercase\">CORE COUNT</span>\n            </div>\n            <div class=\"col\">\n              <h3 class=\"h5 mb-0\">{{ wallTimeLimit }} minutes</h3>\n              <span class=\"text-muted text-uppercase\">TIME LIMIT</span>\n            </div>\n            <div class=\"col\" v-if=\"maxMemory > 0\">\n              <h3 class=\"h5 mb-0\">{{ totalPhysicalMemory }} MB</h3>\n              <span class=\"text-muted text-uppercase\">PHYSICAL MEMORY</span>\n            </div>\n          </div>\n        </div>\n      </b-link>\n    </div>\n    <div v-if=\"showConfiguration\">\n      <b-form-group label=\"Select a Queue\" label-for=\"queue\">\n        <b-form-select\n          id=\"queue\"\n          :value=\"selectedQueueName\"\n          :options=\"queueOptions\"\n          required\n          @change=\"queueChanged\"\n        >\n        </b-form-select>\n        <div slot=\"description\">{{ queueDescription }}</div>\n      </b-form-group>\n      <b-form-group label=\"Node Count\" label-for=\"node-count\">\n        <b-form-input\n          id=\"node-count\"\n          type=\"number\"\n          min=\"1\"\n          :max=\"maxAllowedNodes\"\n          :value=\"nodeCount\"\n          required\n          @input.native.stop=\"updateNodeCount\"\n        >\n        </b-form-input>\n        <div slot=\"description\">\n          <i class=\"fa fa-info-circle\" aria-hidden=\"true\"></i>\n          Max Allowed Nodes = {{ maxAllowedNodes }}\n        </div>\n      </b-form-group>\n      <b-form-group label=\"Total Core Count\" label-for=\"core-count\">\n        <b-form-input\n          id=\"core-count\"\n          type=\"number\"\n          min=\"1\"\n          :max=\"maxAllowedCores\"\n          :value=\"totalCPUCount\"\n          required\n          @input.native.stop=\"updateTotalCPUCount\"\n        >\n        </b-form-input>\n        <div slot=\"description\">\n          <i class=\"fa fa-info-circle\" aria-hidden=\"true\"></i>\n          Max Allowed Cores = {{ maxAllowedCores }}\n        </div>\n      </b-form-group>\n      <b-form-group label=\"Wall Time Limit\" label-for=\"walltime-limit\">\n        <b-input-group append=\"minutes\">\n          <b-form-input\n            id=\"walltime-limit\"\n            type=\"number\"\n            min=\"1\"\n            :max=\"maxAllowedWalltime\"\n            :value=\"wallTimeLimit\"\n            required\n            @input.native.stop=\"updateWallTimeLimit\"\n          >\n          </b-form-input>\n        </b-input-group>\n        <div slot=\"description\">\n          <i class=\"fa fa-info-circle\" aria-hidden=\"true\"></i>\n          Max Allowed Wall Time = {{ maxAllowedWalltime }} minutes\n        </div>\n      </b-form-group>\n      <b-form-group\n        v-if=\"maxMemory > 0\"\n        label=\"Total Physical Memory\"\n        label-for=\"total-physical-memory\"\n      >\n        <b-input-group append=\"MB\">\n          <b-form-input\n            id=\"total-physical-memory\"\n            type=\"number\"\n            min=\"0\"\n            :max=\"maxMemory\"\n            :value=\"totalPhysicalMemory\"\n            @input.native.stop=\"updateTotalPhysicalMemory\"\n          >\n          </b-form-input>\n        </b-input-group>\n        <div slot=\"description\">\n          <i class=\"fa fa-info-circle\" aria-hidden=\"true\"></i>\n          Max Physical Memory = {{ maxMemory }} MB\n        </div>\n      </b-form-group>\n      <div>\n        <b-link class=\"text-secondary\" @click=\"showConfiguration = false\">\n          <i class=\"fa fa-times\" aria-hidden=\"true\"></i>\n          Hide Settings</b-link\n        >\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { utils } from \"django-airavata-api\";\nimport Vue from \"vue\";\nimport store from \"./store\";\nimport { mapGetters } from \"vuex\";\nimport { BootstrapVue } from \"bootstrap-vue\";\nVue.use(BootstrapVue);\n\nexport default {\n  store: store,\n  props: {\n    queueName: {\n      type: String,\n    },\n  },\n  created() {\n    if (this.queueName && this.selectedQueueName !== this.queueName) {\n      this.queueChanged(this.queueName);\n    }\n  },\n  data() {\n    return {\n      showConfiguration: false,\n    };\n  },\n  computed: {\n    ...mapGetters({\n      queue: \"queue\",\n      queues: \"queues\",\n      maxAllowedCores: \"maxAllowedCores\",\n      maxAllowedNodes: \"maxAllowedNodes\",\n      maxAllowedWalltime: \"maxAllowedWalltime\",\n      maxMemory: \"maxMemory\",\n      selectedQueueName: \"queueName\",\n      totalCPUCount: \"totalCPUCount\",\n      nodeCount: \"nodeCount\",\n      wallTimeLimit: \"wallTimeLimit\",\n      totalPhysicalMemory: \"totalPhysicalMemory\",\n    }),\n    queueOptions() {\n      if (!this.queues) {\n        return [];\n      }\n      const queueOptions = this.queues.map((q) => {\n        return {\n          value: q.queueName,\n          text: q.queueName,\n        };\n      });\n      utils.StringUtils.sortIgnoreCase(queueOptions, (q) => q.text);\n      return queueOptions;\n    },\n    queueDescription() {\n      return this.queue ? this.queue.queueDescription : null;\n    },\n  },\n  methods: {\n    queueChanged(queueName) {\n      this.$store.dispatch(\"updateQueueName\", { queueName });\n    },\n    updateNodeCount(event) {\n      this.$store.dispatch(\"updateNodeCount\", {\n        nodeCount: event.target.value,\n      });\n    },\n    updateTotalCPUCount(event) {\n      this.$store.dispatch(\"updateTotalCPUCount\", {\n        totalCPUCount: event.target.value,\n      });\n    },\n    updateWallTimeLimit(event) {\n      this.$store.dispatch(\"updateWallTimeLimit\", {\n        wallTimeLimit: event.target.value,\n      });\n    },\n    updateTotalPhysicalMemory(event) {\n      this.$store.dispatch(\"updateTotalPhysicalMemory\", {\n        totalPhysicalMemory: event.target.value,\n      });\n    },\n  },\n  watch: {\n    queueName(value) {\n      if (value && this.selectedQueueName !== value) {\n        this.queueChanged(value);\n      }\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n@import \"./styles\";\n\n:host {\n  display: block;\n  margin-bottom: 1rem;\n}\n</style>\n"]}]}