{"remainingRequest":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/static/django_airavata_workspace/js/components/experiment/output-displays/OutputDisplayContainer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/static/django_airavata_workspace/js/components/experiment/output-displays/OutputDisplayContainer.vue","mtime":1638641844339},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/thread-loader/dist/cjs.js","mtime":1638646228889},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/babel-loader/lib/index.js","mtime":1638646225600},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/vue-loader/lib/index.js","mtime":1638646228900}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { models } from \"django-airavata-api\";\nimport { components } from \"django-airavata-common-ui\";\nimport DefaultOutputDisplay from \"./DefaultOutputDisplay\";\nimport HtmlOutputDisplay from \"./HtmlOutputDisplay\";\nimport ImageOutputDisplay from \"./ImageOutputDisplay\";\nimport LinkOutputDisplay from \"./LinkOutputDisplay\";\nimport NotebookOutputDisplay from \"./NotebookOutputDisplay\";\nimport InteractiveParametersPanel from \"./interactive-parameters/InteractiveParametersPanel\";\nimport OutputViewDataLoader from \"./OutputViewDataLoader\";\n\nexport default {\n  name: \"output-viewer-container\",\n  props: {\n    experimentOutput: {\n      type: models.OutputDataObjectType,\n      required: true,\n    },\n    outputViews: {\n      type: Array,\n      required: true,\n    },\n    dataProducts: {\n      type: Array,\n      required: false,\n      default: null,\n    },\n    experimentId: {\n      type: String,\n      required: true,\n    },\n  },\n  components: {\n    \"data-product-viewer\": components.DataProductViewer,\n    DefaultOutputDisplay,\n    HtmlOutputDisplay,\n    ImageOutputDisplay,\n    LinkOutputDisplay,\n    NotebookOutputDisplay,\n    InteractiveParametersPanel,\n  },\n  created() {\n    if (this.providerId !== \"default\") {\n      this.loader = this.createLoader();\n      this.loader.load();\n    }\n  },\n  data() {\n    return {\n      currentView: this.outputViews[0],\n      loader: null,\n    };\n  },\n  computed: {\n    viewData() {\n      return this.loader && this.loader.data\n        ? this.loader.data\n        : this.outputViewData;\n    },\n    outputViewData() {\n      return this.currentView.data ? this.currentView.data : {};\n    },\n    displayTypeData() {\n      return {\n        default: {\n          component: \"default-output-display\",\n          url: null,\n        },\n        link: {\n          component: \"link-output-display\",\n          url: \"/api/link-output/\",\n        },\n        notebook: {\n          component: \"notebook-output-display\",\n          url: \"/api/notebook-output/\",\n        },\n        html: {\n          component: \"html-output-display\",\n          url: \"/api/html-output/\",\n        },\n        image: {\n          component: \"image-output-display\",\n          url: \"/api/image-output/\",\n        },\n      };\n    },\n    displayType() {\n      return this.currentView[\"display-type\"];\n    },\n    outputDisplayComponentName() {\n      if (this.displayType in this.displayTypeData) {\n        return this.displayTypeData[this.displayType].component;\n      } else {\n        return null;\n      }\n    },\n    outputDataURL() {\n      if (this.displayType in this.displayTypeData) {\n        return this.displayTypeData[this.displayType].url;\n      } else {\n        return null;\n      }\n    },\n    showMenu() {\n      return this.outputViews.length > 1;\n    },\n    providerId() {\n      return this.currentView[\"provider-id\"];\n    },\n    hasInteractiveParameters() {\n      return this.viewData && this.viewData.interactive;\n    },\n  },\n  methods: {\n    selectView(outputView) {\n      this.currentView = outputView;\n      if (this.outputDataURL === null) {\n        this.loader = null;\n      } else {\n        this.loader = this.createLoader();\n        this.loader.load();\n      }\n    },\n    parametersUpdated(newParams) {\n      if (\n        this.hasInteractiveParameters &&\n        !this.$refs.interactiveParametersPanel.valid\n      ) {\n        // Don't update if we have invalid interactive parameters\n        return;\n      }\n      this.loader.load(newParams);\n    },\n    createLoader() {\n      return new OutputViewDataLoader({\n        url: this.outputDataURL,\n        experimentId: this.experimentId,\n        experimentOutputName: this.experimentOutput.name,\n        providerId: this.providerId,\n      });\n    },\n  },\n};\n",{"version":3,"sources":["OutputDisplayContainer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"OutputDisplayContainer.vue","sourceRoot":"static/django_airavata_workspace/js/components/experiment/output-displays","sourcesContent":["<template>\n  <b-card>\n    <div slot=\"header\" class=\"d-flex align-items-baseline\">\n      <h6>{{ experimentOutput.name }}</h6>\n      <b-dropdown v-if=\"showMenu\" :text=\"currentView['name']\" class=\"ml-auto\">\n        <b-dropdown-item\n          v-for=\"view in outputViews\"\n          :key=\"view['provider-id']\"\n          :active=\"view['provider-id'] === currentView['provider-id']\"\n          @click=\"selectView(view)\"\n          >{{ view[\"name\"] }}</b-dropdown-item\n        >\n      </b-dropdown>\n    </div>\n    <component\n      :is=\"outputDisplayComponentName\"\n      :view-data=\"viewData\"\n      :data-products=\"dataProducts\"\n      :experiment-output=\"experimentOutput\"\n    />\n    <interactive-parameters-panel\n      ref=\"interactiveParametersPanel\"\n      v-if=\"viewData && viewData.interactive\"\n      :parameters=\"viewData.interactive\"\n      @input=\"parametersUpdated\"\n    />\n  </b-card>\n</template>\n\n<script>\nimport { models } from \"django-airavata-api\";\nimport { components } from \"django-airavata-common-ui\";\nimport DefaultOutputDisplay from \"./DefaultOutputDisplay\";\nimport HtmlOutputDisplay from \"./HtmlOutputDisplay\";\nimport ImageOutputDisplay from \"./ImageOutputDisplay\";\nimport LinkOutputDisplay from \"./LinkOutputDisplay\";\nimport NotebookOutputDisplay from \"./NotebookOutputDisplay\";\nimport InteractiveParametersPanel from \"./interactive-parameters/InteractiveParametersPanel\";\nimport OutputViewDataLoader from \"./OutputViewDataLoader\";\n\nexport default {\n  name: \"output-viewer-container\",\n  props: {\n    experimentOutput: {\n      type: models.OutputDataObjectType,\n      required: true,\n    },\n    outputViews: {\n      type: Array,\n      required: true,\n    },\n    dataProducts: {\n      type: Array,\n      required: false,\n      default: null,\n    },\n    experimentId: {\n      type: String,\n      required: true,\n    },\n  },\n  components: {\n    \"data-product-viewer\": components.DataProductViewer,\n    DefaultOutputDisplay,\n    HtmlOutputDisplay,\n    ImageOutputDisplay,\n    LinkOutputDisplay,\n    NotebookOutputDisplay,\n    InteractiveParametersPanel,\n  },\n  created() {\n    if (this.providerId !== \"default\") {\n      this.loader = this.createLoader();\n      this.loader.load();\n    }\n  },\n  data() {\n    return {\n      currentView: this.outputViews[0],\n      loader: null,\n    };\n  },\n  computed: {\n    viewData() {\n      return this.loader && this.loader.data\n        ? this.loader.data\n        : this.outputViewData;\n    },\n    outputViewData() {\n      return this.currentView.data ? this.currentView.data : {};\n    },\n    displayTypeData() {\n      return {\n        default: {\n          component: \"default-output-display\",\n          url: null,\n        },\n        link: {\n          component: \"link-output-display\",\n          url: \"/api/link-output/\",\n        },\n        notebook: {\n          component: \"notebook-output-display\",\n          url: \"/api/notebook-output/\",\n        },\n        html: {\n          component: \"html-output-display\",\n          url: \"/api/html-output/\",\n        },\n        image: {\n          component: \"image-output-display\",\n          url: \"/api/image-output/\",\n        },\n      };\n    },\n    displayType() {\n      return this.currentView[\"display-type\"];\n    },\n    outputDisplayComponentName() {\n      if (this.displayType in this.displayTypeData) {\n        return this.displayTypeData[this.displayType].component;\n      } else {\n        return null;\n      }\n    },\n    outputDataURL() {\n      if (this.displayType in this.displayTypeData) {\n        return this.displayTypeData[this.displayType].url;\n      } else {\n        return null;\n      }\n    },\n    showMenu() {\n      return this.outputViews.length > 1;\n    },\n    providerId() {\n      return this.currentView[\"provider-id\"];\n    },\n    hasInteractiveParameters() {\n      return this.viewData && this.viewData.interactive;\n    },\n  },\n  methods: {\n    selectView(outputView) {\n      this.currentView = outputView;\n      if (this.outputDataURL === null) {\n        this.loader = null;\n      } else {\n        this.loader = this.createLoader();\n        this.loader.load();\n      }\n    },\n    parametersUpdated(newParams) {\n      if (\n        this.hasInteractiveParameters &&\n        !this.$refs.interactiveParametersPanel.valid\n      ) {\n        // Don't update if we have invalid interactive parameters\n        return;\n      }\n      this.loader.load(newParams);\n    },\n    createLoader() {\n      return new OutputViewDataLoader({\n        url: this.outputDataURL,\n        experimentId: this.experimentId,\n        experimentOutputName: this.experimentOutput.name,\n        providerId: this.providerId,\n      });\n    },\n  },\n};\n</script>\n"]}]}