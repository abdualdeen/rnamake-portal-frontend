{"remainingRequest":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/static/django_airavata_workspace/js/components/project/ProjectEditor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/static/django_airavata_workspace/js/components/project/ProjectEditor.vue","mtime":1638641844343},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/thread-loader/dist/cjs.js","mtime":1638646228889},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/babel-loader/lib/index.js","mtime":1638646225600},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/vue-loader/lib/index.js","mtime":1638646228900}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { models } from \"django-airavata-api\";\nimport { mixins } from \"django-airavata-common-ui\";\n\nexport default {\n  name: \"project-editor\",\n  mixins: [mixins.VModelMixin],\n  props: {\n    value: {\n      type: models.Project,\n      required: true,\n    },\n  },\n  mounted() {\n    this.$on(\"input\", this.validate);\n    this.validate();\n  },\n  data() {\n    return {\n      userBeginsInput: false,\n    };\n  },\n  computed: {\n    nameFeedback() {\n      if (this.userBeginsInput && this.validation.name) {\n        return this.validation.name.join(\"; \");\n      } else {\n        return null;\n      }\n    },\n    nameState() {\n      if (this.validation.name) {\n        if (this.userBeginsInput) {\n          return false;\n        } else {\n          return null;\n        }\n      } else {\n        return true;\n      }\n    },\n    validation() {\n      const v = this.data.validate();\n      return v ? v : {};\n    },\n  },\n  methods: {\n    validate() {\n      if (Object.keys(this.validation).length > 0) {\n        this.$emit(\"invalid\");\n      } else {\n        this.$emit(\"valid\");\n      }\n    },\n    onUserInput() {\n      this.userBeginsInput = true;\n    },\n    onSubmit(event) {\n      event.preventDefault();\n      this.$emit(\"save\");\n    },\n    reset() {\n      this.userBeginsInput = false;\n    },\n  },\n  watch: {\n    value() {\n      this.validate();\n    },\n  },\n};\n",{"version":3,"sources":["ProjectEditor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ProjectEditor.vue","sourceRoot":"static/django_airavata_workspace/js/components/project","sourcesContent":["<template>\n  <div>\n    <div class=\"d-flex\">\n      <slot name=\"title\">\n        <h1 class=\"h4 mb-4 mr-auto\">Edit Project</h1>\n      </slot>\n      <slot name=\"buttons\"> </slot>\n    </div>\n    <b-form @submit=\"onSubmit\" @input=\"onUserInput\" novalidate>\n      <b-form-group\n        label=\"Project Name\"\n        label-for=\"project-name\"\n        :feedback=\"nameFeedback\"\n        :state=\"nameState\"\n      >\n        <b-form-input\n          id=\"project-name\"\n          type=\"text\"\n          v-model=\"data.name\"\n          required\n          placeholder=\"Project name\"\n          :state=\"nameState\"\n        ></b-form-input>\n      </b-form-group>\n      <b-form-group label=\"Project Description\" label-for=\"project-description\">\n        <b-form-textarea\n          id=\"project-description\"\n          type=\"text\"\n          v-model=\"data.description\"\n          placeholder=\"(Optional) Project description\"\n          :rows=\"3\"\n        ></b-form-textarea>\n      </b-form-group>\n    </b-form>\n  </div>\n</template>\n\n<script>\nimport { models } from \"django-airavata-api\";\nimport { mixins } from \"django-airavata-common-ui\";\n\nexport default {\n  name: \"project-editor\",\n  mixins: [mixins.VModelMixin],\n  props: {\n    value: {\n      type: models.Project,\n      required: true,\n    },\n  },\n  mounted() {\n    this.$on(\"input\", this.validate);\n    this.validate();\n  },\n  data() {\n    return {\n      userBeginsInput: false,\n    };\n  },\n  computed: {\n    nameFeedback() {\n      if (this.userBeginsInput && this.validation.name) {\n        return this.validation.name.join(\"; \");\n      } else {\n        return null;\n      }\n    },\n    nameState() {\n      if (this.validation.name) {\n        if (this.userBeginsInput) {\n          return false;\n        } else {\n          return null;\n        }\n      } else {\n        return true;\n      }\n    },\n    validation() {\n      const v = this.data.validate();\n      return v ? v : {};\n    },\n  },\n  methods: {\n    validate() {\n      if (Object.keys(this.validation).length > 0) {\n        this.$emit(\"invalid\");\n      } else {\n        this.$emit(\"valid\");\n      }\n    },\n    onUserInput() {\n      this.userBeginsInput = true;\n    },\n    onSubmit(event) {\n      event.preventDefault();\n      this.$emit(\"save\");\n    },\n    reset() {\n      this.userBeginsInput = false;\n    },\n  },\n  watch: {\n    value() {\n      this.validate();\n    },\n  },\n};\n</script>\n"]}]}