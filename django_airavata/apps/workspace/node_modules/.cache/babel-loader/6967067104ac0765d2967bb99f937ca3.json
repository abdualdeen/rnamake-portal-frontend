{"remainingRequest":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/thread-loader/dist/cjs.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/babel-loader/lib/index.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/errors/UnhandledErrorDispatcher.js","dependencies":[{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/errors/UnhandledErrorDispatcher.js","mtime":1638641844319},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/thread-loader/dist/cjs.js","mtime":1638646228889},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/babel-loader/lib/index.js","mtime":1638646225600},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1638646227499}],"contextDependencies":[],"result":["import ErrorReporter from \"./ErrorReporter\";\nimport UnhandledError from \"./UnhandledError\";\nimport UnhandledErrorList from \"./UnhandledErrorDisplayList\";\n\nclass UnhandledErrorDispatcher {\n  reportError(_ref) {\n    var _ref$message = _ref.message,\n        message = _ref$message === void 0 ? null : _ref$message,\n        _ref$error = _ref.error,\n        error = _ref$error === void 0 ? null : _ref$error,\n        _ref$details = _ref.details,\n        details = _ref$details === void 0 ? null : _ref$details,\n        _ref$suppressDisplay = _ref.suppressDisplay,\n        suppressDisplay = _ref$suppressDisplay === void 0 ? false : _ref$suppressDisplay,\n        _ref$suppressLogging = _ref.suppressLogging,\n        suppressLogging = _ref$suppressLogging === void 0 ? false : _ref$suppressLogging;\n    var unhandledError = new UnhandledError({\n      message,\n      error,\n      details,\n      suppressDisplay,\n      suppressLogging\n    });\n    this.reportUnhandledError(unhandledError);\n  }\n\n  reportUnhandledError(unhandledError) {\n    if (!unhandledError.suppressDisplay) {\n      UnhandledErrorList.add(unhandledError);\n    }\n\n    if (!unhandledError.suppressLogging) {\n      ErrorReporter.reportUnhandledError(unhandledError);\n    }\n  }\n\n}\n\nexport default new UnhandledErrorDispatcher();",{"version":3,"sources":["/home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/errors/UnhandledErrorDispatcher.js"],"names":["ErrorReporter","UnhandledError","UnhandledErrorList","UnhandledErrorDispatcher","reportError","message","error","details","suppressDisplay","suppressLogging","unhandledError","reportUnhandledError","add"],"mappings":"AAAA,OAAOA,aAAP;AACA,OAAOC,cAAP;AACA,OAAOC,kBAAP;;AAEA,MAAMC,wBAAN,CAA+B;AAC7BC,EAAAA,WAAW,OAMR;AAAA,4BALDC,OAKC;AAAA,QALDA,OAKC,6BALS,IAKT;AAAA,0BAJDC,KAIC;AAAA,QAJDA,KAIC,2BAJO,IAIP;AAAA,4BAHDC,OAGC;AAAA,QAHDA,OAGC,6BAHS,IAGT;AAAA,oCAFDC,eAEC;AAAA,QAFDA,eAEC,qCAFiB,KAEjB;AAAA,oCADDC,eACC;AAAA,QADDA,eACC,qCADiB,KACjB;AACD,QAAMC,cAAc,GAAG,IAAIT,cAAJ,CAAmB;AACxCI,MAAAA,OADwC;AAExCC,MAAAA,KAFwC;AAGxCC,MAAAA,OAHwC;AAIxCC,MAAAA,eAJwC;AAKxCC,MAAAA;AALwC,KAAnB,CAAvB;AAOA,SAAKE,oBAAL,CAA0BD,cAA1B;AACD;;AAEDC,EAAAA,oBAAoB,CAACD,cAAD,EAAiB;AACnC,QAAI,CAACA,cAAc,CAACF,eAApB,EAAqC;AACnCN,MAAAA,kBAAkB,CAACU,GAAnB,CAAuBF,cAAvB;AACD;;AACD,QAAI,CAACA,cAAc,CAACD,eAApB,EAAqC;AACnCT,MAAAA,aAAa,CAACW,oBAAd,CAAmCD,cAAnC;AACD;AACF;;AAzB4B;;AA4B/B,eAAe,IAAIP,wBAAJ,EAAf","sourcesContent":["import ErrorReporter from \"./ErrorReporter\";\nimport UnhandledError from \"./UnhandledError\";\nimport UnhandledErrorList from \"./UnhandledErrorDisplayList\";\n\nclass UnhandledErrorDispatcher {\n  reportError({\n    message = null,\n    error = null,\n    details = null,\n    suppressDisplay = false,\n    suppressLogging = false,\n  }) {\n    const unhandledError = new UnhandledError({\n      message,\n      error,\n      details,\n      suppressDisplay,\n      suppressLogging,\n    });\n    this.reportUnhandledError(unhandledError);\n  }\n\n  reportUnhandledError(unhandledError) {\n    if (!unhandledError.suppressDisplay) {\n      UnhandledErrorList.add(unhandledError);\n    }\n    if (!unhandledError.suppressLogging) {\n      ErrorReporter.reportUnhandledError(unhandledError);\n    }\n  }\n}\n\nexport default new UnhandledErrorDispatcher();\n"]}]}