{"remainingRequest":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/thread-loader/dist/cjs.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/babel-loader/lib/index.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/Group.js","dependencies":[{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/Group.js","mtime":1638641844319},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/thread-loader/dist/cjs.js","mtime":1638646228889},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/babel-loader/lib/index.js","mtime":1638646225600},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1638646227499}],"contextDependencies":[],"result":["import BaseModel from \"./BaseModel\";\nvar FIELDS = [\"id\", \"name\", \"ownerId\", \"description\", {\n  name: \"members\",\n  type: \"string\",\n  list: true,\n  default: BaseModel.defaultNewInstance(Array)\n}, {\n  name: \"admins\",\n  type: \"string\",\n  list: true,\n  default: BaseModel.defaultNewInstance(Array)\n}, {\n  name: \"isOwner\",\n  type: \"boolean\",\n  default: true\n}, {\n  name: \"isAdmin\",\n  type: \"boolean\",\n  default: false\n}, {\n  name: \"isMember\",\n  type: \"boolean\",\n  default: true\n}, \"isGatewayAdminsGroup\", \"isReadOnlyGatewayAdminsGroup\", \"isDefaultGatewayUsersGroup\"];\nexport default class Group extends BaseModel {\n  constructor() {\n    var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super(FIELDS, data);\n  }\n\n  validate() {\n    if (this.isEmpty(this.name.trim())) {\n      return {\n        name: [\"Please provide a name.\"]\n      };\n    }\n\n    return null;\n  }\n  /**\n   * Return true if group is either the \"Gateway Admins\" or the \"Readonly Admins\" group.\n   */\n\n\n  get isAdminGroup() {\n    return this.isReadOnlyGatewayAdminsGroup || this.isGatewayAdminsGroup;\n  }\n\n  get userHasWriteAccess() {\n    return this.isOwner || this.isAdmin;\n  }\n\n}",{"version":3,"sources":["/home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/Group.js"],"names":["BaseModel","FIELDS","name","type","list","default","defaultNewInstance","Array","Group","constructor","data","validate","isEmpty","trim","isAdminGroup","isReadOnlyGatewayAdminsGroup","isGatewayAdminsGroup","userHasWriteAccess","isOwner","isAdmin"],"mappings":"AAAA,OAAOA,SAAP;AAEA,IAAMC,MAAM,GAAG,CACb,IADa,EAEb,MAFa,EAGb,SAHa,EAIb,aAJa,EAKb;AACEC,EAAAA,IAAI,EAAE,SADR;AAEEC,EAAAA,IAAI,EAAE,QAFR;AAGEC,EAAAA,IAAI,EAAE,IAHR;AAIEC,EAAAA,OAAO,EAAEL,SAAS,CAACM,kBAAV,CAA6BC,KAA7B;AAJX,CALa,EAWb;AACEL,EAAAA,IAAI,EAAE,QADR;AAEEC,EAAAA,IAAI,EAAE,QAFR;AAGEC,EAAAA,IAAI,EAAE,IAHR;AAIEC,EAAAA,OAAO,EAAEL,SAAS,CAACM,kBAAV,CAA6BC,KAA7B;AAJX,CAXa,EAiBb;AACEL,EAAAA,IAAI,EAAE,SADR;AAEEC,EAAAA,IAAI,EAAE,SAFR;AAGEE,EAAAA,OAAO,EAAE;AAHX,CAjBa,EAsBb;AACEH,EAAAA,IAAI,EAAE,SADR;AAEEC,EAAAA,IAAI,EAAE,SAFR;AAGEE,EAAAA,OAAO,EAAE;AAHX,CAtBa,EA2Bb;AACEH,EAAAA,IAAI,EAAE,UADR;AAEEC,EAAAA,IAAI,EAAE,SAFR;AAGEE,EAAAA,OAAO,EAAE;AAHX,CA3Ba,EAgCb,sBAhCa,EAiCb,8BAjCa,EAkCb,4BAlCa,CAAf;AAqCA,eAAe,MAAMG,KAAN,SAAoBR,SAApB,CAA8B;AAC3CS,EAAAA,WAAW,GAAY;AAAA,QAAXC,IAAW,uEAAJ,EAAI;AACrB,UAAMT,MAAN,EAAcS,IAAd;AACD;;AAEDC,EAAAA,QAAQ,GAAG;AACT,QAAI,KAAKC,OAAL,CAAa,KAAKV,IAAL,CAAUW,IAAV,EAAb,CAAJ,EAAoC;AAClC,aAAO;AACLX,QAAAA,IAAI,EAAE,CAAC,wBAAD;AADD,OAAP;AAGD;;AACD,WAAO,IAAP;AACD;AAED;;;;;AAGA,MAAIY,YAAJ,GAAmB;AACjB,WAAO,KAAKC,4BAAL,IAAqC,KAAKC,oBAAjD;AACD;;AAED,MAAIC,kBAAJ,GAAyB;AACvB,WAAO,KAAKC,OAAL,IAAgB,KAAKC,OAA5B;AACD;;AAvB0C","sourcesContent":["import BaseModel from \"./BaseModel\";\n\nconst FIELDS = [\n  \"id\",\n  \"name\",\n  \"ownerId\",\n  \"description\",\n  {\n    name: \"members\",\n    type: \"string\",\n    list: true,\n    default: BaseModel.defaultNewInstance(Array),\n  },\n  {\n    name: \"admins\",\n    type: \"string\",\n    list: true,\n    default: BaseModel.defaultNewInstance(Array),\n  },\n  {\n    name: \"isOwner\",\n    type: \"boolean\",\n    default: true,\n  },\n  {\n    name: \"isAdmin\",\n    type: \"boolean\",\n    default: false,\n  },\n  {\n    name: \"isMember\",\n    type: \"boolean\",\n    default: true,\n  },\n  \"isGatewayAdminsGroup\",\n  \"isReadOnlyGatewayAdminsGroup\",\n  \"isDefaultGatewayUsersGroup\",\n];\n\nexport default class Group extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n  }\n\n  validate() {\n    if (this.isEmpty(this.name.trim())) {\n      return {\n        name: [\"Please provide a name.\"],\n      };\n    }\n    return null;\n  }\n\n  /**\n   * Return true if group is either the \"Gateway Admins\" or the \"Readonly Admins\" group.\n   */\n  get isAdminGroup() {\n    return this.isReadOnlyGatewayAdminsGroup || this.isGatewayAdminsGroup;\n  }\n\n  get userHasWriteAccess() {\n    return this.isOwner || this.isAdmin;\n  }\n}\n"]}]}