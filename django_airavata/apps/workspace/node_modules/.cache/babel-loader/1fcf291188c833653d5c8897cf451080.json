{"remainingRequest":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/thread-loader/dist/cjs.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/babel-loader/lib/index.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/static/django_airavata_workspace/js/web-components/GroupResourceProfileSelector.vue?vue&type=script&lang=js&shadow","dependencies":[{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/static/django_airavata_workspace/js/web-components/GroupResourceProfileSelector.vue","mtime":1638641844343},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/thread-loader/dist/cjs.js","mtime":1638646228889},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/babel-loader/lib/index.js","mtime":1638646225600},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/vue-loader/lib/index.js","mtime":1638646228900}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.sort\";\nimport _defineProperty from \"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Vue from \"vue\";\nimport { BootstrapVue } from \"bootstrap-vue\";\nimport store from \"./store\";\nimport { mapGetters } from \"vuex\";\nVue.use(BootstrapVue);\nexport default {\n  name: \"group-resource-profile-selector\",\n  props: {\n    value: {\n      type: String,\n      required: true\n    },\n    label: {\n      type: String,\n      default: \"Allocation\"\n    }\n  },\n  store: store,\n\n  data() {\n    return {\n      groupResourceProfileId: this.value\n    };\n  },\n\n  mounted() {\n    var _this = this;\n\n    return _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.$store.dispatch(\"loadGroupResourceProfiles\");\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n\n  computed: _objectSpread({\n    groupResourceProfileOptions: function groupResourceProfileOptions() {\n      if (this.groupResourceProfiles && this.groupResourceProfiles.length > 0) {\n        var groupResourceProfileOptions = this.groupResourceProfiles.map(groupResourceProfile => {\n          return {\n            value: groupResourceProfile.groupResourceProfileId,\n            text: groupResourceProfile.groupResourceProfileName\n          };\n        });\n        groupResourceProfileOptions.sort((a, b) => a.text.localeCompare(b.text));\n        return groupResourceProfileOptions;\n      } else {\n        return [];\n      }\n    }\n  }, mapGetters([\"groupResourceProfiles\"])),\n  methods: {\n    groupResourceProfileChanged: function groupResourceProfileChanged(groupResourceProfileId) {\n      this.groupResourceProfileId = groupResourceProfileId;\n      this.emitValueChanged();\n    },\n    emitValueChanged: function emitValueChanged() {\n      var inputEvent = new CustomEvent(\"input\", {\n        detail: [this.groupResourceProfileId],\n        composed: true,\n        bubbles: true\n      });\n      this.$el.dispatchEvent(inputEvent);\n    }\n  },\n  watch: {\n    value() {\n      this.groupResourceProfileId = this.value;\n    }\n\n  }\n};",{"version":3,"sources":["GroupResourceProfileSelector.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmBA,OAAA,GAAA,MAAA,KAAA;AACA,SAAA,YAAA,QAAA,eAAA;AACA,OAAA,KAAA;AACA,SAAA,UAAA,QAAA,MAAA;AACA,GAAA,CAAA,GAAA,CAAA,YAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,iCADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA,KADA;AAKA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA;AALA,GAFA;AAYA,EAAA,KAAA,EAAA,KAZA;;AAaA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,sBAAA,EAAA,KAAA;AADA,KAAA;AAGA,GAjBA;;AAkBA,EAAA,OAAA,GAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,2BAAA,CADA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,GApBA;;AAqBA,EAAA,QAAA;AACA,IAAA,2BAAA,EAAA,uCAAA;AACA,UAAA,KAAA,qBAAA,IAAA,KAAA,qBAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,YAAA,2BAAA,GAAA,KAAA,qBAAA,CAAA,GAAA,CACA,oBAAA,IAAA;AACA,iBAAA;AACA,YAAA,KAAA,EAAA,oBAAA,CAAA,sBADA;AAEA,YAAA,IAAA,EAAA,oBAAA,CAAA;AAFA,WAAA;AAIA,SANA,CAAA;AAQA,QAAA,2BAAA,CAAA,IAAA,CAAA,CAAA,CAAA,EAAA,CAAA,KACA,CAAA,CAAA,IAAA,CAAA,aAAA,CAAA,CAAA,CAAA,IAAA,CADA;AAGA,eAAA,2BAAA;AACA,OAbA,MAaA;AACA,eAAA,EAAA;AACA;AACA;AAlBA,KAmBA,UAAA,CAAA,CAAA,uBAAA,CAAA,CAnBA,CArBA;AA0CA,EAAA,OAAA,EAAA;AACA,IAAA,2BAAA,EAAA,qCAAA,sBAAA,EAAA;AACA,WAAA,sBAAA,GAAA,sBAAA;AACA,WAAA,gBAAA;AACA,KAJA;AAKA,IAAA,gBAAA,EAAA,4BAAA;AACA,UAAA,UAAA,GAAA,IAAA,WAAA,CAAA,OAAA,EAAA;AACA,QAAA,MAAA,EAAA,CAAA,KAAA,sBAAA,CADA;AAEA,QAAA,QAAA,EAAA,IAFA;AAGA,QAAA,OAAA,EAAA;AAHA,OAAA,CAAA;AAKA,WAAA,GAAA,CAAA,aAAA,CAAA,UAAA;AACA;AAZA,GA1CA;AAwDA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,GAAA;AACA,WAAA,sBAAA,GAAA,KAAA,KAAA;AACA;;AAHA;AAxDA,CAAA","sourcesContent":["<template>\n  <b-form-group :label=\"label\" label-for=\"group-resource-profile\">\n    <b-form-select\n      id=\"group-resource-profile\"\n      v-model=\"groupResourceProfileId\"\n      :options=\"groupResourceProfileOptions\"\n      required\n      @change=\"groupResourceProfileChanged\"\n    >\n      <template slot=\"first\">\n        <option :value=\"null\" disabled>\n          <slot name=\"null-option\">Select an allocation</slot>\n        </option>\n      </template>\n    </b-form-select>\n  </b-form-group>\n</template>\n\n<script>\nimport Vue from \"vue\";\nimport { BootstrapVue } from \"bootstrap-vue\";\nimport store from \"./store\";\nimport { mapGetters } from \"vuex\";\nVue.use(BootstrapVue);\n\nexport default {\n  name: \"group-resource-profile-selector\",\n  props: {\n    value: {\n      type: String,\n      required: true,\n    },\n    label: {\n      type: String,\n      default: \"Allocation\",\n    },\n  },\n  store: store,\n  data() {\n    return {\n      groupResourceProfileId: this.value,\n    };\n  },\n  async mounted() {\n    await this.$store.dispatch(\"loadGroupResourceProfiles\");\n  },\n  computed: {\n    groupResourceProfileOptions: function () {\n      if (this.groupResourceProfiles && this.groupResourceProfiles.length > 0) {\n        const groupResourceProfileOptions = this.groupResourceProfiles.map(\n          (groupResourceProfile) => {\n            return {\n              value: groupResourceProfile.groupResourceProfileId,\n              text: groupResourceProfile.groupResourceProfileName,\n            };\n          }\n        );\n        groupResourceProfileOptions.sort((a, b) =>\n          a.text.localeCompare(b.text)\n        );\n        return groupResourceProfileOptions;\n      } else {\n        return [];\n      }\n    },\n    ...mapGetters([\"groupResourceProfiles\"]),\n  },\n  methods: {\n    groupResourceProfileChanged: function (groupResourceProfileId) {\n      this.groupResourceProfileId = groupResourceProfileId;\n      this.emitValueChanged();\n    },\n    emitValueChanged: function () {\n      const inputEvent = new CustomEvent(\"input\", {\n        detail: [this.groupResourceProfileId],\n        composed: true,\n        bubbles: true,\n      });\n      this.$el.dispatchEvent(inputEvent);\n    },\n  },\n  watch: {\n    value() {\n      this.groupResourceProfileId = this.value;\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n@import \"./styles\";\n:host {\n  display: block;\n}\n</style>\n"],"sourceRoot":"static/django_airavata_workspace/js/web-components"}]}