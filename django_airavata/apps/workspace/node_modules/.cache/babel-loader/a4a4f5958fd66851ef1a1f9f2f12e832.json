{"remainingRequest":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/thread-loader/dist/cjs.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/babel-loader/lib/index.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/static/django_airavata_workspace/js/components/storage/storage-edit/UserStorageTextEditViewer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/static/django_airavata_workspace/js/components/storage/storage-edit/UserStorageTextEditViewer.vue","mtime":1638641844343},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/babel-loader/lib/index.js","mtime":1638646225600},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/vue-loader/lib/index.js","mtime":1638646228900},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/thread-loader/dist/cjs.js","mtime":1638646228889},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/babel-loader/lib/index.js","mtime":1638646225600},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/vue-loader/lib/index.js","mtime":1638646228900}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport CodeMirror from \"codemirror\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/theme/abcdef.css\";\nimport { services, utils } from \"django-airavata-api\";\nimport UserStorageDownloadButton from \"./UserStorageDownloadButton\";\nvar MAX_EDIT_FILESIZE = 1024 * 1024;\nexport default {\n  name: \"user-storage-file-edit-viewer\",\n  props: {\n    fileName: {\n      required: true\n    },\n    dataProductUri: {\n      required: true\n    },\n    mimeType: {\n      required: true\n    },\n    downloadUrl: {\n      required: true\n    }\n  },\n  components: {\n    UserStorageDownloadButton: UserStorageDownloadButton\n  },\n\n  data() {\n    return {\n      fileContent: \"\",\n      saved: true,\n      editor: null,\n      dataProduct: null\n    };\n  },\n\n  mounted() {\n    this.setFileContent();\n  },\n\n  destroyed() {\n    // this.editor is created only when the file is small enough to be\n    // previewed/edited in browser\n    if (this.editor) {\n      this.editor.getWrapperElement().remove();\n    }\n  },\n\n  computed: {\n    editAvailable() {\n      return !this.dataProduct || this.dataProduct.filesize < MAX_EDIT_FILESIZE;\n    }\n\n  },\n  methods: {\n    fileContentChanged() {\n      var changedFileContent = this.editor.getDoc().getValue();\n\n      if (changedFileContent) {\n        utils.FetchUtils.put(`/api/data-products?product-uri=${this.dataProductUri}`, {\n          fileContentText: changedFileContent\n        }).then(() => {\n          this.$emit(\"file-content-changed\", changedFileContent);\n        });\n      }\n\n      this.saved = true;\n    },\n\n    loadDataProduct() {\n      return services.DataProductService.retrieve({\n        lookup: this.dataProductUri\n      }).then(dataProduct => {\n        this.dataProduct = dataProduct;\n        return dataProduct;\n      });\n    },\n\n    setFileContent() {\n      this.loadDataProduct().then(() => {\n        if (this.editAvailable) {\n          utils.FetchUtils.get(this.downloadUrl, \"\", {\n            ignoreErrors: false,\n            showSpinner: true\n          }, \"text\").then(res => {\n            this.fileContent = res;\n            this.setFileContentEditor(this.fileContent);\n          });\n        }\n      });\n    },\n\n    setFileContentEditor() {\n      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n      this.editor = CodeMirror(this.$refs.editor, {\n        theme: \"abcdef\",\n        mode: \"text/plain\",\n        lineNumbers: true,\n        lineWrapping: true,\n        scrollbarStyle: \"native\",\n        extraKeys: {\n          \"Ctrl-Space\": \"autocomplete\"\n        },\n        value: value\n      });\n      this.editor.on(\"change\", () => {\n        this.saved = false;\n      });\n    }\n\n  }\n};",{"version":3,"sources":["UserStorageTextEditViewer.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div class=\"user-storage-file-edit-viewer-status\">\n      <div class=\"user-storage-file-edit-viewer-status-message\">\n        <span v-if=\"editAvailable && saved\">All the changes are saved.</span>\n        <span v-if=\"editAvailable && !saved\">Changes are not saved.</span>\n      </div>\n      <div class=\"user-storage-file-edit-viewer-status-actions\">\n        <user-storage-download-button\n          :data-product-uri=\"dataProductUri\"\n          :file-name=\"fileName\"\n        />\n        <b-button\n          v-if=\"editAvailable\"\n          :disabled=\"saved\"\n          @click=\"fileContentChanged\"\n          >Save</b-button\n        >\n      </div>\n    </div>\n    <div style=\"width: 100%\" ref=\"editor\" v-if=\"editAvailable\"></div>\n    <div class=\"user-storage-file-edit-viewer-no-preview\" v-else>\n      Inline edit not available. Click the <strong>Download</strong> button to\n      download the file.\n    </div>\n  </div>\n</template>\n\n<script>\nimport CodeMirror from \"codemirror\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/theme/abcdef.css\";\nimport { services, utils } from \"django-airavata-api\";\nimport UserStorageDownloadButton from \"./UserStorageDownloadButton\";\n\nconst MAX_EDIT_FILESIZE = 1024 * 1024;\n\nexport default {\n  name: \"user-storage-file-edit-viewer\",\n  props: {\n    fileName: {\n      required: true,\n    },\n    dataProductUri: {\n      required: true,\n    },\n    mimeType: {\n      required: true,\n    },\n    downloadUrl: {\n      required: true,\n    },\n  },\n  components: {\n    UserStorageDownloadButton: UserStorageDownloadButton,\n  },\n  data() {\n    return {\n      fileContent: \"\",\n      saved: true,\n      editor: null,\n      dataProduct: null,\n    };\n  },\n  mounted() {\n    this.setFileContent();\n  },\n  destroyed() {\n    // this.editor is created only when the file is small enough to be\n    // previewed/edited in browser\n    if (this.editor) {\n      this.editor.getWrapperElement().remove();\n    }\n  },\n  computed: {\n    editAvailable() {\n      return !this.dataProduct || this.dataProduct.filesize < MAX_EDIT_FILESIZE;\n    },\n  },\n  methods: {\n    fileContentChanged() {\n      const changedFileContent = this.editor.getDoc().getValue();\n      if (changedFileContent) {\n        utils.FetchUtils.put(\n          `/api/data-products?product-uri=${this.dataProductUri}`,\n          {\n            fileContentText: changedFileContent,\n          }\n        ).then(() => {\n          this.$emit(\"file-content-changed\", changedFileContent);\n        });\n      }\n\n      this.saved = true;\n    },\n    loadDataProduct() {\n      return services.DataProductService.retrieve({\n        lookup: this.dataProductUri,\n      }).then((dataProduct) => {\n        this.dataProduct = dataProduct;\n        return dataProduct;\n      });\n    },\n    setFileContent() {\n      this.loadDataProduct().then(() => {\n        if (this.editAvailable) {\n          utils.FetchUtils.get(\n            this.downloadUrl,\n            \"\",\n            {\n              ignoreErrors: false,\n              showSpinner: true,\n            },\n            \"text\"\n          ).then((res) => {\n            this.fileContent = res;\n            this.setFileContentEditor(this.fileContent);\n          });\n        }\n      });\n    },\n    setFileContentEditor(value = \"\") {\n      this.editor = CodeMirror(this.$refs.editor, {\n        theme: \"abcdef\",\n        mode: \"text/plain\",\n        lineNumbers: true,\n        lineWrapping: true,\n        scrollbarStyle: \"native\",\n        extraKeys: { \"Ctrl-Space\": \"autocomplete\" },\n        value: value,\n      });\n      this.editor.on(\"change\", () => {\n        this.saved = false;\n      });\n    },\n  },\n};\n</script>\n\n<style>\n.CodeMirror {\n  height: auto;\n  min-height: 600px;\n}\n</style>\n"],"sourceRoot":"static/django_airavata_workspace/js/components/storage/storage-edit"}]}