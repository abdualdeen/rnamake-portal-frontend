{"remainingRequest":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/thread-loader/dist/cjs.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/babel-loader/lib/index.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/static/django_airavata_workspace/js/components/experiment/output-displays/interactive-parameters/InteractiveParameterRangeWidget.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/static/django_airavata_workspace/js/components/experiment/output-displays/interactive-parameters/InteractiveParameterRangeWidget.vue","mtime":1638641844343},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/thread-loader/dist/cjs.js","mtime":1638646228889},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/babel-loader/lib/index.js","mtime":1638646225600},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/vue-loader/lib/index.js","mtime":1638646228900}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"interactive-parameter-range-widget\",\n  props: {\n    value: {\n      type: Number,\n      required: true\n    },\n    parameter: {\n      type: Object\n    }\n  },\n  data: function data() {\n    return {\n      currentValue: parseFloat(this.value)\n    };\n  },\n  computed: {\n    disabled: function disabled() {\n      return this.currentValue === this.initialValue;\n    },\n    initialValue: function initialValue() {\n      return parseFloat(this.value);\n    },\n    roundedValue: function roundedValue() {\n      return this.currentValue ? this.currentValue.toFixed(2) : null;\n    }\n  },\n  methods: {\n    updateValue: function updateValue(newValue) {\n      this.currentValue = parseFloat(newValue);\n    },\n    submit: function submit() {\n      this.$emit(\"input\", this.currentValue);\n    },\n    mouseUp: function mouseUp() {\n      this.$refs.rangeInput.blur();\n\n      if (!this.disabled) {\n        this.submit();\n      }\n    },\n    keyUp: function keyUp() {}\n  }\n};",{"version":3,"sources":["InteractiveParameterRangeWidget.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA,eAAA;AACA,EAAA,IAAA,EAAA,oCADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA,KADA;AAKA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA;AALA,GAFA;AAWA,EAAA,IAXA,kBAWA;AACA,WAAA;AACA,MAAA,YAAA,EAAA,UAAA,CAAA,KAAA,KAAA;AADA,KAAA;AAGA,GAfA;AAgBA,EAAA,QAAA,EAAA;AACA,IAAA,QADA,sBACA;AACA,aAAA,KAAA,YAAA,KAAA,KAAA,YAAA;AACA,KAHA;AAIA,IAAA,YAJA,0BAIA;AACA,aAAA,UAAA,CAAA,KAAA,KAAA,CAAA;AACA,KANA;AAOA,IAAA,YAPA,0BAOA;AACA,aAAA,KAAA,YAAA,GAAA,KAAA,YAAA,CAAA,OAAA,CAAA,CAAA,CAAA,GAAA,IAAA;AACA;AATA,GAhBA;AA2BA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,uBACA,QADA,EACA;AACA,WAAA,YAAA,GAAA,UAAA,CAAA,QAAA,CAAA;AACA,KAHA;AAIA,IAAA,MAJA,oBAIA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,KAAA,YAAA;AACA,KANA;AAOA,IAAA,OAPA,qBAOA;AACA,WAAA,KAAA,CAAA,UAAA,CAAA,IAAA;;AACA,UAAA,CAAA,KAAA,QAAA,EAAA;AACA,aAAA,MAAA;AACA;AACA,KAZA;AAaA,IAAA,KAbA,mBAaA,CAAA;AAbA;AA3BA,CAAA","sourcesContent":["<template>\n  <div>\n    <b-form-input\n      ref=\"rangeInput\"\n      type=\"range\"\n      :value=\"value\"\n      :min=\"parameter.min\"\n      :max=\"parameter.max\"\n      :step=\"parameter.step || 'any'\"\n      @input=\"updateValue\"\n      @mouseup=\"mouseUp\"\n      @keyup=\"keyUp\"\n    />\n    <small>Value: {{ roundedValue }}</small>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"interactive-parameter-range-widget\",\n  props: {\n    value: {\n      type: Number,\n      required: true,\n    },\n    parameter: {\n      type: Object,\n    },\n  },\n  data() {\n    return {\n      currentValue: parseFloat(this.value),\n    };\n  },\n  computed: {\n    disabled() {\n      return this.currentValue === this.initialValue;\n    },\n    initialValue() {\n      return parseFloat(this.value);\n    },\n    roundedValue() {\n      return this.currentValue ? this.currentValue.toFixed(2) : null;\n    },\n  },\n  methods: {\n    updateValue(newValue) {\n      this.currentValue = parseFloat(newValue);\n    },\n    submit() {\n      this.$emit(\"input\", this.currentValue);\n    },\n    mouseUp() {\n      this.$refs.rangeInput.blur();\n      if (!this.disabled) {\n        this.submit();\n      }\n    },\n    keyUp() {},\n  },\n};\n</script>\n"],"sourceRoot":"static/django_airavata_workspace/js/components/experiment/output-displays/interactive-parameters"}]}