{"remainingRequest":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/thread-loader/dist/cjs.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/babel-loader/lib/index.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vanishing/git/airavata-django-portal/django_airavata/static/common/js/components/ComputeResourceName.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/static/common/js/components/ComputeResourceName.vue","mtime":1638641844579},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/thread-loader/dist/cjs.js","mtime":1638646228889},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/babel-loader/lib/index.js","mtime":1638646225600},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/vue-loader/lib/index.js","mtime":1638646228900}],"contextDependencies":[],"result":["//\n//\n//\nimport { services } from \"django-airavata-api\";\nexport default {\n  name: \"compute-resource-name\",\n  props: {\n    computeResourceId: {\n      type: String,\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      computeResource: null,\n      notAvailable: false\n    };\n  },\n  created: function created() {\n    this.loadComputeResource();\n  },\n  methods: {\n    loadComputeResource: function loadComputeResource() {\n      var _this = this;\n\n      services.ComputeResourceService.retrieve({\n        lookup: this.computeResourceId\n      }, {\n        ignoreErrors: true,\n        cache: true\n      }).then(function (computeResource) {\n        return _this.computeResource = computeResource;\n      }).catch(function () {\n        return _this.notAvailable = true;\n      });\n    }\n  },\n  computed: {\n    name: function name() {\n      if (this.notAvailable) {\n        return \"N/A\";\n      } else {\n        return this.computeResource ? this.computeResource.hostName : \"\";\n      }\n    }\n  },\n  watch: {\n    computeResourceId: function computeResourceId() {\n      this.loadComputeResource();\n    }\n  }\n};",{"version":3,"sources":["ComputeResourceName.vue"],"names":[],"mappings":";;;AAIA,SAAA,QAAA,QAAA,qBAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,uBADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,iBAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA;AADA,GAFA;AAQA,EAAA,IARA,kBAQA;AACA,WAAA;AACA,MAAA,eAAA,EAAA,IADA;AAEA,MAAA,YAAA,EAAA;AAFA,KAAA;AAIA,GAbA;AAcA,EAAA,OAdA,qBAcA;AACA,SAAA,mBAAA;AACA,GAhBA;AAiBA,EAAA,OAAA,EAAA;AACA,IAAA,mBADA,iCACA;AAAA;;AACA,MAAA,QAAA,CAAA,sBAAA,CAAA,QAAA,CACA;AAAA,QAAA,MAAA,EAAA,KAAA;AAAA,OADA,EAEA;AAAA,QAAA,YAAA,EAAA,IAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAFA,EAIA,IAJA,CAIA,UAAA,eAAA;AAAA,eAAA,KAAA,CAAA,eAAA,GAAA,eAAA;AAAA,OAJA,EAKA,KALA,CAKA;AAAA,eAAA,KAAA,CAAA,YAAA,GAAA,IAAA;AAAA,OALA;AAMA;AARA,GAjBA;AA2BA,EAAA,QAAA,EAAA;AACA,IAAA,IADA,kBACA;AACA,UAAA,KAAA,YAAA,EAAA;AACA,eAAA,KAAA;AACA,OAFA,MAEA;AACA,eAAA,KAAA,eAAA,GAAA,KAAA,eAAA,CAAA,QAAA,GAAA,EAAA;AACA;AACA;AAPA,GA3BA;AAoCA,EAAA,KAAA,EAAA;AACA,IAAA,iBADA,+BACA;AACA,WAAA,mBAAA;AACA;AAHA;AApCA,CAAA","sourcesContent":["<template>\n  <span :class=\"{ 'font-italic': notAvailable }\">{{ name }}</span>\n</template>\n<script>\nimport { services } from \"django-airavata-api\";\nexport default {\n  name: \"compute-resource-name\",\n  props: {\n    computeResourceId: {\n      type: String,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      computeResource: null,\n      notAvailable: false,\n    };\n  },\n  created() {\n    this.loadComputeResource();\n  },\n  methods: {\n    loadComputeResource() {\n      services.ComputeResourceService.retrieve(\n        { lookup: this.computeResourceId },\n        { ignoreErrors: true, cache: true }\n      )\n        .then((computeResource) => (this.computeResource = computeResource))\n        .catch(() => (this.notAvailable = true));\n    },\n  },\n  computed: {\n    name() {\n      if (this.notAvailable) {\n        return \"N/A\";\n      } else {\n        return this.computeResource ? this.computeResource.hostName : \"\";\n      }\n    },\n  },\n  watch: {\n    computeResourceId() {\n      this.loadComputeResource();\n    },\n  },\n};\n</script>\n"],"sourceRoot":"../../static/common/js/components"}]}