{"remainingRequest":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/thread-loader/dist/cjs.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/babel-loader/lib/index.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/errors/UnhandledErrorDispatcher.js","dependencies":[{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/errors/UnhandledErrorDispatcher.js","mtime":1638641844319},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/thread-loader/dist/cjs.js","mtime":1638646228889},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/babel-loader/lib/index.js","mtime":1638646225600},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1638646227499}],"contextDependencies":[],"result":["import _classCallCheck from \"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\nimport ErrorReporter from \"./ErrorReporter\";\nimport UnhandledError from \"./UnhandledError\";\nimport UnhandledErrorList from \"./UnhandledErrorDisplayList\";\n\nvar UnhandledErrorDispatcher =\n/*#__PURE__*/\nfunction () {\n  function UnhandledErrorDispatcher() {\n    _classCallCheck(this, UnhandledErrorDispatcher);\n  }\n\n  _createClass(UnhandledErrorDispatcher, [{\n    key: \"reportError\",\n    value: function reportError(_ref) {\n      var _ref$message = _ref.message,\n          message = _ref$message === void 0 ? null : _ref$message,\n          _ref$error = _ref.error,\n          error = _ref$error === void 0 ? null : _ref$error,\n          _ref$details = _ref.details,\n          details = _ref$details === void 0 ? null : _ref$details,\n          _ref$suppressDisplay = _ref.suppressDisplay,\n          suppressDisplay = _ref$suppressDisplay === void 0 ? false : _ref$suppressDisplay,\n          _ref$suppressLogging = _ref.suppressLogging,\n          suppressLogging = _ref$suppressLogging === void 0 ? false : _ref$suppressLogging;\n      var unhandledError = new UnhandledError({\n        message: message,\n        error: error,\n        details: details,\n        suppressDisplay: suppressDisplay,\n        suppressLogging: suppressLogging\n      });\n      this.reportUnhandledError(unhandledError);\n    }\n  }, {\n    key: \"reportUnhandledError\",\n    value: function reportUnhandledError(unhandledError) {\n      if (!unhandledError.suppressDisplay) {\n        UnhandledErrorList.add(unhandledError);\n      }\n\n      if (!unhandledError.suppressLogging) {\n        ErrorReporter.reportUnhandledError(unhandledError);\n      }\n    }\n  }]);\n\n  return UnhandledErrorDispatcher;\n}();\n\nexport default new UnhandledErrorDispatcher();",{"version":3,"sources":["/home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/errors/UnhandledErrorDispatcher.js"],"names":["ErrorReporter","UnhandledError","UnhandledErrorList","UnhandledErrorDispatcher","message","error","details","suppressDisplay","suppressLogging","unhandledError","reportUnhandledError","add"],"mappings":";;AAAA,OAAOA,aAAP;AACA,OAAOC,cAAP;AACA,OAAOC,kBAAP;;IAEMC,wB;;;;;;;;;sCAOD;AAAA,8BALDC,OAKC;AAAA,UALDA,OAKC,6BALS,IAKT;AAAA,4BAJDC,KAIC;AAAA,UAJDA,KAIC,2BAJO,IAIP;AAAA,8BAHDC,OAGC;AAAA,UAHDA,OAGC,6BAHS,IAGT;AAAA,sCAFDC,eAEC;AAAA,UAFDA,eAEC,qCAFiB,KAEjB;AAAA,sCADDC,eACC;AAAA,UADDA,eACC,qCADiB,KACjB;AACD,UAAMC,cAAc,GAAG,IAAIR,cAAJ,CAAmB;AACxCG,QAAAA,OAAO,EAAPA,OADwC;AAExCC,QAAAA,KAAK,EAALA,KAFwC;AAGxCC,QAAAA,OAAO,EAAPA,OAHwC;AAIxCC,QAAAA,eAAe,EAAfA,eAJwC;AAKxCC,QAAAA,eAAe,EAAfA;AALwC,OAAnB,CAAvB;AAOA,WAAKE,oBAAL,CAA0BD,cAA1B;AACD;;;yCAEoBA,c,EAAgB;AACnC,UAAI,CAACA,cAAc,CAACF,eAApB,EAAqC;AACnCL,QAAAA,kBAAkB,CAACS,GAAnB,CAAuBF,cAAvB;AACD;;AACD,UAAI,CAACA,cAAc,CAACD,eAApB,EAAqC;AACnCR,QAAAA,aAAa,CAACU,oBAAd,CAAmCD,cAAnC;AACD;AACF;;;;;;AAGH,eAAe,IAAIN,wBAAJ,EAAf","sourcesContent":["import ErrorReporter from \"./ErrorReporter\";\nimport UnhandledError from \"./UnhandledError\";\nimport UnhandledErrorList from \"./UnhandledErrorDisplayList\";\n\nclass UnhandledErrorDispatcher {\n  reportError({\n    message = null,\n    error = null,\n    details = null,\n    suppressDisplay = false,\n    suppressLogging = false,\n  }) {\n    const unhandledError = new UnhandledError({\n      message,\n      error,\n      details,\n      suppressDisplay,\n      suppressLogging,\n    });\n    this.reportUnhandledError(unhandledError);\n  }\n\n  reportUnhandledError(unhandledError) {\n    if (!unhandledError.suppressDisplay) {\n      UnhandledErrorList.add(unhandledError);\n    }\n    if (!unhandledError.suppressLogging) {\n      ErrorReporter.reportUnhandledError(unhandledError);\n    }\n  }\n}\n\nexport default new UnhandledErrorDispatcher();\n"]}]}