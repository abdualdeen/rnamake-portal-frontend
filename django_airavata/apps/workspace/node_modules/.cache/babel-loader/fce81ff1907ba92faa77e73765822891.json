{"remainingRequest":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/thread-loader/dist/cjs.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/babel-loader/lib/index.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/BatchQueueResourcePolicy.js","dependencies":[{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/BatchQueueResourcePolicy.js","mtime":1638641844319},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/thread-loader/dist/cjs.js","mtime":1638646228889},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/babel-loader/lib/index.js","mtime":1638646225600},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1638646227499}],"contextDependencies":[],"result":["import BaseModel from \"./BaseModel\";\nvar FIELDS = [\"resourcePolicyId\", \"computeResourceId\", \"groupResourceProfileId\", \"queuename\", \"maxAllowedNodes\", \"maxAllowedCores\", \"maxAllowedWalltime\"];\nexport default class BatchQueueResourcePolicy extends BaseModel {\n  constructor() {\n    var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super(FIELDS, data);\n  }\n\n  validate(batchQueue) {\n    var validationResults = {};\n\n    if (this.maxAllowedNodes && this.maxAllowedNodes < 1) {\n      validationResults[\"maxAllowedNodes\"] = \"Must be at least 1.\";\n    } else if (this.maxAllowedNodes > batchQueue.maxNodes) {\n      validationResults[\"maxAllowedNodes\"] = `Must be at most ${batchQueue.maxNodes}.`;\n    }\n\n    if (this.maxAllowedCores && this.maxAllowedCores < 1) {\n      validationResults[\"maxAllowedCores\"] = \"Must be at least 1.\";\n    } else if (this.maxAllowedCores > batchQueue.maxProcessors) {\n      validationResults[\"maxAllowedCores\"] = `Must be at most ${batchQueue.maxProcessors}.`;\n    }\n\n    if (this.maxAllowedWalltime && this.maxAllowedWalltime < 1) {\n      validationResults[\"maxAllowedWalltime\"] = \"Must be at least 1.\";\n    } else if (this.maxAllowedWalltime > batchQueue.maxRunTime) {\n      validationResults[\"maxAllowedWalltime\"] = `Must be at most ${batchQueue.maxRunTime}.`;\n    }\n\n    return validationResults;\n  }\n\n}",{"version":3,"sources":["/home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/BatchQueueResourcePolicy.js"],"names":["BaseModel","FIELDS","BatchQueueResourcePolicy","constructor","data","validate","batchQueue","validationResults","maxAllowedNodes","maxNodes","maxAllowedCores","maxProcessors","maxAllowedWalltime","maxRunTime"],"mappings":"AAAA,OAAOA,SAAP;AAEA,IAAMC,MAAM,GAAG,CACb,kBADa,EAEb,mBAFa,EAGb,wBAHa,EAIb,WAJa,EAKb,iBALa,EAMb,iBANa,EAOb,oBAPa,CAAf;AAUA,eAAe,MAAMC,wBAAN,SAAuCF,SAAvC,CAAiD;AAC9DG,EAAAA,WAAW,GAAY;AAAA,QAAXC,IAAW,uEAAJ,EAAI;AACrB,UAAMH,MAAN,EAAcG,IAAd;AACD;;AAEDC,EAAAA,QAAQ,CAACC,UAAD,EAAa;AACnB,QAAIC,iBAAiB,GAAG,EAAxB;;AACA,QAAI,KAAKC,eAAL,IAAwB,KAAKA,eAAL,GAAuB,CAAnD,EAAsD;AACpDD,MAAAA,iBAAiB,CAAC,iBAAD,CAAjB,GAAuC,qBAAvC;AACD,KAFD,MAEO,IAAI,KAAKC,eAAL,GAAuBF,UAAU,CAACG,QAAtC,EAAgD;AACrDF,MAAAA,iBAAiB,CACf,iBADe,CAAjB,GAEK,mBAAkBD,UAAU,CAACG,QAAS,GAF3C;AAGD;;AACD,QAAI,KAAKC,eAAL,IAAwB,KAAKA,eAAL,GAAuB,CAAnD,EAAsD;AACpDH,MAAAA,iBAAiB,CAAC,iBAAD,CAAjB,GAAuC,qBAAvC;AACD,KAFD,MAEO,IAAI,KAAKG,eAAL,GAAuBJ,UAAU,CAACK,aAAtC,EAAqD;AAC1DJ,MAAAA,iBAAiB,CACf,iBADe,CAAjB,GAEK,mBAAkBD,UAAU,CAACK,aAAc,GAFhD;AAGD;;AACD,QAAI,KAAKC,kBAAL,IAA2B,KAAKA,kBAAL,GAA0B,CAAzD,EAA4D;AAC1DL,MAAAA,iBAAiB,CAAC,oBAAD,CAAjB,GAA0C,qBAA1C;AACD,KAFD,MAEO,IAAI,KAAKK,kBAAL,GAA0BN,UAAU,CAACO,UAAzC,EAAqD;AAC1DN,MAAAA,iBAAiB,CACf,oBADe,CAAjB,GAEK,mBAAkBD,UAAU,CAACO,UAAW,GAF7C;AAGD;;AACD,WAAON,iBAAP;AACD;;AA7B6D","sourcesContent":["import BaseModel from \"./BaseModel\";\n\nconst FIELDS = [\n  \"resourcePolicyId\",\n  \"computeResourceId\",\n  \"groupResourceProfileId\",\n  \"queuename\",\n  \"maxAllowedNodes\",\n  \"maxAllowedCores\",\n  \"maxAllowedWalltime\",\n];\n\nexport default class BatchQueueResourcePolicy extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n  }\n\n  validate(batchQueue) {\n    let validationResults = {};\n    if (this.maxAllowedNodes && this.maxAllowedNodes < 1) {\n      validationResults[\"maxAllowedNodes\"] = \"Must be at least 1.\";\n    } else if (this.maxAllowedNodes > batchQueue.maxNodes) {\n      validationResults[\n        \"maxAllowedNodes\"\n      ] = `Must be at most ${batchQueue.maxNodes}.`;\n    }\n    if (this.maxAllowedCores && this.maxAllowedCores < 1) {\n      validationResults[\"maxAllowedCores\"] = \"Must be at least 1.\";\n    } else if (this.maxAllowedCores > batchQueue.maxProcessors) {\n      validationResults[\n        \"maxAllowedCores\"\n      ] = `Must be at most ${batchQueue.maxProcessors}.`;\n    }\n    if (this.maxAllowedWalltime && this.maxAllowedWalltime < 1) {\n      validationResults[\"maxAllowedWalltime\"] = \"Must be at least 1.\";\n    } else if (this.maxAllowedWalltime > batchQueue.maxRunTime) {\n      validationResults[\n        \"maxAllowedWalltime\"\n      ] = `Must be at most ${batchQueue.maxRunTime}.`;\n    }\n    return validationResults;\n  }\n}\n"]}]}