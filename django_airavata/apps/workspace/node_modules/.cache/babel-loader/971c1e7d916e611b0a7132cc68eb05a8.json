{"remainingRequest":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/thread-loader/dist/cjs.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/babel-loader/lib/index.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/static/django_airavata_workspace/js/web-components/input-editors/InlineOptionsMixin.js","dependencies":[{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/static/django_airavata_workspace/js/web-components/input-editors/InlineOptionsMixin.js","mtime":1638641844346},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/thread-loader/dist/cjs.js","mtime":1638646228889},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/babel-loader/lib/index.js","mtime":1638646225600},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1638646227499}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\nexport default {\n  data() {\n    return {\n      inlineOptions: []\n    };\n  },\n\n  computed: {\n    allOptions() {\n      // Copy options\n      var result = this.options ? this.options.slice() : []; // Copy inlineOptions into result\n\n      result.push(...this.inlineOptions); // return null if empty\n\n      return result.length > 0 ? result : null;\n    }\n\n  },\n\n  mounted() {\n    this.$nextTick(() => {\n      // Create default slot programmatically\n      this.$refs.optionsSlot.append(document.createElement(\"slot\"));\n      this.readInlineOptions();\n      this.addInlineOptionsChangeListener();\n    });\n  },\n\n  destroyed() {\n    this.removeInlineOptionsChangeListener();\n  },\n\n  methods: {\n    readInlineOptions() {\n      // Find options in slot and load them in\n      var slot = this.$el.querySelector(\"slot\");\n      var els = slot.assignedElements();\n      this.inlineOptions = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = els[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var el = _step.value;\n\n          if (el.tagName === \"OPTION\") {\n            this.inlineOptions.push({\n              text: el.textContent,\n              value: el.value\n            });\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    },\n\n    addInlineOptionsChangeListener() {\n      var slot = this.$el.querySelector(\"slot\"); // listen for changing options https://developer.mozilla.org/en-US/docs/Web/API/HTMLSlotElement#examples\n\n      slot.addEventListener(\"slotchange\", this.readInlineOptions);\n    },\n\n    removeInlineOptionsChangeListener() {\n      var slot = this.$el.querySelector(\"slot\");\n      slot.removeEventListener(\"slotchange\", this.readInlineOptions);\n    }\n\n  }\n};",{"version":3,"sources":["/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/static/django_airavata_workspace/js/web-components/input-editors/InlineOptionsMixin.js"],"names":["data","inlineOptions","computed","allOptions","result","options","slice","push","length","mounted","$nextTick","$refs","optionsSlot","append","document","createElement","readInlineOptions","addInlineOptionsChangeListener","destroyed","removeInlineOptionsChangeListener","methods","slot","$el","querySelector","els","assignedElements","el","tagName","text","textContent","value","addEventListener","removeEventListener"],"mappings":";;;AAAA,eAAe;AACbA,EAAAA,IAAI,GAAG;AACL,WAAO;AACLC,MAAAA,aAAa,EAAE;AADV,KAAP;AAGD,GALY;;AAMbC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,GAAG;AACX;AACA,UAAMC,MAAM,GAAG,KAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaC,KAAb,EAAf,GAAsC,EAArD,CAFW,CAGX;;AACAF,MAAAA,MAAM,CAACG,IAAP,CAAY,GAAG,KAAKN,aAApB,EAJW,CAKX;;AACA,aAAOG,MAAM,CAACI,MAAP,GAAgB,CAAhB,GAAoBJ,MAApB,GAA6B,IAApC;AACD;;AARO,GANG;;AAgBbK,EAAAA,OAAO,GAAG;AACR,SAAKC,SAAL,CAAe,MAAM;AACnB;AACA,WAAKC,KAAL,CAAWC,WAAX,CAAuBC,MAAvB,CAA8BC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAA9B;AACA,WAAKC,iBAAL;AACA,WAAKC,8BAAL;AACD,KALD;AAMD,GAvBY;;AAwBbC,EAAAA,SAAS,GAAG;AACV,SAAKC,iCAAL;AACD,GA1BY;;AA2BbC,EAAAA,OAAO,EAAE;AACPJ,IAAAA,iBAAiB,GAAG;AAClB;AACA,UAAMK,IAAI,GAAG,KAAKC,GAAL,CAASC,aAAT,CAAuB,MAAvB,CAAb;AACA,UAAMC,GAAG,GAAGH,IAAI,CAACI,gBAAL,EAAZ;AACA,WAAKxB,aAAL,GAAqB,EAArB;AAJkB;AAAA;AAAA;;AAAA;AAKlB,6BAAiBuB,GAAjB,8HAAsB;AAAA,cAAXE,EAAW;;AACpB,cAAIA,EAAE,CAACC,OAAH,KAAe,QAAnB,EAA6B;AAC3B,iBAAK1B,aAAL,CAAmBM,IAAnB,CAAwB;AAAEqB,cAAAA,IAAI,EAAEF,EAAE,CAACG,WAAX;AAAwBC,cAAAA,KAAK,EAAEJ,EAAE,CAACI;AAAlC,aAAxB;AACD;AACF;AATiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUnB,KAXM;;AAYPb,IAAAA,8BAA8B,GAAG;AAC/B,UAAMI,IAAI,GAAG,KAAKC,GAAL,CAASC,aAAT,CAAuB,MAAvB,CAAb,CAD+B,CAE/B;;AACAF,MAAAA,IAAI,CAACU,gBAAL,CAAsB,YAAtB,EAAoC,KAAKf,iBAAzC;AACD,KAhBM;;AAiBPG,IAAAA,iCAAiC,GAAG;AAClC,UAAME,IAAI,GAAG,KAAKC,GAAL,CAASC,aAAT,CAAuB,MAAvB,CAAb;AACAF,MAAAA,IAAI,CAACW,mBAAL,CAAyB,YAAzB,EAAuC,KAAKhB,iBAA5C;AACD;;AApBM;AA3BI,CAAf","sourcesContent":["export default {\n  data() {\n    return {\n      inlineOptions: [],\n    };\n  },\n  computed: {\n    allOptions() {\n      // Copy options\n      const result = this.options ? this.options.slice() : [];\n      // Copy inlineOptions into result\n      result.push(...this.inlineOptions);\n      // return null if empty\n      return result.length > 0 ? result : null;\n    },\n  },\n  mounted() {\n    this.$nextTick(() => {\n      // Create default slot programmatically\n      this.$refs.optionsSlot.append(document.createElement(\"slot\"));\n      this.readInlineOptions();\n      this.addInlineOptionsChangeListener();\n    });\n  },\n  destroyed() {\n    this.removeInlineOptionsChangeListener();\n  },\n  methods: {\n    readInlineOptions() {\n      // Find options in slot and load them in\n      const slot = this.$el.querySelector(\"slot\");\n      const els = slot.assignedElements();\n      this.inlineOptions = [];\n      for (const el of els) {\n        if (el.tagName === \"OPTION\") {\n          this.inlineOptions.push({ text: el.textContent, value: el.value });\n        }\n      }\n    },\n    addInlineOptionsChangeListener() {\n      const slot = this.$el.querySelector(\"slot\");\n      // listen for changing options https://developer.mozilla.org/en-US/docs/Web/API/HTMLSlotElement#examples\n      slot.addEventListener(\"slotchange\", this.readInlineOptions);\n    },\n    removeInlineOptionsChangeListener() {\n      const slot = this.$el.querySelector(\"slot\");\n      slot.removeEventListener(\"slotchange\", this.readInlineOptions);\n    },\n  },\n};\n"]}]}