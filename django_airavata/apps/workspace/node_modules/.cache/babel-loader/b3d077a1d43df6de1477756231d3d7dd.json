{"remainingRequest":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/thread-loader/dist/cjs.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/babel-loader/lib/index.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/GroupComputeResourcePreference.js","dependencies":[{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/GroupComputeResourcePreference.js","mtime":1638641844319},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/thread-loader/dist/cjs.js","mtime":1638646228889},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/babel-loader/lib/index.js","mtime":1638646225600},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1638646227499}],"contextDependencies":[],"result":["import _classCallCheck from \"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/@babel/runtime-corejs2/helpers/esm/inherits\";\nimport BaseModel from \"./BaseModel\";\nimport ComputeResourceReservation from \"./ComputeResourceReservation\";\nvar FIELDS = [\"computeResourceId\", \"groupResourceProfileId\", {\n  name: \"overridebyAiravata\",\n  type: \"boolean\",\n  default: true\n}, \"loginUserName\", \"preferredJobSubmissionProtocol\", \"preferredDataMovementProtocol\", \"preferredBatchQueue\", \"scratchLocation\", \"allocationProjectNumber\", \"resourceSpecificCredentialStoreToken\", \"usageReportingGatewayId\", \"qualityOfService\", \"sshAccountProvisioner\", \"groupSSHAccountProvisionerConfigs\", \"sshAccountProvisionerAdditionalInfo\", {\n  name: \"reservations\",\n  type: ComputeResourceReservation,\n  list: true,\n  default: BaseModel.defaultNewInstance(Array)\n}];\n\nvar GroupComputeResourcePreference =\n/*#__PURE__*/\nfunction (_BaseModel) {\n  _inherits(GroupComputeResourcePreference, _BaseModel);\n\n  function GroupComputeResourcePreference() {\n    var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, GroupComputeResourcePreference);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(GroupComputeResourcePreference).call(this, FIELDS, data));\n  }\n\n  _createClass(GroupComputeResourcePreference, [{\n    key: \"validate\",\n    value: function validate() {\n      var validationResults = {};\n\n      if (this.isEmpty(this.loginUserName)) {\n        validationResults[\"loginUserName\"] = \"Please provide a login username.\";\n      }\n\n      if (this.isEmpty(this.scratchLocation)) {\n        validationResults[\"scratchLocation\"] = \"Please provide a scratch location.\";\n      }\n\n      return validationResults;\n    }\n  }]);\n\n  return GroupComputeResourcePreference;\n}(BaseModel);\n\nexport { GroupComputeResourcePreference as default };",{"version":3,"sources":["/home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/GroupComputeResourcePreference.js"],"names":["BaseModel","ComputeResourceReservation","FIELDS","name","type","default","list","defaultNewInstance","Array","GroupComputeResourcePreference","data","validationResults","isEmpty","loginUserName","scratchLocation"],"mappings":";;;;;AAAA,OAAOA,SAAP;AACA,OAAOC,0BAAP;AAEA,IAAMC,MAAM,GAAG,CACb,mBADa,EAEb,wBAFa,EAGb;AACEC,EAAAA,IAAI,EAAE,oBADR;AAEEC,EAAAA,IAAI,EAAE,SAFR;AAGEC,EAAAA,OAAO,EAAE;AAHX,CAHa,EAQb,eARa,EASb,gCATa,EAUb,+BAVa,EAWb,qBAXa,EAYb,iBAZa,EAab,yBAba,EAcb,sCAda,EAeb,yBAfa,EAgBb,kBAhBa,EAiBb,uBAjBa,EAkBb,mCAlBa,EAmBb,qCAnBa,EAoBb;AACEF,EAAAA,IAAI,EAAE,cADR;AAEEC,EAAAA,IAAI,EAAEH,0BAFR;AAGEK,EAAAA,IAAI,EAAE,IAHR;AAIED,EAAAA,OAAO,EAAEL,SAAS,CAACO,kBAAV,CAA6BC,KAA7B;AAJX,CApBa,CAAf;;IA6BqBC,8B;;;;;AACnB,4CAAuB;AAAA,QAAXC,IAAW,uEAAJ,EAAI;;AAAA;;AAAA,uGACfR,MADe,EACPQ,IADO;AAEtB;;;;+BAEU;AACT,UAAIC,iBAAiB,GAAG,EAAxB;;AACA,UAAI,KAAKC,OAAL,CAAa,KAAKC,aAAlB,CAAJ,EAAsC;AACpCF,QAAAA,iBAAiB,CAAC,eAAD,CAAjB,GAAqC,kCAArC;AACD;;AACD,UAAI,KAAKC,OAAL,CAAa,KAAKE,eAAlB,CAAJ,EAAwC;AACtCH,QAAAA,iBAAiB,CAAC,iBAAD,CAAjB,GACE,oCADF;AAED;;AACD,aAAOA,iBAAP;AACD;;;;EAfyDX,S;;SAAvCS,8B","sourcesContent":["import BaseModel from \"./BaseModel\";\nimport ComputeResourceReservation from \"./ComputeResourceReservation\";\n\nconst FIELDS = [\n  \"computeResourceId\",\n  \"groupResourceProfileId\",\n  {\n    name: \"overridebyAiravata\",\n    type: \"boolean\",\n    default: true,\n  },\n  \"loginUserName\",\n  \"preferredJobSubmissionProtocol\",\n  \"preferredDataMovementProtocol\",\n  \"preferredBatchQueue\",\n  \"scratchLocation\",\n  \"allocationProjectNumber\",\n  \"resourceSpecificCredentialStoreToken\",\n  \"usageReportingGatewayId\",\n  \"qualityOfService\",\n  \"sshAccountProvisioner\",\n  \"groupSSHAccountProvisionerConfigs\",\n  \"sshAccountProvisionerAdditionalInfo\",\n  {\n    name: \"reservations\",\n    type: ComputeResourceReservation,\n    list: true,\n    default: BaseModel.defaultNewInstance(Array),\n  },\n  \n];\n\nexport default class GroupComputeResourcePreference extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n  }\n\n  validate() {\n    let validationResults = {};\n    if (this.isEmpty(this.loginUserName)) {\n      validationResults[\"loginUserName\"] = \"Please provide a login username.\";\n    }\n    if (this.isEmpty(this.scratchLocation)) {\n      validationResults[\"scratchLocation\"] =\n        \"Please provide a scratch location.\";\n    }\n    return validationResults;\n  }\n}\n"]}]}