{"remainingRequest":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/thread-loader/dist/cjs.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/babel-loader/lib/index.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/BaseEnum.js","dependencies":[{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/BaseEnum.js","mtime":1638641844319},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/thread-loader/dist/cjs.js","mtime":1638646228889},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/babel-loader/lib/index.js","mtime":1638646225600},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1638646227499}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nexport default class BaseEnum {\n  // TODO: add parameter\n  constructor(name, value) {\n    var writeName = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    this.name = name;\n    this.value = value;\n    this.writeName = writeName; // immutable\n\n    Object.freeze(this);\n  }\n\n  toJSON() {\n    return this.writeName ? this.name : this.value;\n  }\n\n  static byName(name) {\n    return this.values.find(x => x.name === name);\n  }\n\n  static byValue(value) {\n    return this.values.find(x => x.value === value);\n  } // This must be called to initialize static methods on the Enum subclass\n\n\n  static init(names) {\n    var writeName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var enums = names.map((name, index) => new this(name, index, writeName));\n    Object.freeze(enums);\n    Object.defineProperty(this, \"values\", {\n      get: function get() {\n        return enums;\n      }\n    });\n    this.values.forEach(v => this[v.name] = v);\n  }\n\n}",{"version":3,"sources":["/home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/BaseEnum.js"],"names":["BaseEnum","constructor","name","value","writeName","Object","freeze","toJSON","byName","values","find","x","byValue","init","names","enums","map","index","defineProperty","get","forEach","v"],"mappings":";AAAA,eAAe,MAAMA,QAAN,CAAe;AAC5B;AACAC,EAAAA,WAAW,CAACC,IAAD,EAAOC,KAAP,EAAiC;AAAA,QAAnBC,SAAmB,uEAAP,KAAO;AAC1C,SAAKF,IAAL,GAAYA,IAAZ;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKC,SAAL,GAAiBA,SAAjB,CAH0C,CAI1C;;AACAC,IAAAA,MAAM,CAACC,MAAP,CAAc,IAAd;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,WAAO,KAAKH,SAAL,GAAiB,KAAKF,IAAtB,GAA6B,KAAKC,KAAzC;AACD;;AACD,SAAOK,MAAP,CAAcN,IAAd,EAAoB;AAClB,WAAO,KAAKO,MAAL,CAAYC,IAAZ,CAAkBC,CAAD,IAAOA,CAAC,CAACT,IAAF,KAAWA,IAAnC,CAAP;AACD;;AACD,SAAOU,OAAP,CAAeT,KAAf,EAAsB;AACpB,WAAO,KAAKM,MAAL,CAAYC,IAAZ,CAAkBC,CAAD,IAAOA,CAAC,CAACR,KAAF,KAAYA,KAApC,CAAP;AACD,GAjB2B,CAkB5B;;;AACA,SAAOU,IAAP,CAAYC,KAAZ,EAAsC;AAAA,QAAnBV,SAAmB,uEAAP,KAAO;AACpC,QAAMW,KAAK,GAAGD,KAAK,CAACE,GAAN,CAAU,CAACd,IAAD,EAAOe,KAAP,KAAiB,IAAI,IAAJ,CAASf,IAAT,EAAee,KAAf,EAAsBb,SAAtB,CAA3B,CAAd;AACAC,IAAAA,MAAM,CAACC,MAAP,CAAcS,KAAd;AACAV,IAAAA,MAAM,CAACa,cAAP,CAAsB,IAAtB,EAA4B,QAA5B,EAAsC;AACpCC,MAAAA,GAAG,EAAE,eAAY;AACf,eAAOJ,KAAP;AACD;AAHmC,KAAtC;AAKA,SAAKN,MAAL,CAAYW,OAAZ,CAAqBC,CAAD,IAAQ,KAAKA,CAAC,CAACnB,IAAP,IAAemB,CAA3C;AACD;;AA5B2B","sourcesContent":["export default class BaseEnum {\n  // TODO: add parameter\n  constructor(name, value, writeName = false) {\n    this.name = name;\n    this.value = value;\n    this.writeName = writeName;\n    // immutable\n    Object.freeze(this);\n  }\n  toJSON() {\n    return this.writeName ? this.name : this.value;\n  }\n  static byName(name) {\n    return this.values.find((x) => x.name === name);\n  }\n  static byValue(value) {\n    return this.values.find((x) => x.value === value);\n  }\n  // This must be called to initialize static methods on the Enum subclass\n  static init(names, writeName = false) {\n    const enums = names.map((name, index) => new this(name, index, writeName));\n    Object.freeze(enums);\n    Object.defineProperty(this, \"values\", {\n      get: function () {\n        return enums;\n      },\n    });\n    this.values.forEach((v) => (this[v.name] = v));\n  }\n}\n"]}]}