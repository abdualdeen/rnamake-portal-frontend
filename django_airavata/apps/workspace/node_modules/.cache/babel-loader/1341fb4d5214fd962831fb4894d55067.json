{"remainingRequest":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/thread-loader/dist/cjs.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/babel-loader/lib/index.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/static/django_airavata_workspace/js/components/storage/ExperimentStoragePathViewer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/static/django_airavata_workspace/js/components/storage/ExperimentStoragePathViewer.vue","mtime":1639684988540},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/thread-loader/dist/cjs.js","mtime":1638646228889},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/babel-loader/lib/index.js","mtime":1638646225600},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/vue-loader/lib/index.js","mtime":1638646228900}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport StoragePathBreadcrumb from \"./StoragePathBreadcrumb.vue\";\nimport { components } from \"django-airavata-common-ui\";\nexport default {\n  name: \"experiment-storage-path-viewer\",\n  props: {\n    experimentStoragePath: {\n      required: true\n    },\n    downloadInNewWindow: {\n      type: Boolean,\n      default: false\n    },\n    experimentId: {\n      required: true\n    }\n  },\n  components: {\n    \"human-date\": components.HumanDate,\n    StoragePathBreadcrumb: StoragePathBreadcrumb\n  },\n  computed: {\n    fields: function fields() {\n      var _this = this;\n\n      return [{\n        label: \"Name\",\n        key: \"name\",\n        sortable: true\n      }, {\n        label: \"Size\",\n        key: \"size\",\n        sortable: true,\n        formatter: function formatter(value) {\n          return _this.getFormattedSize(value);\n        }\n      }, {\n        label: \"Created Time\",\n        key: \"createdTimestamp\",\n        sortable: true\n      }, {\n        label: \"Actions\",\n        key: \"actions\"\n      }];\n    },\n    items: function items() {\n      if (this.experimentStoragePath) {\n        var dirs = this.experimentStoragePath.directories.filter(function (d) {\n          return !d.hidden;\n        }).map(function (d) {\n          return {\n            name: d.name,\n            path: d.path,\n            type: \"dir\",\n            createdTime: d.createdTime,\n            createdTimestamp: d.createdTime.getTime(),\n            // for sorting\n            size: d.size\n          };\n        });\n        var files = this.experimentStoragePath.files.map(function (f) {\n          return {\n            name: f.name,\n            mimeType: f.mimeType,\n            type: \"file\",\n            dataProductURI: f.dataProductURI,\n            downloadURL: f.downloadURL,\n            createdTime: f.createdTime,\n            createdTimestamp: f.createdTime.getTime(),\n            // for sorting\n            size: f.size\n          };\n        });\n        return dirs.concat(files);\n      } else {\n        return [];\n      }\n    },\n    downloadTarget: function downloadTarget() {\n      return this.downloadInNewWindow ? \"_blank\" : \"_self\";\n    }\n  },\n  methods: {\n    getFormattedSize: function getFormattedSize(size) {\n      if (size > Math.pow(2, 30)) {\n        return Math.round(size / Math.pow(2, 30)) + \" GB\";\n      } else if (size > Math.pow(2, 20)) {\n        return Math.round(size / Math.pow(2, 20)) + \" MB\";\n      } else if (size > Math.pow(2, 10)) {\n        return Math.round(size / Math.pow(2, 10)) + \" KB\";\n      } else {\n        return size + \" bytes\";\n      }\n    },\n    directorySelected: function directorySelected(item) {\n      this.$emit(\"directory-selected\", item.path);\n    }\n  }\n};",{"version":3,"sources":["ExperimentStoragePathViewer.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <storage-path-breadcrumb\n      v-if=\"experimentStoragePath\"\n      :parts=\"experimentStoragePath.parts\"\n      rootName=\"Exp Data Dir\"\n      @directory-selected=\"$emit('directory-selected', $event)\"\n    />\n\n    <b-table\n      v-if=\"experimentStoragePath\"\n      :fields=\"fields\"\n      :items=\"items\"\n      sort-by=\"name\"\n    >\n      <template slot=\"cell(name)\" slot-scope=\"data\">\n        <b-link\n          v-if=\"data.item.type === 'dir'\"\n          @click=\"directorySelected(data.item)\"\n        >\n          <i class=\"fa fa-folder-open\"></i> {{ data.item.name }}</b-link\n        >\n        <b-link v-else :href=\"data.item.downloadURL\" :target=\"downloadTarget\">\n          {{ data.item.name }}</b-link\n        >\n      </template>\n      <template slot=\"cell(createdTimestamp)\" slot-scope=\"data\">\n        <human-date :date=\"data.item.createdTime\" />\n      </template>\n      <template slot=\"cell(actions)\" slot-scope=\"data\">\n        <b-link\n          v-if=\"data.item.type === 'file'\"\n          class=\"action-link\"\n          :href=\"`${data.item.downloadURL}&download`\"\n        >\n          Download File\n          <i class=\"fa fa-download\" aria-hidden=\"true\"></i>\n        </b-link>\n        <b-link\n          v-if=\"data.item.type === 'dir'\"\n          class=\"action-link\"\n          :href=\"`/sdk/download-experiment-dir/${encodeURIComponent(\n            experimentId\n          )}/?path=${data.item.path}`\"\n        >\n          Download Zip\n          <i class=\"fa fa-file-archive\" aria-hidden=\"true\"></i>\n        </b-link>\n      </template>\n    </b-table>\n  </div>\n</template>\n<script>\nimport StoragePathBreadcrumb from \"./StoragePathBreadcrumb.vue\";\nimport { components } from \"django-airavata-common-ui\";\n\nexport default {\n  name: \"experiment-storage-path-viewer\",\n  props: {\n    experimentStoragePath: {\n      required: true,\n    },\n    downloadInNewWindow: {\n      type: Boolean,\n      default: false,\n    },\n    experimentId: {\n      required: true,\n    },\n  },\n  components: {\n    \"human-date\": components.HumanDate,\n    StoragePathBreadcrumb,\n  },\n  computed: {\n    fields() {\n      return [\n        {\n          label: \"Name\",\n          key: \"name\",\n          sortable: true,\n        },\n        {\n          label: \"Size\",\n          key: \"size\",\n          sortable: true,\n          formatter: (value) => this.getFormattedSize(value),\n        },\n        {\n          label: \"Created Time\",\n          key: \"createdTimestamp\",\n          sortable: true,\n        },\n        {\n          label: \"Actions\",\n          key: \"actions\",\n        },\n      ];\n    },\n    items() {\n      if (this.experimentStoragePath) {\n        const dirs = this.experimentStoragePath.directories\n          .filter((d) => !d.hidden)\n          .map((d) => {\n            return {\n              name: d.name,\n              path: d.path,\n              type: \"dir\",\n              createdTime: d.createdTime,\n              createdTimestamp: d.createdTime.getTime(), // for sorting\n              size: d.size,\n            };\n          });\n        const files = this.experimentStoragePath.files.map((f) => {\n          return {\n            name: f.name,\n            mimeType: f.mimeType,\n            type: \"file\",\n            dataProductURI: f.dataProductURI,\n            downloadURL: f.downloadURL,\n            createdTime: f.createdTime,\n            createdTimestamp: f.createdTime.getTime(), // for sorting\n            size: f.size,\n          };\n        });\n        return dirs.concat(files);\n      } else {\n        return [];\n      }\n    },\n    downloadTarget() {\n      return this.downloadInNewWindow ? \"_blank\" : \"_self\";\n    },\n  },\n  methods: {\n    getFormattedSize(size) {\n      if (size > Math.pow(2, 30)) {\n        return Math.round(size / Math.pow(2, 30)) + \" GB\";\n      } else if (size > Math.pow(2, 20)) {\n        return Math.round(size / Math.pow(2, 20)) + \" MB\";\n      } else if (size > Math.pow(2, 10)) {\n        return Math.round(size / Math.pow(2, 10)) + \" KB\";\n      } else {\n        return size + \" bytes\";\n      }\n    },\n    directorySelected(item) {\n      this.$emit(\"directory-selected\", item.path);\n    },\n  },\n};\n</script>\n"],"sourceRoot":"static/django_airavata_workspace/js/components/storage"}]}