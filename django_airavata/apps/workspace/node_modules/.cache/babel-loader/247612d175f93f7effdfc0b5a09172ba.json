{"remainingRequest":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/thread-loader/dist/cjs.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/babel-loader/lib/index.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/errors/ErrorReporter.js","dependencies":[{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/errors/ErrorReporter.js","mtime":1638641844319},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/thread-loader/dist/cjs.js","mtime":1638646228889},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/babel-loader/lib/index.js","mtime":1638646225600},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1638646227499}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport { services } from \"..\";\nimport LogRecord from \"../models/LogRecord\";\nimport StackTrace from \"stacktrace-js\";\n\nclass ErrorReporter {\n  reportUnhandledError(unhandledError) {\n    console.log(JSON.stringify(unhandledError, null, 4)); // eslint-disable-line no-console\n\n    StackTrace.fromError(unhandledError.error).then(stackframes => {\n      var stacktrace = stackframes.map(sf => sf.toString());\n      services.LoggingService.send({\n        data: new LogRecord({\n          level: \"ERROR\",\n          message: unhandledError.message,\n          details: unhandledError.details,\n          stacktrace: stacktrace\n        })\n      }, {\n        ignoreErrors: true\n      }).catch(err => {\n        console.log(\"Failed to log error\", err); // eslint-disable-line no-console\n      });\n    }).catch(err => {\n      console.log(\"Failed to produce stacktrace\", err); // eslint-disable-line no-console\n    });\n  }\n\n}\n\nexport default new ErrorReporter();",{"version":3,"sources":["/home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/errors/ErrorReporter.js"],"names":["services","LogRecord","StackTrace","ErrorReporter","reportUnhandledError","unhandledError","console","log","JSON","stringify","fromError","error","then","stackframes","stacktrace","map","sf","toString","LoggingService","send","data","level","message","details","ignoreErrors","catch","err"],"mappings":";AAAA,SAASA,QAAT,QAAyB,IAAzB;AACA,OAAOC,SAAP;AAEA,OAAOC,UAAP,MAAuB,eAAvB;;AAEA,MAAMC,aAAN,CAAoB;AAClBC,EAAAA,oBAAoB,CAACC,cAAD,EAAiB;AACnCC,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeJ,cAAf,EAA+B,IAA/B,EAAqC,CAArC,CAAZ,EADmC,CACmB;;AAEtDH,IAAAA,UAAU,CAACQ,SAAX,CAAqBL,cAAc,CAACM,KAApC,EACGC,IADH,CACSC,WAAD,IAAiB;AACrB,UAAMC,UAAU,GAAGD,WAAW,CAACE,GAAZ,CAAiBC,EAAD,IAAQA,EAAE,CAACC,QAAH,EAAxB,CAAnB;AACAjB,MAAAA,QAAQ,CAACkB,cAAT,CAAwBC,IAAxB,CACE;AACEC,QAAAA,IAAI,EAAE,IAAInB,SAAJ,CAAc;AAClBoB,UAAAA,KAAK,EAAE,OADW;AAElBC,UAAAA,OAAO,EAAEjB,cAAc,CAACiB,OAFN;AAGlBC,UAAAA,OAAO,EAAElB,cAAc,CAACkB,OAHN;AAIlBT,UAAAA,UAAU,EAAEA;AAJM,SAAd;AADR,OADF,EASE;AAAEU,QAAAA,YAAY,EAAE;AAAhB,OATF,EAUEC,KAVF,CAUSC,GAAD,IAAS;AACfpB,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCmB,GAAnC,EADe,CAC0B;AAC1C,OAZD;AAaD,KAhBH,EAiBGD,KAjBH,CAiBUC,GAAD,IAAS;AACdpB,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CmB,GAA5C,EADc,CACoC;AACnD,KAnBH;AAoBD;;AAxBiB;;AA2BpB,eAAe,IAAIvB,aAAJ,EAAf","sourcesContent":["import { services } from \"..\";\nimport LogRecord from \"../models/LogRecord\";\n\nimport StackTrace from \"stacktrace-js\";\n\nclass ErrorReporter {\n  reportUnhandledError(unhandledError) {\n    console.log(JSON.stringify(unhandledError, null, 4)); // eslint-disable-line no-console\n\n    StackTrace.fromError(unhandledError.error)\n      .then((stackframes) => {\n        const stacktrace = stackframes.map((sf) => sf.toString());\n        services.LoggingService.send(\n          {\n            data: new LogRecord({\n              level: \"ERROR\",\n              message: unhandledError.message,\n              details: unhandledError.details,\n              stacktrace: stacktrace,\n            }),\n          },\n          { ignoreErrors: true }\n        ).catch((err) => {\n          console.log(\"Failed to log error\", err); // eslint-disable-line no-console\n        });\n      })\n      .catch((err) => {\n        console.log(\"Failed to produce stacktrace\", err); // eslint-disable-line no-console\n      });\n  }\n}\n\nexport default new ErrorReporter();\n"]}]}