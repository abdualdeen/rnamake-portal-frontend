{"remainingRequest":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/thread-loader/dist/cjs.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/babel-loader/lib/index.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/static/django_airavata_workspace/js/components/storage/UserStorageCreateView.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/static/django_airavata_workspace/js/components/storage/UserStorageCreateView.vue","mtime":1638641844343},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/thread-loader/dist/cjs.js","mtime":1638646228889},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/babel-loader/lib/index.js","mtime":1638646225600},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/vue-loader/lib/index.js","mtime":1638646228900}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { components } from \"django-airavata-common-ui\";\nimport { session } from \"django-airavata-api\";\nexport default {\n  name: \"user-storage-create-view\",\n  components: {\n    uppy: components.Uppy\n  },\n  computed: {\n    uploadEndpoint: function uploadEndpoint() {\n      // This endpoint can handle XHR upload or a TUS uploadURL\n      return \"/api/user-storage/\" + this.storagePath;\n    },\n    username: function username() {\n      return session.Session.username;\n    }\n  },\n  data: function data() {\n    return {\n      dirName: null\n    };\n  },\n  props: {\n    userStoragePath: {\n      required: true\n    },\n    storagePath: {\n      required: true\n    }\n  },\n  methods: {\n    uploadFinished: function uploadFinished() {\n      this.$refs[\"file-upload\"].reset();\n      this.$emit(\"upload-finished\");\n    },\n    addDirectory: function addDirectory() {\n      this.$emit(\"add-directory\", this.dirName);\n      this.dirName = null;\n    }\n  }\n};",{"version":3,"sources":["UserStorageCreateView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA,SAAA,UAAA,QAAA,2BAAA;AACA,SAAA,OAAA,QAAA,qBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,0BADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,IAAA,EAAA,UAAA,CAAA;AADA,GAFA;AAKA,EAAA,QAAA,EAAA;AACA,IAAA,cADA,4BACA;AACA;AACA,aAAA,uBAAA,KAAA,WAAA;AACA,KAJA;AAKA,IAAA,QALA,sBAKA;AACA,aAAA,OAAA,CAAA,OAAA,CAAA,QAAA;AACA;AAPA,GALA;AAcA,EAAA,IAdA,kBAcA;AACA,WAAA;AACA,MAAA,OAAA,EAAA;AADA,KAAA;AAGA,GAlBA;AAmBA,EAAA,KAAA,EAAA;AACA,IAAA,eAAA,EAAA;AACA,MAAA,QAAA,EAAA;AADA,KADA;AAIA,IAAA,WAAA,EAAA;AACA,MAAA,QAAA,EAAA;AADA;AAJA,GAnBA;AA2BA,EAAA,OAAA,EAAA;AACA,IAAA,cADA,4BACA;AACA,WAAA,KAAA,CAAA,aAAA,EAAA,KAAA;AACA,WAAA,KAAA,CAAA,iBAAA;AACA,KAJA;AAKA,IAAA,YALA,0BAKA;AACA,WAAA,KAAA,CAAA,eAAA,EAAA,KAAA,OAAA;AACA,WAAA,OAAA,GAAA,IAAA;AACA;AARA;AA3BA,CAAA","sourcesContent":["<template>\n  <div>\n    <div class=\"row\">\n      <div class=\"col\">\n        <h1 class=\"h4\">Storage</h1>\n        <p>\n          <small class=\"text-muted\"\n            ><i class=\"fa fa-folder-open\"></i> {{ username }}</small\n          >\n        </p>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col\">\n        <uppy\n          class=\"mb-1\"\n          ref=\"file-upload\"\n          :xhr-upload-endpoint=\"uploadEndpoint\"\n          :tus-upload-finish-endpoint=\"uploadEndpoint\"\n          @upload-finished=\"uploadFinished\"\n          multiple\n        />\n      </div>\n      <div class=\"col\">\n        <b-input-group>\n          <b-form-input\n            v-model=\"dirName\"\n            placeholder=\"New directory name\"\n            @keydown.native.enter=\"addDirectory\"\n          ></b-form-input>\n          <b-input-group-append>\n            <b-button @click=\"addDirectory\" :disabled=\"!this.dirName\"\n              >Add directory\n            </b-button>\n          </b-input-group-append>\n        </b-input-group>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { components } from \"django-airavata-common-ui\";\nimport { session } from \"django-airavata-api\";\n\nexport default {\n  name: \"user-storage-create-view\",\n  components: {\n    uppy: components.Uppy,\n  },\n  computed: {\n    uploadEndpoint() {\n      // This endpoint can handle XHR upload or a TUS uploadURL\n      return \"/api/user-storage/\" + this.storagePath;\n    },\n    username() {\n      return session.Session.username;\n    },\n  },\n  data() {\n    return {\n      dirName: null,\n    };\n  },\n  props: {\n    userStoragePath: {\n      required: true,\n    },\n    storagePath: {\n      required: true,\n    },\n  },\n  methods: {\n    uploadFinished() {\n      this.$refs[\"file-upload\"].reset();\n      this.$emit(\"upload-finished\");\n    },\n    addDirectory() {\n      this.$emit(\"add-directory\", this.dirName);\n      this.dirName = null;\n    },\n  },\n};\n</script>\n"],"sourceRoot":"static/django_airavata_workspace/js/components/storage"}]}