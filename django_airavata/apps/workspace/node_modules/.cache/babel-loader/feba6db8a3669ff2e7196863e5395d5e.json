{"remainingRequest":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/thread-loader/dist/cjs.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/babel-loader/lib/index.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/static/django_airavata_workspace/js/web-components/input-editors/RadioButtonInputEditor.vue?vue&type=script&lang=js&shadow","dependencies":[{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/static/django_airavata_workspace/js/web-components/input-editors/RadioButtonInputEditor.vue","mtime":1638641844346},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/thread-loader/dist/cjs.js","mtime":1638646228889},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/babel-loader/lib/index.js","mtime":1638646225600},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/vue-loader/lib/index.js","mtime":1638646228900}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport RadioButtonInputEditor from \"../../components/experiment/input-editors/RadioButtonInputEditor.vue\";\nimport WebComponentInputEditorMixin from \"./WebComponentInputEditorMixin.js\";\nimport InlineOptionsMixin from \"./InlineOptionsMixin.js\";\nexport default {\n  mixins: [WebComponentInputEditorMixin, InlineOptionsMixin],\n  props: _objectSpread({}, WebComponentInputEditorMixin.props, {\n    options: {\n      type: Array,\n      default: null\n    }\n  }),\n  components: {\n    RadioButtonInputEditor\n  }\n};",{"version":3,"sources":["RadioButtonInputEditor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAmBA,OAAA,sBAAA;AACA,OAAA,4BAAA;AACA,OAAA,kBAAA;AAEA,eAAA;AACA,EAAA,MAAA,EAAA,CAAA,4BAAA,EAAA,kBAAA,CADA;AAEA,EAAA,KAAA,oBAIA,4BAAA,CAAA,KAJA;AAKA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA;AAFA;AALA,IAFA;AAYA,EAAA,UAAA,EAAA;AACA,IAAA;AADA;AAZA,CAAA","sourcesContent":["<template>\n  <!-- Important that input editor is wrapped in div. Input editor stops\n  propagation on native input events, but we need for this component's input\n  events to propagate. So the input editor should not be the root component. -->\n  <div>\n    <radio-button-input-editor\n      v-if=\"experimentInput\"\n      :id=\"id\"\n      :value=\"data\"\n      :experiment-input=\"experimentInput\"\n      :read-only=\"readOnly\"\n      :options=\"allOptions\"\n      @input=\"valueChanged\"\n    />\n    <div ref=\"optionsSlot\" class=\"options-slot\"></div>\n  </div>\n</template>\n\n<script>\nimport RadioButtonInputEditor from \"../../components/experiment/input-editors/RadioButtonInputEditor.vue\";\nimport WebComponentInputEditorMixin from \"./WebComponentInputEditorMixin.js\";\nimport InlineOptionsMixin from \"./InlineOptionsMixin.js\";\n\nexport default {\n  mixins: [WebComponentInputEditorMixin, InlineOptionsMixin],\n  props: {\n    // Explicit copy props from mixin, workaround for bug, see\n    // https://github.com/vuejs/vue-web-component-wrapper/issues/30#issuecomment-427350734\n    // for more details\n    ...WebComponentInputEditorMixin.props,\n    options: {\n      type: Array,\n      default: null,\n    },\n  },\n  components: {\n    RadioButtonInputEditor,\n  },\n};\n</script>\n\n<style lang=\"scss\">\n@import \"../styles\";\n:host {\n  display: block;\n}\n:host .options-slot {\n  display: none;\n}\n</style>\n"],"sourceRoot":"static/django_airavata_workspace/js/web-components/input-editors"}]}