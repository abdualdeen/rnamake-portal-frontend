{"remainingRequest":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/thread-loader/dist/cjs.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/babel-loader/lib/index.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/GroupResourceProfile.js","dependencies":[{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/GroupResourceProfile.js","mtime":1638641844319},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/thread-loader/dist/cjs.js","mtime":1638646228889},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/babel-loader/lib/index.js","mtime":1638646225600},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1638646227499}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.find\";\nimport _classCallCheck from \"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/@babel/runtime-corejs2/helpers/esm/inherits\";\nimport BaseModel from \"./BaseModel\";\nimport BatchQueueResourcePolicy from \"./BatchQueueResourcePolicy\";\nimport ComputeResourcePolicy from \"./ComputeResourcePolicy\";\nimport GroupComputeResourcePreference from \"./GroupComputeResourcePreference\";\nvar FIELDS = [\"gatewayId\", \"groupResourceProfileId\", \"groupResourceProfileName\", {\n  name: \"computePreferences\",\n  type: GroupComputeResourcePreference,\n  list: true,\n  default: BaseModel.defaultNewInstance(Array)\n}, {\n  name: \"computeResourcePolicies\",\n  type: ComputeResourcePolicy,\n  list: true,\n  default: BaseModel.defaultNewInstance(Array)\n}, {\n  name: \"batchQueueResourcePolicies\",\n  type: BatchQueueResourcePolicy,\n  list: true,\n  default: BaseModel.defaultNewInstance(Array)\n}, {\n  name: \"creationTime\",\n  type: \"date\"\n}, {\n  name: \"updatedTime\",\n  type: \"date\"\n}, \"defaultCredentialStoreToken\", \"userHasWriteAccess\" // true if current user has write access\n];\n\nvar GroupResourceProfile =\n/*#__PURE__*/\nfunction (_BaseModel) {\n  _inherits(GroupResourceProfile, _BaseModel);\n\n  function GroupResourceProfile() {\n    var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, GroupResourceProfile);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(GroupResourceProfile).call(this, FIELDS, data));\n  }\n\n  _createClass(GroupResourceProfile, [{\n    key: \"getComputePreference\",\n    value: function getComputePreference(computeResourceId) {\n      return this.computePreferences.find(function (pref) {\n        return pref.computeResourceId === computeResourceId;\n      });\n    }\n  }, {\n    key: \"getComputeResourcePolicy\",\n    value: function getComputeResourcePolicy(computeResourceId) {\n      return this.computeResourcePolicies.find(function (pol) {\n        return pol.computeResourceId === computeResourceId;\n      });\n    }\n  }, {\n    key: \"getBatchQueueResourcePolicies\",\n    value: function getBatchQueueResourcePolicies(computeResourceId) {\n      return this.batchQueueResourcePolicies.filter(function (pol) {\n        return pol.computeResourceId === computeResourceId;\n      });\n    }\n  }, {\n    key: \"mergeComputeResourcePreference\",\n    value: function mergeComputeResourcePreference(computeResourcePreference, computeResourcePolicy, batchQueueResourcePolicies) {\n      var _this = this;\n\n      // merge/add computeResourcePreference and computeResourcePolicy\n      var existingComputeResourcePreference = this.computePreferences.find(function (pref) {\n        return pref.computeResourceId === computeResourcePreference.computeResourceId;\n      });\n\n      if (existingComputeResourcePreference) {\n        Object.assign(existingComputeResourcePreference, computeResourcePreference);\n      } else {\n        this.computePreferences.push(computeResourcePreference);\n      }\n\n      var existingComputeResourcePolicy = this.computeResourcePolicies.find(function (pol) {\n        return pol.computeResourceId === computeResourcePolicy.computeResourceId;\n      });\n\n      if (existingComputeResourcePolicy) {\n        Object.assign(existingComputeResourcePolicy, computeResourcePolicy);\n      } else {\n        this.computeResourcePolicies.push(computeResourcePolicy);\n      } // merge/add/remove batchQueueResourcePolicies\n\n\n      var existingBatchQueueResourcePolicies = this.batchQueueResourcePolicies.filter(function (pol) {\n        return pol.computeResourceId === computeResourcePreference.computeResourceId;\n      });\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        var _loop = function _loop() {\n          var batchQueueResourcePolicy = _step.value;\n          var existingBatchQueueResourcePolicy = existingBatchQueueResourcePolicies.find(function (pol) {\n            return pol.queuename === batchQueueResourcePolicy.queuename;\n          });\n\n          if (existingBatchQueueResourcePolicy) {\n            Object.assign(existingBatchQueueResourcePolicy, batchQueueResourcePolicy);\n            var existingBatchQueueResourcePolicyIndex = existingBatchQueueResourcePolicies.findIndex(function (pol) {\n              return pol.queuename === batchQueueResourcePolicy.queuename;\n            });\n\n            if (existingBatchQueueResourcePolicyIndex >= 0) {\n              existingBatchQueueResourcePolicies.splice(existingBatchQueueResourcePolicyIndex, 1);\n            }\n          } else {\n            _this.batchQueueResourcePolicies.push(batchQueueResourcePolicy);\n          }\n        };\n\n        for (var _iterator = batchQueueResourcePolicies[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          _loop();\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        var _loop2 = function _loop2() {\n          var existingBatchQueueResourcePolicy = _step2.value;\n\n          var existingBatchQueueResourcePolicyIndex = _this.batchQueueResourcePolicies.findIndex(function (pol) {\n            return pol.computeResourceId === existingBatchQueueResourcePolicy.computeResourceId && pol.queuename === existingBatchQueueResourcePolicy.queuename;\n          });\n\n          if (existingBatchQueueResourcePolicyIndex >= 0) {\n            _this.batchQueueResourcePolicies.splice(existingBatchQueueResourcePolicyIndex, 1);\n          }\n        };\n\n        for (var _iterator2 = existingBatchQueueResourcePolicies[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          _loop2();\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    }\n    /**\n     * Remove compute resource preference, compute resource policy and batch queue policies.\n     * @param {string} computeResourceId\n     * @returns {boolean} true if this GroupResourceProfile was changed\n     */\n\n  }, {\n    key: \"removeComputeResource\",\n    value: function removeComputeResource(computeResourceId) {\n      var removedChildren = false;\n      var existingComputeResourcePreferenceIndex = this.computePreferences.findIndex(function (pref) {\n        return pref.computeResourceId === computeResourceId;\n      });\n\n      if (existingComputeResourcePreferenceIndex >= 0) {\n        this.computePreferences.splice(existingComputeResourcePreferenceIndex, 1);\n        removedChildren = true;\n      }\n\n      var existingComputeResourcePolicyIndex = this.computeResourcePolicies.findIndex(function (pol) {\n        return pol.computeResourceId === computeResourceId;\n      });\n\n      if (existingComputeResourcePolicyIndex >= 0) {\n        this.computeResourcePolicies.splice(existingComputeResourcePolicyIndex, 1);\n        removedChildren = true;\n      }\n\n      var existingBatchQueueResourcePolicies = this.batchQueueResourcePolicies.filter(function (pol) {\n        return pol.computeResourceId === computeResourceId;\n      });\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = existingBatchQueueResourcePolicies[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var existingBatchQueueResourcePolicy = _step3.value;\n          var existingBatchQueueResourcePolicyIndex = this.batchQueueResourcePolicies.indexOf(existingBatchQueueResourcePolicy);\n          this.batchQueueResourcePolicies.splice(existingBatchQueueResourcePolicyIndex, 1);\n          removedChildren = true;\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      return removedChildren;\n    }\n  }]);\n\n  return GroupResourceProfile;\n}(BaseModel);\n\nexport { GroupResourceProfile as default };",{"version":3,"sources":["/home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/GroupResourceProfile.js"],"names":["BaseModel","BatchQueueResourcePolicy","ComputeResourcePolicy","GroupComputeResourcePreference","FIELDS","name","type","list","default","defaultNewInstance","Array","GroupResourceProfile","data","computeResourceId","computePreferences","find","pref","computeResourcePolicies","pol","batchQueueResourcePolicies","filter","computeResourcePreference","computeResourcePolicy","existingComputeResourcePreference","Object","assign","push","existingComputeResourcePolicy","existingBatchQueueResourcePolicies","batchQueueResourcePolicy","existingBatchQueueResourcePolicy","queuename","existingBatchQueueResourcePolicyIndex","findIndex","splice","removedChildren","existingComputeResourcePreferenceIndex","existingComputeResourcePolicyIndex","indexOf"],"mappings":"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","sourcesContent":["import BaseModel from \"./BaseModel\";\nimport BatchQueueResourcePolicy from \"./BatchQueueResourcePolicy\";\nimport ComputeResourcePolicy from \"./ComputeResourcePolicy\";\nimport GroupComputeResourcePreference from \"./GroupComputeResourcePreference\";\n\nconst FIELDS = [\n  \"gatewayId\",\n  \"groupResourceProfileId\",\n  \"groupResourceProfileName\",\n  {\n    name: \"computePreferences\",\n    type: GroupComputeResourcePreference,\n    list: true,\n    default: BaseModel.defaultNewInstance(Array),\n  },\n  {\n    name: \"computeResourcePolicies\",\n    type: ComputeResourcePolicy,\n    list: true,\n    default: BaseModel.defaultNewInstance(Array),\n  },\n  {\n    name: \"batchQueueResourcePolicies\",\n    type: BatchQueueResourcePolicy,\n    list: true,\n    default: BaseModel.defaultNewInstance(Array),\n  },\n  {\n    name: \"creationTime\",\n    type: \"date\",\n  },\n  {\n    name: \"updatedTime\",\n    type: \"date\",\n  },\n  \"defaultCredentialStoreToken\",\n  \"userHasWriteAccess\", // true if current user has write access\n];\n\nexport default class GroupResourceProfile extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n  }\n\n  getComputePreference(computeResourceId) {\n    return this.computePreferences.find(\n      (pref) => pref.computeResourceId === computeResourceId\n    );\n  }\n\n  getComputeResourcePolicy(computeResourceId) {\n    return this.computeResourcePolicies.find(\n      (pol) => pol.computeResourceId === computeResourceId\n    );\n  }\n\n  getBatchQueueResourcePolicies(computeResourceId) {\n    return this.batchQueueResourcePolicies.filter(\n      (pol) => pol.computeResourceId === computeResourceId\n    );\n  }\n\n  mergeComputeResourcePreference(\n    computeResourcePreference,\n    computeResourcePolicy,\n    batchQueueResourcePolicies\n  ) {\n    // merge/add computeResourcePreference and computeResourcePolicy\n    const existingComputeResourcePreference = this.computePreferences.find(\n      (pref) =>\n        pref.computeResourceId === computeResourcePreference.computeResourceId\n    );\n    if (existingComputeResourcePreference) {\n      Object.assign(\n        existingComputeResourcePreference,\n        computeResourcePreference\n      );\n    } else {\n      this.computePreferences.push(computeResourcePreference);\n    }\n    const existingComputeResourcePolicy = this.computeResourcePolicies.find(\n      (pol) => pol.computeResourceId === computeResourcePolicy.computeResourceId\n    );\n    if (existingComputeResourcePolicy) {\n      Object.assign(existingComputeResourcePolicy, computeResourcePolicy);\n    } else {\n      this.computeResourcePolicies.push(computeResourcePolicy);\n    }\n    // merge/add/remove batchQueueResourcePolicies\n    const existingBatchQueueResourcePolicies = this.batchQueueResourcePolicies.filter(\n      (pol) =>\n        pol.computeResourceId === computeResourcePreference.computeResourceId\n    );\n    for (const batchQueueResourcePolicy of batchQueueResourcePolicies) {\n      const existingBatchQueueResourcePolicy = existingBatchQueueResourcePolicies.find(\n        (pol) => pol.queuename === batchQueueResourcePolicy.queuename\n      );\n      if (existingBatchQueueResourcePolicy) {\n        Object.assign(\n          existingBatchQueueResourcePolicy,\n          batchQueueResourcePolicy\n        );\n        const existingBatchQueueResourcePolicyIndex = existingBatchQueueResourcePolicies.findIndex(\n          (pol) => pol.queuename === batchQueueResourcePolicy.queuename\n        );\n        if (existingBatchQueueResourcePolicyIndex >= 0) {\n          existingBatchQueueResourcePolicies.splice(\n            existingBatchQueueResourcePolicyIndex,\n            1\n          );\n        }\n      } else {\n        this.batchQueueResourcePolicies.push(batchQueueResourcePolicy);\n      }\n    }\n    for (const existingBatchQueueResourcePolicy of existingBatchQueueResourcePolicies) {\n      const existingBatchQueueResourcePolicyIndex = this.batchQueueResourcePolicies.findIndex(\n        (pol) =>\n          pol.computeResourceId ===\n            existingBatchQueueResourcePolicy.computeResourceId &&\n          pol.queuename === existingBatchQueueResourcePolicy.queuename\n      );\n      if (existingBatchQueueResourcePolicyIndex >= 0) {\n        this.batchQueueResourcePolicies.splice(\n          existingBatchQueueResourcePolicyIndex,\n          1\n        );\n      }\n    }\n  }\n\n  /**\n   * Remove compute resource preference, compute resource policy and batch queue policies.\n   * @param {string} computeResourceId\n   * @returns {boolean} true if this GroupResourceProfile was changed\n   */\n  removeComputeResource(computeResourceId) {\n    let removedChildren = false;\n    const existingComputeResourcePreferenceIndex = this.computePreferences.findIndex(\n      (pref) => pref.computeResourceId === computeResourceId\n    );\n    if (existingComputeResourcePreferenceIndex >= 0) {\n      this.computePreferences.splice(existingComputeResourcePreferenceIndex, 1);\n      removedChildren = true;\n    }\n    const existingComputeResourcePolicyIndex = this.computeResourcePolicies.findIndex(\n      (pol) => pol.computeResourceId === computeResourceId\n    );\n    if (existingComputeResourcePolicyIndex >= 0) {\n      this.computeResourcePolicies.splice(\n        existingComputeResourcePolicyIndex,\n        1\n      );\n      removedChildren = true;\n    }\n    const existingBatchQueueResourcePolicies = this.batchQueueResourcePolicies.filter(\n      (pol) => pol.computeResourceId === computeResourceId\n    );\n    for (const existingBatchQueueResourcePolicy of existingBatchQueueResourcePolicies) {\n      const existingBatchQueueResourcePolicyIndex = this.batchQueueResourcePolicies.indexOf(\n        existingBatchQueueResourcePolicy\n      );\n      this.batchQueueResourcePolicies.splice(\n        existingBatchQueueResourcePolicyIndex,\n        1\n      );\n      removedChildren = true;\n    }\n\n    return removedChildren;\n  }\n}\n"]}]}