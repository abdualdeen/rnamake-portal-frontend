{"remainingRequest":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/thread-loader/dist/cjs.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/babel-loader/lib/index.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/Task.js","dependencies":[{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/Task.js","mtime":1638641844323},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/thread-loader/dist/cjs.js","mtime":1638646228889},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/babel-loader/lib/index.js","mtime":1638646225600},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1638646227499}],"contextDependencies":[],"result":["import BaseModel from \"./BaseModel\";\nimport ErrorModel from \"./ErrorModel\";\nimport Job from \"./Job\";\nimport TaskTypes from \"./TaskTypes\";\nimport TaskStatus from \"./TaskStatus\";\nvar FIELDS = [\"taskId\", {\n  name: \"taskType\",\n  type: TaskTypes\n}, \"parentProcessId\", {\n  name: \"creationTime\",\n  type: Date\n}, {\n  name: \"lastUpdateTime\",\n  type: Date\n}, {\n  name: \"taskStatuses\",\n  type: TaskStatus,\n  list: true\n}, \"taskDetail\", \"subTaskModel\", {\n  name: \"taskErrors\",\n  type: ErrorModel,\n  list: true\n}, {\n  name: \"jobs\",\n  type: Job,\n  list: true\n}, \"maxRetry\", \"currentRetry\"];\nexport default class Task extends BaseModel {\n  constructor() {\n    var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super(FIELDS, data);\n  }\n\n  get latestStatus() {\n    if (this.taskStatuses && this.taskStatuses.length > 0) {\n      return this.taskStatuses[this.taskStatuses.length - 1];\n    } else {\n      return null;\n    }\n  }\n\n}",{"version":3,"sources":["/home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/Task.js"],"names":["BaseModel","ErrorModel","Job","TaskTypes","TaskStatus","FIELDS","name","type","Date","list","Task","constructor","data","latestStatus","taskStatuses","length"],"mappings":"AAAA,OAAOA,SAAP;AACA,OAAOC,UAAP;AACA,OAAOC,GAAP;AACA,OAAOC,SAAP;AACA,OAAOC,UAAP;AAEA,IAAMC,MAAM,GAAG,CACb,QADa,EAEb;AACEC,EAAAA,IAAI,EAAE,UADR;AAEEC,EAAAA,IAAI,EAAEJ;AAFR,CAFa,EAMb,iBANa,EAOb;AACEG,EAAAA,IAAI,EAAE,cADR;AAEEC,EAAAA,IAAI,EAAEC;AAFR,CAPa,EAWb;AACEF,EAAAA,IAAI,EAAE,gBADR;AAEEC,EAAAA,IAAI,EAAEC;AAFR,CAXa,EAeb;AACEF,EAAAA,IAAI,EAAE,cADR;AAEEC,EAAAA,IAAI,EAAEH,UAFR;AAGEK,EAAAA,IAAI,EAAE;AAHR,CAfa,EAoBb,YApBa,EAqBb,cArBa,EAsBb;AACEH,EAAAA,IAAI,EAAE,YADR;AAEEC,EAAAA,IAAI,EAAEN,UAFR;AAGEQ,EAAAA,IAAI,EAAE;AAHR,CAtBa,EA2Bb;AACEH,EAAAA,IAAI,EAAE,MADR;AAEEC,EAAAA,IAAI,EAAEL,GAFR;AAGEO,EAAAA,IAAI,EAAE;AAHR,CA3Ba,EAgCb,UAhCa,EAiCb,cAjCa,CAAf;AAoCA,eAAe,MAAMC,IAAN,SAAmBV,SAAnB,CAA6B;AAC1CW,EAAAA,WAAW,GAAY;AAAA,QAAXC,IAAW,uEAAJ,EAAI;AACrB,UAAMP,MAAN,EAAcO,IAAd;AACD;;AAED,MAAIC,YAAJ,GAAmB;AACjB,QAAI,KAAKC,YAAL,IAAqB,KAAKA,YAAL,CAAkBC,MAAlB,GAA2B,CAApD,EAAuD;AACrD,aAAO,KAAKD,YAAL,CAAkB,KAAKA,YAAL,CAAkBC,MAAlB,GAA2B,CAA7C,CAAP;AACD,KAFD,MAEO;AACL,aAAO,IAAP;AACD;AACF;;AAXyC","sourcesContent":["import BaseModel from \"./BaseModel\";\nimport ErrorModel from \"./ErrorModel\";\nimport Job from \"./Job\";\nimport TaskTypes from \"./TaskTypes\";\nimport TaskStatus from \"./TaskStatus\";\n\nconst FIELDS = [\n  \"taskId\",\n  {\n    name: \"taskType\",\n    type: TaskTypes,\n  },\n  \"parentProcessId\",\n  {\n    name: \"creationTime\",\n    type: Date,\n  },\n  {\n    name: \"lastUpdateTime\",\n    type: Date,\n  },\n  {\n    name: \"taskStatuses\",\n    type: TaskStatus,\n    list: true,\n  },\n  \"taskDetail\",\n  \"subTaskModel\",\n  {\n    name: \"taskErrors\",\n    type: ErrorModel,\n    list: true,\n  },\n  {\n    name: \"jobs\",\n    type: Job,\n    list: true,\n  },\n  \"maxRetry\",\n  \"currentRetry\",\n];\n\nexport default class Task extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n  }\n\n  get latestStatus() {\n    if (this.taskStatuses && this.taskStatuses.length > 0) {\n      return this.taskStatuses[this.taskStatuses.length - 1];\n    } else {\n      return null;\n    }\n  }\n}\n"]}]}