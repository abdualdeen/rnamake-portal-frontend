{"remainingRequest":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/thread-loader/dist/cjs.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/babel-loader/lib/index.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/ComputeResourceReservation.js","dependencies":[{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/ComputeResourceReservation.js","mtime":1638641844319},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/thread-loader/dist/cjs.js","mtime":1638646228889},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/babel-loader/lib/index.js","mtime":1638646225600},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1638646227499}],"contextDependencies":[],"result":["import BaseModel from \"./BaseModel\";\nimport uuidv4 from \"uuid/v4\";\n\nfunction currentTimeTopOfHour() {\n  var d = new Date();\n  d.setMinutes(0);\n  d.setSeconds(0);\n  d.setMilliseconds(0);\n  return d;\n}\n\nvar FIELDS = [\"reservationId\", \"reservationName\", {\n  name: \"queueNames\",\n  type: \"string\",\n  list: true\n}, {\n  name: \"startTime\",\n  type: Date,\n  default: () => currentTimeTopOfHour()\n}, {\n  name: \"endTime\",\n  type: Date,\n  default: () => currentTimeTopOfHour()\n}];\nexport default class ComputeResourceReservation extends BaseModel {\n  constructor() {\n    var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super(FIELDS, data);\n    this._key = data.key ? data.key : uuidv4();\n  }\n\n  get key() {\n    return this._key;\n  }\n\n  validate() {\n    var validationResults = {};\n\n    if (this.isEmpty(this.reservationName)) {\n      validationResults[\"reservationName\"] = \"Please provide the name of this reservation.\";\n    }\n\n    if (this.startTime > this.endTime) {\n      validationResults[\"endTime\"] = \"End time must be later than start time.\";\n    }\n\n    if (this.isEmpty(this.queueNames)) {\n      validationResults[\"queueNames\"] = \"Please select at least one queue.\";\n    }\n\n    return validationResults;\n  }\n\n  get isExpired() {\n    var now = new Date();\n    return now > this.endTime;\n  }\n\n  get isActive() {\n    var now = new Date();\n    return this.startTime < now && now < this.endTime;\n  }\n\n  get isUpcoming() {\n    var now = new Date();\n    return now < this.startTime;\n  }\n\n}",{"version":3,"sources":["/home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/ComputeResourceReservation.js"],"names":["BaseModel","uuidv4","currentTimeTopOfHour","d","Date","setMinutes","setSeconds","setMilliseconds","FIELDS","name","type","list","default","ComputeResourceReservation","constructor","data","_key","key","validate","validationResults","isEmpty","reservationName","startTime","endTime","queueNames","isExpired","now","isActive","isUpcoming"],"mappings":"AAAA,OAAOA,SAAP;AACA,OAAOC,MAAP,MAAmB,SAAnB;;AAEA,SAASC,oBAAT,GAAgC;AAC9B,MAAMC,CAAC,GAAG,IAAIC,IAAJ,EAAV;AACAD,EAAAA,CAAC,CAACE,UAAF,CAAa,CAAb;AACAF,EAAAA,CAAC,CAACG,UAAF,CAAa,CAAb;AACAH,EAAAA,CAAC,CAACI,eAAF,CAAkB,CAAlB;AACA,SAAOJ,CAAP;AACD;;AACD,IAAMK,MAAM,GAAG,CACb,eADa,EAEb,iBAFa,EAGb;AACEC,EAAAA,IAAI,EAAE,YADR;AAEEC,EAAAA,IAAI,EAAE,QAFR;AAGEC,EAAAA,IAAI,EAAE;AAHR,CAHa,EAQb;AACEF,EAAAA,IAAI,EAAE,WADR;AAEEC,EAAAA,IAAI,EAAEN,IAFR;AAGEQ,EAAAA,OAAO,EAAE,MAAMV,oBAAoB;AAHrC,CARa,EAab;AACEO,EAAAA,IAAI,EAAE,SADR;AAEEC,EAAAA,IAAI,EAAEN,IAFR;AAGEQ,EAAAA,OAAO,EAAE,MAAMV,oBAAoB;AAHrC,CAba,CAAf;AAoBA,eAAe,MAAMW,0BAAN,SAAyCb,SAAzC,CAAmD;AAChEc,EAAAA,WAAW,GAAY;AAAA,QAAXC,IAAW,uEAAJ,EAAI;AACrB,UAAMP,MAAN,EAAcO,IAAd;AACA,SAAKC,IAAL,GAAYD,IAAI,CAACE,GAAL,GAAWF,IAAI,CAACE,GAAhB,GAAsBhB,MAAM,EAAxC;AACD;;AACD,MAAIgB,GAAJ,GAAU;AACR,WAAO,KAAKD,IAAZ;AACD;;AACDE,EAAAA,QAAQ,GAAG;AACT,QAAIC,iBAAiB,GAAG,EAAxB;;AACA,QAAI,KAAKC,OAAL,CAAa,KAAKC,eAAlB,CAAJ,EAAwC;AACtCF,MAAAA,iBAAiB,CAAC,iBAAD,CAAjB,GACE,8CADF;AAED;;AACD,QAAI,KAAKG,SAAL,GAAiB,KAAKC,OAA1B,EAAmC;AACjCJ,MAAAA,iBAAiB,CAAC,SAAD,CAAjB,GAA+B,yCAA/B;AACD;;AACD,QAAI,KAAKC,OAAL,CAAa,KAAKI,UAAlB,CAAJ,EAAmC;AACjCL,MAAAA,iBAAiB,CAAC,YAAD,CAAjB,GAAkC,mCAAlC;AACD;;AACD,WAAOA,iBAAP;AACD;;AACD,MAAIM,SAAJ,GAAgB;AACd,QAAMC,GAAG,GAAG,IAAItB,IAAJ,EAAZ;AACA,WAAOsB,GAAG,GAAG,KAAKH,OAAlB;AACD;;AACD,MAAII,QAAJ,GAAe;AACb,QAAMD,GAAG,GAAG,IAAItB,IAAJ,EAAZ;AACA,WAAO,KAAKkB,SAAL,GAAiBI,GAAjB,IAAwBA,GAAG,GAAG,KAAKH,OAA1C;AACD;;AACD,MAAIK,UAAJ,GAAiB;AACf,QAAMF,GAAG,GAAG,IAAItB,IAAJ,EAAZ;AACA,WAAOsB,GAAG,GAAG,KAAKJ,SAAlB;AACD;;AAjC+D","sourcesContent":["import BaseModel from \"./BaseModel\";\nimport uuidv4 from \"uuid/v4\";\n\nfunction currentTimeTopOfHour() {\n  const d = new Date();\n  d.setMinutes(0);\n  d.setSeconds(0);\n  d.setMilliseconds(0);\n  return d;\n}\nconst FIELDS = [\n  \"reservationId\",\n  \"reservationName\",\n  {\n    name: \"queueNames\",\n    type: \"string\",\n    list: true,\n  },\n  {\n    name: \"startTime\",\n    type: Date,\n    default: () => currentTimeTopOfHour(),\n  },\n  {\n    name: \"endTime\",\n    type: Date,\n    default: () => currentTimeTopOfHour(),\n  },\n];\n\nexport default class ComputeResourceReservation extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n    this._key = data.key ? data.key : uuidv4();\n  }\n  get key() {\n    return this._key;\n  }\n  validate() {\n    let validationResults = {};\n    if (this.isEmpty(this.reservationName)) {\n      validationResults[\"reservationName\"] =\n        \"Please provide the name of this reservation.\";\n    }\n    if (this.startTime > this.endTime) {\n      validationResults[\"endTime\"] = \"End time must be later than start time.\";\n    }\n    if (this.isEmpty(this.queueNames)) {\n      validationResults[\"queueNames\"] = \"Please select at least one queue.\";\n    }\n    return validationResults;\n  }\n  get isExpired() {\n    const now = new Date();\n    return now > this.endTime;\n  }\n  get isActive() {\n    const now = new Date();\n    return this.startTime < now && now < this.endTime;\n  }\n  get isUpcoming() {\n    const now = new Date();\n    return now < this.startTime;\n  }\n}\n"]}]}