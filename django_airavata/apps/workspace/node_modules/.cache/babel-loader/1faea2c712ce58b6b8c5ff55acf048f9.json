{"remainingRequest":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/thread-loader/dist/cjs.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/babel-loader/lib/index.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/DataProduct.js","dependencies":[{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/DataProduct.js","mtime":1638641844319},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/thread-loader/dist/cjs.js","mtime":1638646228889},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/babel-loader/lib/index.js","mtime":1638646225600},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1638646227499}],"contextDependencies":[],"result":["import _classCallCheck from \"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/@babel/runtime-corejs2/helpers/esm/inherits\";\nimport BaseModel from \"./BaseModel\";\nimport DataReplicaLocation from \"./DataReplicaLocation\";\nimport URL from \"url-parse\";\nvar FIELDS = [\"productUri\", \"gatewayId\", \"parentProductUri\", \"productName\", \"productDescription\", \"ownerName\", \"dataProductType\", \"productSize\", {\n  name: \"creationTime\",\n  type: \"date\"\n}, {\n  name: \"lastModifiedTime\",\n  type: \"date\"\n}, \"productMetadata\", {\n  name: \"replicaLocations\",\n  type: DataReplicaLocation,\n  list: true\n}, \"downloadURL\", \"isInputFileUpload\", \"filesize\"];\nvar FILENAME_REGEX = /[^/]+$/;\nvar TEXT_MIME_TYPE_REGEX = /^text\\/.+/;\nvar IMAGE_MIME_TYPE_REGEX = /^image\\/.+/;\n\nvar DataProduct =\n/*#__PURE__*/\nfunction (_BaseModel) {\n  _inherits(DataProduct, _BaseModel);\n\n  function DataProduct() {\n    var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, DataProduct);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DataProduct).call(this, FIELDS, data));\n  }\n\n  _createClass(DataProduct, [{\n    key: \"filename\",\n    get: function get() {\n      if (this.replicaLocations && this.replicaLocations.length > 0) {\n        var firstReplicaLocation = this.replicaLocations[0];\n        var fileURL = new URL(firstReplicaLocation.filePath);\n        var filenameMatch = FILENAME_REGEX.exec(fileURL.pathname);\n\n        if (filenameMatch) {\n          return filenameMatch[0];\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"isText\",\n    get: function get() {\n      return this.mimeType && TEXT_MIME_TYPE_REGEX.test(this.mimeType);\n    }\n  }, {\n    key: \"isImage\",\n    get: function get() {\n      return this.mimeType && IMAGE_MIME_TYPE_REGEX.test(this.mimeType);\n    }\n  }, {\n    key: \"mimeType\",\n    get: function get() {\n      return this.productMetadata && this.productMetadata[\"mime-type\"] ? this.productMetadata[\"mime-type\"] : null;\n    }\n  }]);\n\n  return DataProduct;\n}(BaseModel);\n\nexport { DataProduct as default };",{"version":3,"sources":["/home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/DataProduct.js"],"names":["BaseModel","DataReplicaLocation","URL","FIELDS","name","type","list","FILENAME_REGEX","TEXT_MIME_TYPE_REGEX","IMAGE_MIME_TYPE_REGEX","DataProduct","data","replicaLocations","length","firstReplicaLocation","fileURL","filePath","filenameMatch","exec","pathname","mimeType","test","productMetadata"],"mappings":";;;;;AAAA,OAAOA,SAAP;AACA,OAAOC,mBAAP;AAEA,OAAOC,GAAP,MAAgB,WAAhB;AAEA,IAAMC,MAAM,GAAG,CACb,YADa,EAEb,WAFa,EAGb,kBAHa,EAIb,aAJa,EAKb,oBALa,EAMb,WANa,EAOb,iBAPa,EAQb,aARa,EASb;AACEC,EAAAA,IAAI,EAAE,cADR;AAEEC,EAAAA,IAAI,EAAE;AAFR,CATa,EAab;AACED,EAAAA,IAAI,EAAE,kBADR;AAEEC,EAAAA,IAAI,EAAE;AAFR,CAba,EAiBb,iBAjBa,EAkBb;AACED,EAAAA,IAAI,EAAE,kBADR;AAEEC,EAAAA,IAAI,EAAEJ,mBAFR;AAGEK,EAAAA,IAAI,EAAE;AAHR,CAlBa,EAuBb,aAvBa,EAwBb,mBAxBa,EAyBb,UAzBa,CAAf;AA4BA,IAAMC,cAAc,GAAG,QAAvB;AACA,IAAMC,oBAAoB,GAAG,WAA7B;AACA,IAAMC,qBAAqB,GAAG,YAA9B;;IAEqBC,W;;;;;AACnB,yBAAuB;AAAA,QAAXC,IAAW,uEAAJ,EAAI;;AAAA;;AAAA,oFACfR,MADe,EACPQ,IADO;AAEtB;;;;wBAEc;AACb,UAAI,KAAKC,gBAAL,IAAyB,KAAKA,gBAAL,CAAsBC,MAAtB,GAA+B,CAA5D,EAA+D;AAC7D,YAAMC,oBAAoB,GAAG,KAAKF,gBAAL,CAAsB,CAAtB,CAA7B;AACA,YAAMG,OAAO,GAAG,IAAIb,GAAJ,CAAQY,oBAAoB,CAACE,QAA7B,CAAhB;AACA,YAAMC,aAAa,GAAGV,cAAc,CAACW,IAAf,CAAoBH,OAAO,CAACI,QAA5B,CAAtB;;AACA,YAAIF,aAAJ,EAAmB;AACjB,iBAAOA,aAAa,CAAC,CAAD,CAApB;AACD;AACF;;AACD,aAAO,IAAP;AACD;;;wBAEY;AACX,aAAO,KAAKG,QAAL,IAAiBZ,oBAAoB,CAACa,IAArB,CAA0B,KAAKD,QAA/B,CAAxB;AACD;;;wBAEa;AACZ,aAAO,KAAKA,QAAL,IAAiBX,qBAAqB,CAACY,IAAtB,CAA2B,KAAKD,QAAhC,CAAxB;AACD;;;wBAEc;AACb,aAAO,KAAKE,eAAL,IAAwB,KAAKA,eAAL,CAAqB,WAArB,CAAxB,GACH,KAAKA,eAAL,CAAqB,WAArB,CADG,GAEH,IAFJ;AAGD;;;;EA7BsCtB,S;;SAApBU,W","sourcesContent":["import BaseModel from \"./BaseModel\";\nimport DataReplicaLocation from \"./DataReplicaLocation\";\n\nimport URL from \"url-parse\";\n\nconst FIELDS = [\n  \"productUri\",\n  \"gatewayId\",\n  \"parentProductUri\",\n  \"productName\",\n  \"productDescription\",\n  \"ownerName\",\n  \"dataProductType\",\n  \"productSize\",\n  {\n    name: \"creationTime\",\n    type: \"date\",\n  },\n  {\n    name: \"lastModifiedTime\",\n    type: \"date\",\n  },\n  \"productMetadata\",\n  {\n    name: \"replicaLocations\",\n    type: DataReplicaLocation,\n    list: true,\n  },\n  \"downloadURL\",\n  \"isInputFileUpload\",\n  \"filesize\",\n];\n\nconst FILENAME_REGEX = /[^/]+$/;\nconst TEXT_MIME_TYPE_REGEX = /^text\\/.+/;\nconst IMAGE_MIME_TYPE_REGEX = /^image\\/.+/;\n\nexport default class DataProduct extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n  }\n\n  get filename() {\n    if (this.replicaLocations && this.replicaLocations.length > 0) {\n      const firstReplicaLocation = this.replicaLocations[0];\n      const fileURL = new URL(firstReplicaLocation.filePath);\n      const filenameMatch = FILENAME_REGEX.exec(fileURL.pathname);\n      if (filenameMatch) {\n        return filenameMatch[0];\n      }\n    }\n    return null;\n  }\n\n  get isText() {\n    return this.mimeType && TEXT_MIME_TYPE_REGEX.test(this.mimeType);\n  }\n\n  get isImage() {\n    return this.mimeType && IMAGE_MIME_TYPE_REGEX.test(this.mimeType);\n  }\n\n  get mimeType() {\n    return this.productMetadata && this.productMetadata[\"mime-type\"]\n      ? this.productMetadata[\"mime-type\"]\n      : null;\n  }\n}\n"]}]}