{"remainingRequest":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/thread-loader/dist/cjs.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/babel-loader/lib/index.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/static/django_airavata_workspace/js/components/experiment/output-displays/OutputDisplayContainer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/static/django_airavata_workspace/js/components/experiment/output-displays/OutputDisplayContainer.vue","mtime":1638641844339},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/thread-loader/dist/cjs.js","mtime":1638646228889},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/babel-loader/lib/index.js","mtime":1638646225600},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/vue-loader/lib/index.js","mtime":1638646228900}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { models } from \"django-airavata-api\";\nimport { components } from \"django-airavata-common-ui\";\nimport DefaultOutputDisplay from \"./DefaultOutputDisplay\";\nimport HtmlOutputDisplay from \"./HtmlOutputDisplay\";\nimport ImageOutputDisplay from \"./ImageOutputDisplay\";\nimport LinkOutputDisplay from \"./LinkOutputDisplay\";\nimport NotebookOutputDisplay from \"./NotebookOutputDisplay\";\nimport InteractiveParametersPanel from \"./interactive-parameters/InteractiveParametersPanel\";\nimport OutputViewDataLoader from \"./OutputViewDataLoader\";\nexport default {\n  name: \"output-viewer-container\",\n  props: {\n    experimentOutput: {\n      type: models.OutputDataObjectType,\n      required: true\n    },\n    outputViews: {\n      type: Array,\n      required: true\n    },\n    dataProducts: {\n      type: Array,\n      required: false,\n      default: null\n    },\n    experimentId: {\n      type: String,\n      required: true\n    }\n  },\n  components: {\n    \"data-product-viewer\": components.DataProductViewer,\n    DefaultOutputDisplay: DefaultOutputDisplay,\n    HtmlOutputDisplay: HtmlOutputDisplay,\n    ImageOutputDisplay: ImageOutputDisplay,\n    LinkOutputDisplay: LinkOutputDisplay,\n    NotebookOutputDisplay: NotebookOutputDisplay,\n    InteractiveParametersPanel: InteractiveParametersPanel\n  },\n  created: function created() {\n    if (this.providerId !== \"default\") {\n      this.loader = this.createLoader();\n      this.loader.load();\n    }\n  },\n  data: function data() {\n    return {\n      currentView: this.outputViews[0],\n      loader: null\n    };\n  },\n  computed: {\n    viewData: function viewData() {\n      return this.loader && this.loader.data ? this.loader.data : this.outputViewData;\n    },\n    outputViewData: function outputViewData() {\n      return this.currentView.data ? this.currentView.data : {};\n    },\n    displayTypeData: function displayTypeData() {\n      return {\n        default: {\n          component: \"default-output-display\",\n          url: null\n        },\n        link: {\n          component: \"link-output-display\",\n          url: \"/api/link-output/\"\n        },\n        notebook: {\n          component: \"notebook-output-display\",\n          url: \"/api/notebook-output/\"\n        },\n        html: {\n          component: \"html-output-display\",\n          url: \"/api/html-output/\"\n        },\n        image: {\n          component: \"image-output-display\",\n          url: \"/api/image-output/\"\n        }\n      };\n    },\n    displayType: function displayType() {\n      return this.currentView[\"display-type\"];\n    },\n    outputDisplayComponentName: function outputDisplayComponentName() {\n      if (this.displayType in this.displayTypeData) {\n        return this.displayTypeData[this.displayType].component;\n      } else {\n        return null;\n      }\n    },\n    outputDataURL: function outputDataURL() {\n      if (this.displayType in this.displayTypeData) {\n        return this.displayTypeData[this.displayType].url;\n      } else {\n        return null;\n      }\n    },\n    showMenu: function showMenu() {\n      return this.outputViews.length > 1;\n    },\n    providerId: function providerId() {\n      return this.currentView[\"provider-id\"];\n    },\n    hasInteractiveParameters: function hasInteractiveParameters() {\n      return this.viewData && this.viewData.interactive;\n    }\n  },\n  methods: {\n    selectView: function selectView(outputView) {\n      this.currentView = outputView;\n\n      if (this.outputDataURL === null) {\n        this.loader = null;\n      } else {\n        this.loader = this.createLoader();\n        this.loader.load();\n      }\n    },\n    parametersUpdated: function parametersUpdated(newParams) {\n      if (this.hasInteractiveParameters && !this.$refs.interactiveParametersPanel.valid) {\n        // Don't update if we have invalid interactive parameters\n        return;\n      }\n\n      this.loader.load(newParams);\n    },\n    createLoader: function createLoader() {\n      return new OutputViewDataLoader({\n        url: this.outputDataURL,\n        experimentId: this.experimentId,\n        experimentOutputName: this.experimentOutput.name,\n        providerId: this.providerId\n      });\n    }\n  }\n};",{"version":3,"sources":["OutputDisplayContainer.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <b-card>\n    <div slot=\"header\" class=\"d-flex align-items-baseline\">\n      <h6>{{ experimentOutput.name }}</h6>\n      <b-dropdown v-if=\"showMenu\" :text=\"currentView['name']\" class=\"ml-auto\">\n        <b-dropdown-item\n          v-for=\"view in outputViews\"\n          :key=\"view['provider-id']\"\n          :active=\"view['provider-id'] === currentView['provider-id']\"\n          @click=\"selectView(view)\"\n          >{{ view[\"name\"] }}</b-dropdown-item\n        >\n      </b-dropdown>\n    </div>\n    <component\n      :is=\"outputDisplayComponentName\"\n      :view-data=\"viewData\"\n      :data-products=\"dataProducts\"\n      :experiment-output=\"experimentOutput\"\n    />\n    <interactive-parameters-panel\n      ref=\"interactiveParametersPanel\"\n      v-if=\"viewData && viewData.interactive\"\n      :parameters=\"viewData.interactive\"\n      @input=\"parametersUpdated\"\n    />\n  </b-card>\n</template>\n\n<script>\nimport { models } from \"django-airavata-api\";\nimport { components } from \"django-airavata-common-ui\";\nimport DefaultOutputDisplay from \"./DefaultOutputDisplay\";\nimport HtmlOutputDisplay from \"./HtmlOutputDisplay\";\nimport ImageOutputDisplay from \"./ImageOutputDisplay\";\nimport LinkOutputDisplay from \"./LinkOutputDisplay\";\nimport NotebookOutputDisplay from \"./NotebookOutputDisplay\";\nimport InteractiveParametersPanel from \"./interactive-parameters/InteractiveParametersPanel\";\nimport OutputViewDataLoader from \"./OutputViewDataLoader\";\n\nexport default {\n  name: \"output-viewer-container\",\n  props: {\n    experimentOutput: {\n      type: models.OutputDataObjectType,\n      required: true,\n    },\n    outputViews: {\n      type: Array,\n      required: true,\n    },\n    dataProducts: {\n      type: Array,\n      required: false,\n      default: null,\n    },\n    experimentId: {\n      type: String,\n      required: true,\n    },\n  },\n  components: {\n    \"data-product-viewer\": components.DataProductViewer,\n    DefaultOutputDisplay,\n    HtmlOutputDisplay,\n    ImageOutputDisplay,\n    LinkOutputDisplay,\n    NotebookOutputDisplay,\n    InteractiveParametersPanel,\n  },\n  created() {\n    if (this.providerId !== \"default\") {\n      this.loader = this.createLoader();\n      this.loader.load();\n    }\n  },\n  data() {\n    return {\n      currentView: this.outputViews[0],\n      loader: null,\n    };\n  },\n  computed: {\n    viewData() {\n      return this.loader && this.loader.data\n        ? this.loader.data\n        : this.outputViewData;\n    },\n    outputViewData() {\n      return this.currentView.data ? this.currentView.data : {};\n    },\n    displayTypeData() {\n      return {\n        default: {\n          component: \"default-output-display\",\n          url: null,\n        },\n        link: {\n          component: \"link-output-display\",\n          url: \"/api/link-output/\",\n        },\n        notebook: {\n          component: \"notebook-output-display\",\n          url: \"/api/notebook-output/\",\n        },\n        html: {\n          component: \"html-output-display\",\n          url: \"/api/html-output/\",\n        },\n        image: {\n          component: \"image-output-display\",\n          url: \"/api/image-output/\",\n        },\n      };\n    },\n    displayType() {\n      return this.currentView[\"display-type\"];\n    },\n    outputDisplayComponentName() {\n      if (this.displayType in this.displayTypeData) {\n        return this.displayTypeData[this.displayType].component;\n      } else {\n        return null;\n      }\n    },\n    outputDataURL() {\n      if (this.displayType in this.displayTypeData) {\n        return this.displayTypeData[this.displayType].url;\n      } else {\n        return null;\n      }\n    },\n    showMenu() {\n      return this.outputViews.length > 1;\n    },\n    providerId() {\n      return this.currentView[\"provider-id\"];\n    },\n    hasInteractiveParameters() {\n      return this.viewData && this.viewData.interactive;\n    },\n  },\n  methods: {\n    selectView(outputView) {\n      this.currentView = outputView;\n      if (this.outputDataURL === null) {\n        this.loader = null;\n      } else {\n        this.loader = this.createLoader();\n        this.loader.load();\n      }\n    },\n    parametersUpdated(newParams) {\n      if (\n        this.hasInteractiveParameters &&\n        !this.$refs.interactiveParametersPanel.valid\n      ) {\n        // Don't update if we have invalid interactive parameters\n        return;\n      }\n      this.loader.load(newParams);\n    },\n    createLoader() {\n      return new OutputViewDataLoader({\n        url: this.outputDataURL,\n        experimentId: this.experimentId,\n        experimentOutputName: this.experimentOutput.name,\n        providerId: this.providerId,\n      });\n    },\n  },\n};\n</script>\n"],"sourceRoot":"static/django_airavata_workspace/js/components/experiment/output-displays"}]}