{"remainingRequest":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/thread-loader/dist/cjs.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/babel-loader/lib/index.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/Experiment.js","dependencies":[{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/Experiment.js","mtime":1638641844319},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/thread-loader/dist/cjs.js","mtime":1638646228889},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/babel-loader/lib/index.js","mtime":1638646225600},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1638646227499}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _classCallCheck from \"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/@babel/runtime-corejs2/helpers/esm/inherits\";\nimport BaseModel from \"./BaseModel\";\nimport ErrorModel from \"./ErrorModel\";\nimport ExperimentState from \"./ExperimentState\";\nimport ExperimentStatus from \"./ExperimentStatus\";\nimport InputDataObjectType from \"./InputDataObjectType\";\nimport OutputDataObjectType from \"./OutputDataObjectType\";\nimport ProcessModel from \"./ProcessModel\";\nimport UserConfigurationData from \"./UserConfigurationData\";\nvar FIELDS = [\"experimentId\", \"projectId\", \"gatewayId\", {\n  name: \"experimentType\",\n  type: \"number\",\n  default: 0\n}, \"userName\", \"experimentName\", {\n  name: \"creationTime\",\n  type: \"date\"\n}, \"description\", \"executionId\", {\n  name: \"enableEmailNotification\",\n  type: \"boolean\",\n  default: false\n}, {\n  name: \"emailAddresses\",\n  type: \"string\",\n  list: true\n}, {\n  name: \"userConfigurationData\",\n  type: UserConfigurationData,\n  default: BaseModel.defaultNewInstance(UserConfigurationData)\n}, {\n  name: \"experimentInputs\",\n  type: InputDataObjectType,\n  list: true,\n  default: BaseModel.defaultNewInstance(Array)\n}, {\n  name: \"experimentOutputs\",\n  type: OutputDataObjectType,\n  list: true\n}, {\n  name: \"experimentStatus\",\n  type: ExperimentStatus,\n  list: true\n}, {\n  name: \"errors\",\n  type: ErrorModel,\n  list: true\n}, {\n  name: \"processes\",\n  type: ProcessModel,\n  list: true\n}, \"workflow\", {\n  name: \"userHasWriteAccess\",\n  type: \"boolean\",\n  default: true\n}];\n\nvar Experiment =\n/*#__PURE__*/\nfunction (_BaseModel) {\n  _inherits(Experiment, _BaseModel);\n\n  function Experiment() {\n    var _this;\n\n    var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Experiment);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Experiment).call(this, FIELDS, data));\n\n    _this.evaluateInputDependencies();\n\n    return _this;\n  }\n\n  _createClass(Experiment, [{\n    key: \"validate\",\n    value: function validate() {\n      var validationResults = {};\n\n      if (this.isEmpty(this.experimentName)) {\n        validationResults[\"experimentName\"] = \"Please provide a name for this experiment.\";\n      }\n\n      if (this.isEmpty(this.projectId)) {\n        validationResults[\"projectId\"] = \"Please select a project.\";\n      }\n\n      return validationResults;\n    }\n  }, {\n    key: \"populateInputsOutputsFromApplicationInterface\",\n    value: function populateInputsOutputsFromApplicationInterface(applicationInterface) {\n      // Copy application inputs and outputs to the experiment\n      this.experimentInputs = applicationInterface.applicationInputs.map(function (input) {\n        return input.clone();\n      });\n      this.evaluateInputDependencies();\n      this.experimentOutputs = applicationInterface.applicationOutputs.slice();\n    }\n  }, {\n    key: \"evaluateInputDependencies\",\n    value: function evaluateInputDependencies() {\n      var inputValues = this._collectInputValues(this.experimentInputs);\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.experimentInputs[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var input = _step.value;\n          input.evaluateDependencies(inputValues);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"getExperimentInput\",\n    value: function getExperimentInput(inputName) {\n      return this.experimentInputs.find(function (inp) {\n        return inp.name === inputName;\n      });\n    }\n  }, {\n    key: \"getExperimentOutput\",\n    value: function getExperimentOutput(outputName) {\n      return this.experimentOutputs.find(function (out) {\n        return out.name === outputName;\n      });\n    }\n  }, {\n    key: \"_collectInputValues\",\n    value: function _collectInputValues() {\n      var result = {};\n      this.experimentInputs.forEach(function (inp) {\n        result[inp.name] = inp.value;\n      });\n      return result;\n    }\n  }, {\n    key: \"latestStatus\",\n    get: function get() {\n      if (this.experimentStatus && this.experimentStatus.length > 0) {\n        return this.experimentStatus[this.experimentStatus.length - 1];\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"isProgressing\",\n    get: function get() {\n      return this.latestStatus && this.latestStatus.isProgressing;\n    }\n  }, {\n    key: \"isFinished\",\n    get: function get() {\n      return this.latestStatus && this.latestStatus.isFinished;\n    }\n  }, {\n    key: \"hasLaunched\",\n    get: function get() {\n      var hasLaunchedStates = [ExperimentState.SCHEDULED, ExperimentState.LAUNCHED, ExperimentState.EXECUTING, ExperimentState.CANCELING, ExperimentState.CANCELED, ExperimentState.FAILED, ExperimentState.COMPLETED];\n      return this.latestStatus && hasLaunchedStates.indexOf(this.latestStatus.state) >= 0;\n    }\n  }, {\n    key: \"isEditable\",\n    get: function get() {\n      return (!this.latestStatus || this.latestStatus.state === ExperimentState.CREATED) && this.userHasWriteAccess;\n    }\n  }, {\n    key: \"isCancelable\",\n    get: function get() {\n      switch (this.latestStatus.state) {\n        case ExperimentState.VALIDATED:\n        case ExperimentState.SCHEDULED:\n        case ExperimentState.LAUNCHED:\n        case ExperimentState.EXECUTING:\n          return true;\n\n        default:\n          return false;\n      }\n    }\n  }, {\n    key: \"resourceHostId\",\n    get: function get() {\n      return this.userConfigurationData && this.userConfigurationData.computationalResourceScheduling ? this.userConfigurationData.computationalResourceScheduling.resourceHostId : null;\n    }\n  }]);\n\n  return Experiment;\n}(BaseModel);\n\nexport { Experiment as default };",{"version":3,"sources":["/home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/Experiment.js"],"names":["BaseModel","ErrorModel","ExperimentState","ExperimentStatus","InputDataObjectType","OutputDataObjectType","ProcessModel","UserConfigurationData","FIELDS","name","type","default","list","defaultNewInstance","Array","Experiment","data","evaluateInputDependencies","validationResults","isEmpty","experimentName","projectId","applicationInterface","experimentInputs","applicationInputs","map","input","clone","experimentOutputs","applicationOutputs","slice","inputValues","_collectInputValues","evaluateDependencies","inputName","find","inp","outputName","out","result","forEach","value","experimentStatus","length","latestStatus","isProgressing","isFinished","hasLaunchedStates","SCHEDULED","LAUNCHED","EXECUTING","CANCELING","CANCELED","FAILED","COMPLETED","indexOf","state","CREATED","userHasWriteAccess","VALIDATED","userConfigurationData","computationalResourceScheduling","resourceHostId"],"mappings":"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","sourcesContent":["import BaseModel from \"./BaseModel\";\nimport ErrorModel from \"./ErrorModel\";\nimport ExperimentState from \"./ExperimentState\";\nimport ExperimentStatus from \"./ExperimentStatus\";\nimport InputDataObjectType from \"./InputDataObjectType\";\nimport OutputDataObjectType from \"./OutputDataObjectType\";\nimport ProcessModel from \"./ProcessModel\";\nimport UserConfigurationData from \"./UserConfigurationData\";\n\nconst FIELDS = [\n  \"experimentId\",\n  \"projectId\",\n  \"gatewayId\",\n  {\n    name: \"experimentType\",\n    type: \"number\",\n    default: 0,\n  },\n  \"userName\",\n  \"experimentName\",\n  {\n    name: \"creationTime\",\n    type: \"date\",\n  },\n  \"description\",\n  \"executionId\",\n  {\n    name: \"enableEmailNotification\",\n    type: \"boolean\",\n    default: false,\n  },\n  {\n    name: \"emailAddresses\",\n    type: \"string\",\n    list: true,\n  },\n  {\n    name: \"userConfigurationData\",\n    type: UserConfigurationData,\n    default: BaseModel.defaultNewInstance(UserConfigurationData),\n  },\n  {\n    name: \"experimentInputs\",\n    type: InputDataObjectType,\n    list: true,\n    default: BaseModel.defaultNewInstance(Array),\n  },\n  {\n    name: \"experimentOutputs\",\n    type: OutputDataObjectType,\n    list: true,\n  },\n  {\n    name: \"experimentStatus\",\n    type: ExperimentStatus,\n    list: true,\n  },\n  {\n    name: \"errors\",\n    type: ErrorModel,\n    list: true,\n  },\n  {\n    name: \"processes\",\n    type: ProcessModel,\n    list: true,\n  },\n  \"workflow\",\n  {\n    name: \"userHasWriteAccess\",\n    type: \"boolean\",\n    default: true,\n  },\n];\n\nexport default class Experiment extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n    this.evaluateInputDependencies();\n  }\n\n  validate() {\n    let validationResults = {};\n    if (this.isEmpty(this.experimentName)) {\n      validationResults[\"experimentName\"] =\n        \"Please provide a name for this experiment.\";\n    }\n    if (this.isEmpty(this.projectId)) {\n      validationResults[\"projectId\"] = \"Please select a project.\";\n    }\n    return validationResults;\n  }\n\n  get latestStatus() {\n    if (this.experimentStatus && this.experimentStatus.length > 0) {\n      return this.experimentStatus[this.experimentStatus.length - 1];\n    } else {\n      return null;\n    }\n  }\n\n  get isProgressing() {\n    return this.latestStatus && this.latestStatus.isProgressing;\n  }\n\n  get isFinished() {\n    return this.latestStatus && this.latestStatus.isFinished;\n  }\n\n  get hasLaunched() {\n    const hasLaunchedStates = [\n      ExperimentState.SCHEDULED,\n      ExperimentState.LAUNCHED,\n      ExperimentState.EXECUTING,\n      ExperimentState.CANCELING,\n      ExperimentState.CANCELED,\n      ExperimentState.FAILED,\n      ExperimentState.COMPLETED,\n    ];\n    return (\n      this.latestStatus &&\n      hasLaunchedStates.indexOf(this.latestStatus.state) >= 0\n    );\n  }\n\n  get isEditable() {\n    return (\n      (!this.latestStatus ||\n        this.latestStatus.state === ExperimentState.CREATED) &&\n      this.userHasWriteAccess\n    );\n  }\n\n  get isCancelable() {\n    switch (this.latestStatus.state) {\n      case ExperimentState.VALIDATED:\n      case ExperimentState.SCHEDULED:\n      case ExperimentState.LAUNCHED:\n      case ExperimentState.EXECUTING:\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  get resourceHostId() {\n    return this.userConfigurationData &&\n      this.userConfigurationData.computationalResourceScheduling\n      ? this.userConfigurationData.computationalResourceScheduling\n          .resourceHostId\n      : null;\n  }\n\n  populateInputsOutputsFromApplicationInterface(applicationInterface) {\n    // Copy application inputs and outputs to the experiment\n    this.experimentInputs = applicationInterface.applicationInputs.map(\n      (input) => input.clone()\n    );\n    this.evaluateInputDependencies();\n    this.experimentOutputs = applicationInterface.applicationOutputs.slice();\n  }\n\n  evaluateInputDependencies() {\n    const inputValues = this._collectInputValues(this.experimentInputs);\n    for (const input of this.experimentInputs) {\n      input.evaluateDependencies(inputValues);\n    }\n  }\n\n  getExperimentInput(inputName) {\n    return this.experimentInputs.find(inp => inp.name === inputName);\n  }\n\n  getExperimentOutput(outputName) {\n    return this.experimentOutputs.find(out => out.name === outputName);\n  }\n\n  _collectInputValues() {\n    const result = {};\n    this.experimentInputs.forEach((inp) => {\n      result[inp.name] = inp.value;\n    });\n    return result;\n  }\n}\n"]}]}