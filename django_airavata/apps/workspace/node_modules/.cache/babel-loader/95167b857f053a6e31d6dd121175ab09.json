{"remainingRequest":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/thread-loader/dist/cjs.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/babel-loader/lib/index.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/static/django_airavata_workspace/js/containers/UserStorageContainer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/static/django_airavata_workspace/js/containers/UserStorageContainer.vue","mtime":1638641844343},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/thread-loader/dist/cjs.js","mtime":1638646228889},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/babel-loader/lib/index.js","mtime":1638646225600},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/vue-loader/lib/index.js","mtime":1638646228900}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.string.ends-with\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { services, utils } from \"django-airavata-api\";\nimport { notifications } from \"django-airavata-common-ui\";\nexport default {\n  name: \"user-storage-container\",\n  computed: {\n    dataProductUri: function dataProductUri() {\n      return this.$route.query.dataProductUri;\n    }\n  },\n  data: function data() {\n    return {\n      storagePath: null,\n      userStoragePath: null\n    };\n  },\n  methods: {\n    setStoragePath: function () {\n      var _setStoragePath = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _storagePath;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _storagePath = null;\n\n                if (this.dataProductUri) {\n                  /**\n                   * TODO fix: storage path is set to home when it's a file referenced by dataProductUri because\n                   * there's no way of retrieving the path and this is to be fixed once a workaround is found.\n                   */\n                  _storagePath = \"~/\";\n                } else {\n                  _storagePath = /~.*$/.exec(this.$route.fullPath);\n\n                  if (_storagePath && _storagePath.length > 0) {\n                    _storagePath = _storagePath[0];\n                  } else {\n                    _storagePath = this.$route.path;\n                  }\n                } // Validate to have the ending slash.\n\n\n                if (!_storagePath.endsWith(\"/\")) {\n                  _storagePath += \"/\";\n                }\n\n                this.storagePath = _storagePath;\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function setStoragePath() {\n        return _setStoragePath.apply(this, arguments);\n      }\n\n      return setStoragePath;\n    }(),\n    loadUserStoragePath: function loadUserStoragePath(path) {\n      var _this = this;\n\n      var _catch = function _catch(err) {\n        if (err.details.status === 404) {\n          _this.handleMissingPath(path);\n        } else {\n          utils.FetchUtils.reportError(err);\n        }\n      };\n\n      if (this.dataProductUri) {\n        /**\n         * TODO fix: userStoragePath is set manually when it's a file referenced by dataProductUri because\n         * there's no way of retrieving the path and this is to be fixed once a workaround is found.\n         */\n        return utils.FetchUtils.get(\"/api/data-products?product-uri=\".concat(this.dataProductUri)).then(function (dataProduct) {\n          _this.userStoragePath = {\n            isDir: false,\n            directories: [],\n            files: [{\n              createdTime: dataProduct.creationTime,\n              dataProductURI: _this.dataProductUri,\n              downloadURL: dataProduct.downloadURL,\n              mimeType: dataProduct.productMetadata[\"mime-type\"],\n              name: dataProduct.productName,\n              size: dataProduct.productSize\n            }],\n            parts: []\n          };\n        }).catch(_catch);\n      } else {\n        return services.UserStoragePathService.get({\n          path: path\n        }, {\n          ignoreErrors: true\n        }).then(function (result) {\n          _this.userStoragePath = result;\n        }).catch(_catch);\n      }\n    },\n    handleMissingPath: function handleMissingPath(path) {\n      this.$router.replace(\"/~/\"); // Display a transient error about the path not existing\n\n      notifications.NotificationList.add(new notifications.Notification({\n        type: \"WARNING\",\n        message: \"Path does not exist: \" + path,\n        duration: 2\n      }));\n    },\n    fileChanged: function fileChanged() {\n      var _this2 = this;\n\n      if (this.file && !this.fileTooLarge) {\n        var data = new FormData();\n        data.append(\"file\", this.file);\n        utils.FetchUtils.post(\"/api/user-storage/\" + this.storagePath, data).then(function () {\n          // this.file = null;\n          _this2.$refs[\"file-input\"].reset();\n\n          _this2.loadUserStoragePath(_this2.storagePath);\n        });\n      }\n    },\n    fileContentChanged: function fileContentChanged() {\n      this.loadUserStoragePath(this.storagePath);\n    },\n    uploadFinished: function uploadFinished() {\n      this.loadUserStoragePath(this.storagePath);\n    },\n    addDirectory: function addDirectory(dirName) {\n      var _this3 = this;\n\n      if (dirName) {\n        var newDirPath = this.storagePath;\n\n        if (!newDirPath.endsWith(\"/\")) {\n          newDirPath = newDirPath + \"/\";\n        }\n\n        newDirPath = newDirPath + dirName;\n        utils.FetchUtils.post(\"/api/user-storage/\" + newDirPath).then(function () {\n          _this3.loadUserStoragePath(_this3.storagePath);\n        });\n      }\n    },\n    deleteDir: function deleteDir(path) {\n      var _this4 = this;\n\n      utils.FetchUtils.delete(\"/api/user-storage/~/\" + path).then(function () {\n        _this4.loadUserStoragePath(_this4.storagePath);\n      });\n    },\n    deleteFile: function deleteFile(dataProductURI) {\n      var _this5 = this;\n\n      utils.FetchUtils.delete(\"/api/delete-file?data-product-uri=\" + encodeURIComponent(dataProductURI)).then(function () {\n        _this5.loadUserStoragePath(_this5.storagePath);\n      });\n    },\n    directorySelected: function directorySelected(path) {\n      this.$router.push(\"/~/\" + path);\n    }\n  },\n  created: function () {\n    var _created = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2() {\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(this.$route.path === \"/\")) {\n                _context2.next = 5;\n                break;\n              }\n\n              _context2.next = 3;\n              return this.$router.replace(\"/~/\");\n\n            case 3:\n              _context2.next = 9;\n              break;\n\n            case 5:\n              _context2.next = 7;\n              return this.setStoragePath();\n\n            case 7:\n              _context2.next = 9;\n              return this.loadUserStoragePath(this.storagePath);\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }(),\n  watch: {\n    $route: function () {\n      var _$route = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.setStoragePath();\n\n              case 2:\n                _context3.next = 4;\n                return this.loadUserStoragePath(this.storagePath);\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function $route() {\n        return _$route.apply(this, arguments);\n      }\n\n      return $route;\n    }()\n  }\n};",{"version":3,"sources":["UserStorageContainer.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <router-view\n      v-if=\"userStoragePath\"\n      :user-storage-path=\"userStoragePath\"\n      :storage-path=\"storagePath\"\n      @upload-finished=\"uploadFinished\"\n      @add-directory=\"addDirectory\"\n      @delete-dir=\"deleteDir\"\n      @delete-file=\"deleteFile\"\n      @directory-selected=\"directorySelected\"\n      @file-content-changed=\"fileContentChanged\"\n      :allow-preview=\"false\"\n    ></router-view>\n  </div>\n</template>\n\n<script>\nimport { services, utils } from \"django-airavata-api\";\nimport { notifications } from \"django-airavata-common-ui\";\n\nexport default {\n  name: \"user-storage-container\",\n  computed: {\n    dataProductUri() {\n      return this.$route.query.dataProductUri;\n    },\n  },\n  data() {\n    return {\n      storagePath: null,\n      userStoragePath: null,\n    };\n  },\n  methods: {\n    async setStoragePath() {\n      let _storagePath = null;\n      if (this.dataProductUri) {\n        /**\n         * TODO fix: storage path is set to home when it's a file referenced by dataProductUri because\n         * there's no way of retrieving the path and this is to be fixed once a workaround is found.\n         */\n        _storagePath = \"~/\";\n      } else {\n        _storagePath = /~.*$/.exec(this.$route.fullPath);\n        if (_storagePath && _storagePath.length > 0) {\n          _storagePath = _storagePath[0];\n        } else {\n          _storagePath = this.$route.path;\n        }\n      }\n\n      // Validate to have the ending slash.\n      if (!_storagePath.endsWith(\"/\")) {\n        _storagePath += \"/\";\n      }\n\n      this.storagePath = _storagePath;\n    },\n    loadUserStoragePath(path) {\n      const _catch = (err) => {\n        if (err.details.status === 404) {\n          this.handleMissingPath(path);\n        } else {\n          utils.FetchUtils.reportError(err);\n        }\n      };\n\n      if (this.dataProductUri) {\n        /**\n         * TODO fix: userStoragePath is set manually when it's a file referenced by dataProductUri because\n         * there's no way of retrieving the path and this is to be fixed once a workaround is found.\n         */\n        return utils.FetchUtils.get(\n          `/api/data-products?product-uri=${this.dataProductUri}`\n        )\n          .then((dataProduct) => {\n            this.userStoragePath = {\n              isDir: false,\n              directories: [],\n              files: [\n                {\n                  createdTime: dataProduct.creationTime,\n                  dataProductURI: this.dataProductUri,\n                  downloadURL: dataProduct.downloadURL,\n                  mimeType: dataProduct.productMetadata[\"mime-type\"],\n                  name: dataProduct.productName,\n                  size: dataProduct.productSize,\n                },\n              ],\n              parts: [],\n            };\n          })\n          .catch(_catch);\n      } else {\n        return services.UserStoragePathService.get(\n          { path },\n          { ignoreErrors: true }\n        )\n          .then((result) => {\n            this.userStoragePath = result;\n          })\n          .catch(_catch);\n      }\n    },\n    handleMissingPath(path) {\n      this.$router.replace(\"/~/\");\n      // Display a transient error about the path not existing\n      notifications.NotificationList.add(\n        new notifications.Notification({\n          type: \"WARNING\",\n          message: \"Path does not exist: \" + path,\n          duration: 2,\n        })\n      );\n    },\n    fileChanged() {\n      if (this.file && !this.fileTooLarge) {\n        let data = new FormData();\n        data.append(\"file\", this.file);\n        utils.FetchUtils.post(\n          \"/api/user-storage/\" + this.storagePath,\n          data\n        ).then(() => {\n          // this.file = null;\n          this.$refs[\"file-input\"].reset();\n          this.loadUserStoragePath(this.storagePath);\n        });\n      }\n    },\n    fileContentChanged() {\n      this.loadUserStoragePath(this.storagePath);\n    },\n    uploadFinished() {\n      this.loadUserStoragePath(this.storagePath);\n    },\n    addDirectory(dirName) {\n      if (dirName) {\n        let newDirPath = this.storagePath;\n        if (!newDirPath.endsWith(\"/\")) {\n          newDirPath = newDirPath + \"/\";\n        }\n        newDirPath = newDirPath + dirName;\n        utils.FetchUtils.post(\"/api/user-storage/\" + newDirPath).then(() => {\n          this.loadUserStoragePath(this.storagePath);\n        });\n      }\n    },\n    deleteDir(path) {\n      utils.FetchUtils.delete(\"/api/user-storage/~/\" + path).then(() => {\n        this.loadUserStoragePath(this.storagePath);\n      });\n    },\n    deleteFile(dataProductURI) {\n      utils.FetchUtils.delete(\n        \"/api/delete-file?data-product-uri=\" +\n          encodeURIComponent(dataProductURI)\n      ).then(() => {\n        this.loadUserStoragePath(this.storagePath);\n      });\n    },\n    directorySelected(path) {\n      this.$router.push(\"/~/\" + path);\n    },\n  },\n  async created() {\n    if (this.$route.path === \"/\") {\n      await this.$router.replace(\"/~/\");\n    } else {\n      await this.setStoragePath();\n      await this.loadUserStoragePath(this.storagePath);\n    }\n  },\n  watch: {\n    async $route() {\n      await this.setStoragePath();\n      await this.loadUserStoragePath(this.storagePath);\n    },\n  },\n};\n</script>\n"],"sourceRoot":"static/django_airavata_workspace/js/containers"}]}