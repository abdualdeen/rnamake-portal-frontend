{"remainingRequest":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/thread-loader/dist/cjs.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/babel-loader/lib/index.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/static/django_airavata_workspace/js/web-components/ComputeResourceSelector.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/static/django_airavata_workspace/js/web-components/ComputeResourceSelector.vue","mtime":1638641844343},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/babel-loader/lib/index.js","mtime":1638646225600},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/vue-loader/lib/index.js","mtime":1638646228900},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/thread-loader/dist/cjs.js","mtime":1638646228889},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/babel-loader/lib/index.js","mtime":1638646225600},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/vue-loader/lib/index.js","mtime":1638646228900}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport store from \"./store\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  name: \"compute-resource-selector\",\n  props: {\n    value: {\n      // compute resource host id\n      type: String,\n      default: null\n    },\n    includedComputeResources: {\n      type: Array,\n      default: null\n    }\n  },\n  store: store,\n\n  data() {\n    return {\n      resourceHostId: this.value\n    };\n  },\n\n  created() {\n    this.$store.dispatch(\"loadComputeResourceNames\");\n  },\n\n  computed: _objectSpread({\n    computeResourceOptions: function computeResourceOptions() {\n      var computeResourceIds = Object.keys(this.computeResourceNames).filter(crid => {\n        if (this.includedComputeResources) {\n          return this.includedComputeResources.includes(crid);\n        } else {\n          return true;\n        }\n      });\n      var computeResourceOptions = computeResourceIds.map(computeHostId => {\n        return {\n          value: computeHostId,\n          text: computeHostId in this.computeResourceNames ? this.computeResourceNames[computeHostId] : \"\"\n        };\n      });\n      computeResourceOptions.sort((a, b) => a.text.localeCompare(b.text));\n      return computeResourceOptions;\n    }\n  }, mapGetters([\"computeResourceNames\"])),\n  methods: {\n    computeResourceChanged() {\n      this.emitValueChanged();\n    },\n\n    emitValueChanged: function emitValueChanged() {\n      var inputEvent = new CustomEvent(\"input\", {\n        detail: [this.resourceHostId],\n        composed: true,\n        bubbles: true\n      });\n      this.$el.dispatchEvent(inputEvent);\n    }\n  },\n  watch: {\n    value() {\n      this.resourceHostId = this.value;\n    }\n\n  }\n};",{"version":3,"sources":["ComputeResourceSelector.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBA,OAAA,KAAA;AACA,SAAA,UAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,2BADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA;AACA,MAAA,IAAA,EAAA,MAFA;AAGA,MAAA,OAAA,EAAA;AAHA,KADA;AAMA,IAAA,wBAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA;AAFA;AANA,GAFA;AAaA,EAAA,KAAA,EAAA,KAbA;;AAcA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,cAAA,EAAA,KAAA;AADA,KAAA;AAGA,GAlBA;;AAmBA,EAAA,OAAA,GAAA;AACA,SAAA,MAAA,CAAA,QAAA,CAAA,0BAAA;AACA,GArBA;;AAsBA,EAAA,QAAA;AACA,IAAA,sBAAA,EAAA,kCAAA;AACA,UAAA,kBAAA,GAAA,MAAA,CAAA,IAAA,CAAA,KAAA,oBAAA,EAAA,MAAA,CACA,IAAA,IAAA;AACA,YAAA,KAAA,wBAAA,EAAA;AACA,iBAAA,KAAA,wBAAA,CAAA,QAAA,CAAA,IAAA,CAAA;AACA,SAFA,MAEA;AACA,iBAAA,IAAA;AACA;AACA,OAPA,CAAA;AASA,UAAA,sBAAA,GAAA,kBAAA,CAAA,GAAA,CAAA,aAAA,IAAA;AACA,eAAA;AACA,UAAA,KAAA,EAAA,aADA;AAEA,UAAA,IAAA,EACA,aAAA,IAAA,KAAA,oBAAA,GACA,KAAA,oBAAA,CAAA,aAAA,CADA,GAEA;AALA,SAAA;AAOA,OARA,CAAA;AASA,MAAA,sBAAA,CAAA,IAAA,CAAA,CAAA,CAAA,EAAA,CAAA,KAAA,CAAA,CAAA,IAAA,CAAA,aAAA,CAAA,CAAA,CAAA,IAAA,CAAA;AACA,aAAA,sBAAA;AACA;AAtBA,KAuBA,UAAA,CAAA,CAAA,sBAAA,CAAA,CAvBA,CAtBA;AA+CA,EAAA,OAAA,EAAA;AACA,IAAA,sBAAA,GAAA;AACA,WAAA,gBAAA;AACA,KAHA;;AAIA,IAAA,gBAAA,EAAA,4BAAA;AACA,UAAA,UAAA,GAAA,IAAA,WAAA,CAAA,OAAA,EAAA;AACA,QAAA,MAAA,EAAA,CAAA,KAAA,cAAA,CADA;AAEA,QAAA,QAAA,EAAA,IAFA;AAGA,QAAA,OAAA,EAAA;AAHA,OAAA,CAAA;AAKA,WAAA,GAAA,CAAA,aAAA,CAAA,UAAA;AACA;AAXA,GA/CA;AA4DA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,GAAA;AACA,WAAA,cAAA,GAAA,KAAA,KAAA;AACA;;AAHA;AA5DA,CAAA","sourcesContent":["<template>\n  <b-form-group label=\"Compute Resource\" label-for=\"compute-resource\">\n    <b-form-select\n      id=\"compute-resource\"\n      v-model=\"resourceHostId\"\n      :options=\"computeResourceOptions\"\n      required\n      @input=\"computeResourceChanged\"\n      :disabled=\"computeResourceOptions.length === 0\"\n    >\n      <template slot=\"first\">\n        <option :value=\"null\" disabled>Select a Compute Resource</option>\n      </template>\n    </b-form-select>\n  </b-form-group>\n</template>\n\n<script>\nimport store from \"./store\";\nimport { mapGetters } from \"vuex\";\n\nexport default {\n  name: \"compute-resource-selector\",\n  props: {\n    value: {\n      // compute resource host id\n      type: String,\n      default: null,\n    },\n    includedComputeResources: {\n      type: Array,\n      default: null,\n    },\n  },\n  store: store,\n  data() {\n    return {\n      resourceHostId: this.value,\n    };\n  },\n  created() {\n    this.$store.dispatch(\"loadComputeResourceNames\");\n  },\n  computed: {\n    computeResourceOptions: function () {\n      const computeResourceIds = Object.keys(this.computeResourceNames).filter(\n        (crid) => {\n          if (this.includedComputeResources) {\n            return this.includedComputeResources.includes(crid);\n          } else {\n            return true;\n          }\n        }\n      );\n      const computeResourceOptions = computeResourceIds.map((computeHostId) => {\n        return {\n          value: computeHostId,\n          text:\n            computeHostId in this.computeResourceNames\n              ? this.computeResourceNames[computeHostId]\n              : \"\",\n        };\n      });\n      computeResourceOptions.sort((a, b) => a.text.localeCompare(b.text));\n      return computeResourceOptions;\n    },\n    ...mapGetters([\"computeResourceNames\"]),\n  },\n  methods: {\n    computeResourceChanged() {\n      this.emitValueChanged();\n    },\n    emitValueChanged: function () {\n      const inputEvent = new CustomEvent(\"input\", {\n        detail: [this.resourceHostId],\n        composed: true,\n        bubbles: true,\n      });\n      this.$el.dispatchEvent(inputEvent);\n    },\n  },\n  watch: {\n    value() {\n      this.resourceHostId = this.value;\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n@import \"./styles\";\n:host {\n  display: block;\n}\n</style>\n"],"sourceRoot":"static/django_airavata_workspace/js/web-components"}]}