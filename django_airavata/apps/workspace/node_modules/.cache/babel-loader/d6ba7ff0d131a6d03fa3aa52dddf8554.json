{"remainingRequest":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/thread-loader/dist/cjs.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/babel-loader/lib/index.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/static/django_airavata_workspace/js/web-components/input-editors/WebComponentInputEditorMixin.js","dependencies":[{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/static/django_airavata_workspace/js/web-components/input-editors/WebComponentInputEditorMixin.js","mtime":1638641844346},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/thread-loader/dist/cjs.js","mtime":1638646228889},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/babel-loader/lib/index.js","mtime":1638646225600},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1638646227499}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport Vue from \"vue\";\nimport { BootstrapVue } from \"bootstrap-vue\";\nimport AsyncComputed from \"vue-async-computed\";\nimport { utils } from \"django-airavata-common-ui\";\nimport store from \"../store\";\nVue.use(BootstrapVue);\nVue.use(AsyncComputed);\nexport default {\n  props: {\n    value: String,\n    name: String\n  },\n  store: store,\n\n  mounted() {\n    this.$nextTick(() => {\n      for (var _i = 0, _Object$keys = Object.keys(this.$props); _i < _Object$keys.length; _i++) {\n        var key = _Object$keys[_i];\n        // workaround for issues around setting props before WC connected,\n        // see https://github.com/vuejs/vue-web-component-wrapper/pull/81\n        // copy properties set on host element to wrapper component\n        // (mostly this is done so that the options array can be set by client code)\n        this.$parent.props[key] = this.$el.getRootNode().host[key];\n      }\n    });\n  },\n\n  data() {\n    return {\n      data: this.value\n    };\n  },\n\n  computed: {\n    readOnly() {\n      return this.experimentInput.isReadOnly;\n    },\n\n    id() {\n      return utils.sanitizeHTMLId(this.experimentInput.name);\n    },\n\n    experimentInput() {\n      return this.$store.getters.getExperimentInputByName(this.name);\n    }\n\n  },\n  methods: {\n    valueChanged(value) {\n      if (value !== this.data) {\n        this.data = value;\n        var inputEvent = new CustomEvent(\"input\", {\n          detail: [this.data],\n          composed: true,\n          bubbles: true\n        });\n        this.$el.dispatchEvent(inputEvent);\n      }\n    }\n\n  },\n  watch: {\n    value(value) {\n      this.data = value;\n    }\n\n  }\n};",{"version":3,"sources":["/home/vanishing/git/airavata-django-portal/django_airavata/apps/workspace/static/django_airavata_workspace/js/web-components/input-editors/WebComponentInputEditorMixin.js"],"names":["Vue","BootstrapVue","AsyncComputed","utils","store","use","props","value","String","name","mounted","$nextTick","Object","keys","$props","key","$parent","$el","getRootNode","host","data","computed","readOnly","experimentInput","isReadOnly","id","sanitizeHTMLId","$store","getters","getExperimentInputByName","methods","valueChanged","inputEvent","CustomEvent","detail","composed","bubbles","dispatchEvent","watch"],"mappings":";AACA,OAAOA,GAAP,MAAgB,KAAhB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,SAASC,KAAT,QAAsB,2BAAtB;AACA,OAAOC,KAAP;AACAJ,GAAG,CAACK,GAAJ,CAAQJ,YAAR;AACAD,GAAG,CAACK,GAAJ,CAAQH,aAAR;AAEA,eAAe;AACbI,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAEC,MADF;AAELC,IAAAA,IAAI,EAAED;AAFD,GADM;AAKbJ,EAAAA,KAAK,EAAEA,KALM;;AAMbM,EAAAA,OAAO,GAAG;AACR,SAAKC,SAAL,CAAe,MAAM;AACnB,sCAAkBC,MAAM,CAACC,IAAP,CAAY,KAAKC,MAAjB,CAAlB,kCAA4C;AAAvC,YAAMC,GAAG,mBAAT;AACH;AACA;AAEA;AACA;AACA,aAAKC,OAAL,CAAaV,KAAb,CAAmBS,GAAnB,IAA0B,KAAKE,GAAL,CAASC,WAAT,GAAuBC,IAAvB,CAA4BJ,GAA5B,CAA1B;AACD;AACF,KATD;AAUD,GAjBY;;AAkBbK,EAAAA,IAAI,GAAG;AACL,WAAO;AACLA,MAAAA,IAAI,EAAE,KAAKb;AADN,KAAP;AAGD,GAtBY;;AAuBbc,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,GAAG;AACT,aAAO,KAAKC,eAAL,CAAqBC,UAA5B;AACD,KAHO;;AAIRC,IAAAA,EAAE,GAAG;AACH,aAAOtB,KAAK,CAACuB,cAAN,CAAqB,KAAKH,eAAL,CAAqBd,IAA1C,CAAP;AACD,KANO;;AAORc,IAAAA,eAAe,GAAG;AAChB,aAAO,KAAKI,MAAL,CAAYC,OAAZ,CAAoBC,wBAApB,CAA6C,KAAKpB,IAAlD,CAAP;AACD;;AATO,GAvBG;AAkCbqB,EAAAA,OAAO,EAAE;AACPC,IAAAA,YAAY,CAACxB,KAAD,EAAQ;AAClB,UAAIA,KAAK,KAAK,KAAKa,IAAnB,EAAyB;AACvB,aAAKA,IAAL,GAAYb,KAAZ;AACA,YAAMyB,UAAU,GAAG,IAAIC,WAAJ,CAAgB,OAAhB,EAAyB;AAC1CC,UAAAA,MAAM,EAAE,CAAC,KAAKd,IAAN,CADkC;AAE1Ce,UAAAA,QAAQ,EAAE,IAFgC;AAG1CC,UAAAA,OAAO,EAAE;AAHiC,SAAzB,CAAnB;AAKA,aAAKnB,GAAL,CAASoB,aAAT,CAAuBL,UAAvB;AACD;AACF;;AAXM,GAlCI;AA+CbM,EAAAA,KAAK,EAAE;AACL/B,IAAAA,KAAK,CAACA,KAAD,EAAQ;AACX,WAAKa,IAAL,GAAYb,KAAZ;AACD;;AAHI;AA/CM,CAAf","sourcesContent":["\nimport Vue from \"vue\";\nimport { BootstrapVue } from \"bootstrap-vue\";\nimport AsyncComputed from \"vue-async-computed\";\nimport { utils } from \"django-airavata-common-ui\";\nimport store from \"../store\";\nVue.use(BootstrapVue);\nVue.use(AsyncComputed);\n\nexport default {\n  props: {\n    value: String,\n    name: String,\n  },\n  store: store,\n  mounted() {\n    this.$nextTick(() => {\n      for (const key of Object.keys(this.$props)) {\n        // workaround for issues around setting props before WC connected,\n        // see https://github.com/vuejs/vue-web-component-wrapper/pull/81\n\n        // copy properties set on host element to wrapper component\n        // (mostly this is done so that the options array can be set by client code)\n        this.$parent.props[key] = this.$el.getRootNode().host[key];\n      }\n    })\n  },\n  data() {\n    return {\n      data: this.value,\n    };\n  },\n  computed: {\n    readOnly() {\n      return this.experimentInput.isReadOnly;\n    },\n    id() {\n      return utils.sanitizeHTMLId(this.experimentInput.name);\n    },\n    experimentInput() {\n      return this.$store.getters.getExperimentInputByName(this.name);\n    },\n  },\n  methods: {\n    valueChanged(value) {\n      if (value !== this.data) {\n        this.data = value;\n        const inputEvent = new CustomEvent(\"input\", {\n          detail: [this.data],\n          composed: true,\n          bubbles: true,\n        });\n        this.$el.dispatchEvent(inputEvent);\n      }\n    },\n  },\n  watch: {\n    value(value) {\n      this.data = value;\n    },\n  },\n};\n"]}]}