{"remainingRequest":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vanishing/git/airavata-django-portal/django_airavata/static/common/js/components/SidebarFeedItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/static/common/js/components/SidebarFeedItem.vue","mtime":1638641844579},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/babel-loader/lib/index.js","mtime":1638646321845},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/vue-loader/lib/index.js","mtime":1638646324785}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport moment from \"moment\";\n\nexport default {\n  name: \"sidebar-feed-item\",\n  props: {\n    /**\n     * feedItem properties are\n     * - type (String, Optional) the type of feed item (e.g. for Experiments this is the application name)\n     * - url (String, Optional) url to link to the full item details\n     * - title (String, Required) title of the feed item\n     * - timestamp (Date, Optional) timestamp of when feed item was created/updated\n     * - description (String, Optional) description of feed item. Displayed when no slot is provided.\n     */\n    feedItem: Object,\n  },\n  computed: {\n    timestamp() {\n      if (this.feedItem.timestamp) {\n        return moment(this.feedItem.timestamp).fromNow();\n      } else {\n        return null;\n      }\n    },\n  },\n};\n",{"version":3,"sources":["SidebarFeedItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SidebarFeedItem.vue","sourceRoot":"../../static/common/js/components","sourcesContent":["<template>\n  <li class=\"feed__list-item\">\n    <span v-if=\"feedItem.type\" class=\"feed__label text-secondary\">{{\n      feedItem.type\n    }}</span>\n    <h2 class=\"feed__title mb-2\">\n      <a v-if=\"feedItem.url\" :href=\"feedItem.url\">{{ feedItem.title }}</a>\n      <span v-else>{{ feedItem.title }}</span>\n    </h2>\n    <slot v-bind:feedItem=\"feedItem\">\n      <div v-if=\"feedItem.description\">{{ feedItem.description }}</div>\n    </slot>\n    <div v-if=\"timestamp\" class=\"feed__item-meta text-secondary mt-1\">\n      <span>Updated </span> <time>{{ timestamp }}</time>\n    </div>\n  </li>\n</template>\n\n<script>\nimport moment from \"moment\";\n\nexport default {\n  name: \"sidebar-feed-item\",\n  props: {\n    /**\n     * feedItem properties are\n     * - type (String, Optional) the type of feed item (e.g. for Experiments this is the application name)\n     * - url (String, Optional) url to link to the full item details\n     * - title (String, Required) title of the feed item\n     * - timestamp (Date, Optional) timestamp of when feed item was created/updated\n     * - description (String, Optional) description of feed item. Displayed when no slot is provided.\n     */\n    feedItem: Object,\n  },\n  computed: {\n    timestamp() {\n      if (this.feedItem.timestamp) {\n        return moment(this.feedItem.timestamp).fromNow();\n      } else {\n        return null;\n      }\n    },\n  },\n};\n</script>\n"]}]}