{"remainingRequest":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/thread-loader/dist/cjs.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/babel-loader/lib/index.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/static/django_airavata_groups/js/group_components/GroupEditor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/static/django_airavata_groups/js/group_components/GroupEditor.vue","mtime":1638641844336},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/thread-loader/dist/cjs.js","mtime":1638646228889},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/babel-loader/lib/index.js","mtime":1638646321845},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/vue-loader/lib/index.js","mtime":1638646324785}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { models, services } from \"django-airavata-api\";\nimport GroupMembersEditor from \"./GroupMembersEditor.vue\";\nexport default {\n  props: {\n    group: {\n      type: models.Group,\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      localGroup: this.group.clone(),\n      showDismissibleAlert: {\n        variant: \"success\",\n        message: \"no data\",\n        dismissable: false\n      },\n      userProfiles: []\n    };\n  },\n  components: {\n    GroupMembersEditor: GroupMembersEditor\n  },\n  methods: {\n    submitForm: function submitForm() {\n      var _this = this;\n\n      var saveOperation = this.localGroup.id ? services.GroupService.update({\n        lookup: this.localGroup.id,\n        data: this.localGroup\n      }) : services.GroupService.create({\n        data: this.localGroup\n      });\n      saveOperation.then(function (group) {\n        _this.$emit(\"saved\", group);\n      }).catch(function (error) {\n        _this.showDismissibleAlert.dismissable = true;\n        _this.showDismissibleAlert.message = \"Error: \" + error.data;\n        _this.showDismissibleAlert.variant = \"danger\";\n      });\n    },\n    addGroupMember: function addGroupMember(airavataInternalUserId) {\n      this.localGroup.members.push(airavataInternalUserId);\n    },\n    removeGroupMember: function removeGroupMember(airavataInternalUserId) {\n      var index = this.localGroup.members.indexOf(airavataInternalUserId);\n      this.localGroup.members.splice(index, 1);\n      this.removeAdminMember(airavataInternalUserId);\n    },\n    removeAdminMember: function removeAdminMember(airavataInternalUserId) {\n      var adminIndex = this.localGroup.admins.indexOf(airavataInternalUserId);\n\n      if (adminIndex >= 0) {\n        this.localGroup.admins.splice(adminIndex, 1);\n      }\n    },\n    changeRoleToMember: function changeRoleToMember(airavataInternalUserId) {\n      this.removeAdminMember(airavataInternalUserId);\n    },\n    changeRoleToAdmin: function changeRoleToAdmin(airavataInternalUserId) {\n      var adminIndex = this.localGroup.admins.indexOf(airavataInternalUserId);\n\n      if (adminIndex < 0) {\n        this.localGroup.admins.push(airavataInternalUserId);\n      }\n    }\n  }\n};",{"version":3,"sources":["GroupEditor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyDA,SAAA,MAAA,EAAA,QAAA,QAAA,qBAAA;AACA,OAAA,kBAAA;AAEA,eAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MAAA,CAAA,KADA;AAEA,MAAA,QAAA,EAAA;AAFA;AADA,GADA;AAOA,EAAA,IAPA,kBAOA;AACA,WAAA;AACA,MAAA,UAAA,EAAA,KAAA,KAAA,CAAA,KAAA,EADA;AAEA,MAAA,oBAAA,EAAA;AACA,QAAA,OAAA,EAAA,SADA;AAEA,QAAA,OAAA,EAAA,SAFA;AAGA,QAAA,WAAA,EAAA;AAHA,OAFA;AAOA,MAAA,YAAA,EAAA;AAPA,KAAA;AASA,GAjBA;AAkBA,EAAA,UAAA,EAAA;AACA,IAAA,kBAAA,EAAA;AADA,GAlBA;AAqBA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,wBACA;AAAA;;AACA,UAAA,aAAA,GAAA,KAAA,UAAA,CAAA,EAAA,GACA,QAAA,CAAA,YAAA,CAAA,MAAA,CAAA;AACA,QAAA,MAAA,EAAA,KAAA,UAAA,CAAA,EADA;AAEA,QAAA,IAAA,EAAA,KAAA;AAFA,OAAA,CADA,GAKA,QAAA,CAAA,YAAA,CAAA,MAAA,CAAA;AAAA,QAAA,IAAA,EAAA,KAAA;AAAA,OAAA,CALA;AAMA,MAAA,aAAA,CACA,IADA,CACA,UAAA,KAAA,EAAA;AACA,QAAA,KAAA,CAAA,KAAA,CAAA,OAAA,EAAA,KAAA;AACA,OAHA,EAIA,KAJA,CAIA,UAAA,KAAA,EAAA;AACA,QAAA,KAAA,CAAA,oBAAA,CAAA,WAAA,GAAA,IAAA;AACA,QAAA,KAAA,CAAA,oBAAA,CAAA,OAAA,GAAA,YAAA,KAAA,CAAA,IAAA;AACA,QAAA,KAAA,CAAA,oBAAA,CAAA,OAAA,GAAA,QAAA;AACA,OARA;AASA,KAjBA;AAkBA,IAAA,cAlBA,0BAkBA,sBAlBA,EAkBA;AACA,WAAA,UAAA,CAAA,OAAA,CAAA,IAAA,CAAA,sBAAA;AACA,KApBA;AAqBA,IAAA,iBArBA,6BAqBA,sBArBA,EAqBA;AACA,UAAA,KAAA,GAAA,KAAA,UAAA,CAAA,OAAA,CAAA,OAAA,CAAA,sBAAA,CAAA;AACA,WAAA,UAAA,CAAA,OAAA,CAAA,MAAA,CAAA,KAAA,EAAA,CAAA;AACA,WAAA,iBAAA,CAAA,sBAAA;AACA,KAzBA;AA0BA,IAAA,iBA1BA,6BA0BA,sBA1BA,EA0BA;AACA,UAAA,UAAA,GAAA,KAAA,UAAA,CAAA,MAAA,CAAA,OAAA,CAAA,sBAAA,CAAA;;AACA,UAAA,UAAA,IAAA,CAAA,EAAA;AACA,aAAA,UAAA,CAAA,MAAA,CAAA,MAAA,CAAA,UAAA,EAAA,CAAA;AACA;AACA,KA/BA;AAgCA,IAAA,kBAhCA,8BAgCA,sBAhCA,EAgCA;AACA,WAAA,iBAAA,CAAA,sBAAA;AACA,KAlCA;AAmCA,IAAA,iBAnCA,6BAmCA,sBAnCA,EAmCA;AACA,UAAA,UAAA,GAAA,KAAA,UAAA,CAAA,MAAA,CAAA,OAAA,CAAA,sBAAA,CAAA;;AACA,UAAA,UAAA,GAAA,CAAA,EAAA;AACA,aAAA,UAAA,CAAA,MAAA,CAAA,IAAA,CAAA,sBAAA;AACA;AACA;AAxCA;AArBA,CAAA","sourcesContent":["<template>\n  <div>\n    <b-alert\n      :variant=\"showDismissibleAlert.variant\"\n      dismissible\n      :show=\"showDismissibleAlert.dismissable\"\n      @dismissed=\"showDismissibleAlert.dismissable = false\"\n    >\n      {{ showDismissibleAlert.message }}\n    </b-alert>\n\n    <b-form >\n      <b-form-group\n        id=\"group1\"\n        label=\"Group Name:\"\n        label-for=\"group_name\"\n        description=\"Name should only contain Alpha Characters\"\n      >\n        <b-form-input\n          id=\"group_name\"\n          type=\"text\"\n          v-model=\"localGroup.name\"\n          required\n          placeholder=\"Enter group name\"\n        >\n        </b-form-input>\n      </b-form-group>\n\n      <b-form-group id=\"group2\" label=\"Description:\" label-for=\"description\">\n        <b-form-textarea\n          id=\"description\"\n          type=\"text\"\n          :rows=\"6\"\n          v-model=\"localGroup.description\"\n          required\n          placeholder=\"Enter description of the group\"\n        >\n        </b-form-textarea>\n      </b-form-group>\n\n      <b-card title=\"Manage Group Members\" title-tag=\"h5\">\n        <group-members-editor\n          :group=\"localGroup\"\n          @add-member=\"addGroupMember\"\n          @remove-member=\"removeGroupMember\"\n          @change-role-to-member=\"changeRoleToMember\"\n          @change-role-to-admin=\"changeRoleToAdmin\"\n        />\n      </b-card>\n    </b-form>\n    <div class=\"fixed-footer\">\n      <b-button @click=\"submitForm\" variant=\"primary\">Submit</b-button>  \n    </div>\n  </div>\n</template>\n\n<script>\nimport { models, services } from \"django-airavata-api\";\nimport GroupMembersEditor from \"./GroupMembersEditor.vue\";\n\nexport default {\n  props: {\n    group: {\n      type: models.Group,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      localGroup: this.group.clone(),\n      showDismissibleAlert: {\n        variant: \"success\",\n        message: \"no data\",\n        dismissable: false,\n      },\n      userProfiles: [],\n    };\n  },\n  components: {\n    GroupMembersEditor,\n  },\n  methods: {\n    submitForm() {\n      let saveOperation = this.localGroup.id\n        ? services.GroupService.update({\n            lookup: this.localGroup.id,\n            data: this.localGroup,\n          })\n        : services.GroupService.create({ data: this.localGroup });\n      saveOperation\n        .then((group) => {\n          this.$emit(\"saved\", group);\n        })\n        .catch((error) => {\n          this.showDismissibleAlert.dismissable = true;\n          this.showDismissibleAlert.message = \"Error: \" + error.data;\n          this.showDismissibleAlert.variant = \"danger\";\n        });\n    },\n    addGroupMember(airavataInternalUserId) {\n      this.localGroup.members.push(airavataInternalUserId);\n    },\n    removeGroupMember(airavataInternalUserId) {\n      const index = this.localGroup.members.indexOf(airavataInternalUserId);\n      this.localGroup.members.splice(index, 1);\n      this.removeAdminMember(airavataInternalUserId);\n    },\n    removeAdminMember(airavataInternalUserId) {\n      const adminIndex = this.localGroup.admins.indexOf(airavataInternalUserId);\n      if (adminIndex >= 0) {\n        this.localGroup.admins.splice(adminIndex, 1);\n      }\n    },\n    changeRoleToMember(airavataInternalUserId) {\n      this.removeAdminMember(airavataInternalUserId);\n    },\n    changeRoleToAdmin(airavataInternalUserId) {\n      const adminIndex = this.localGroup.admins.indexOf(airavataInternalUserId);\n      if (adminIndex < 0) {\n        this.localGroup.admins.push(airavataInternalUserId);\n      }\n    },\n  },\n};\n</script>\n"],"sourceRoot":"static/django_airavata_groups/js/group_components"}]}