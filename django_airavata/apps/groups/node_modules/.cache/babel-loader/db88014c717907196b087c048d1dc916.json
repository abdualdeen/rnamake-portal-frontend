{"remainingRequest":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/thread-loader/dist/cjs.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/babel-loader/lib/index.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/service_config.js","dependencies":[{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/service_config.js","mtime":1638641844323},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/thread-loader/dist/cjs.js","mtime":1638646228889},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/babel-loader/lib/index.js","mtime":1638646321845},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1638646227499}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport ApplicationDeploymentDescription from \"./models/ApplicationDeploymentDescription\";\nimport ApplicationInterfaceDefinition from \"./models/ApplicationInterfaceDefinition\";\nimport ApplicationModule from \"./models/ApplicationModule\";\nimport BatchQueue from \"./models/BatchQueue\";\nimport ComputeResourceDescription from \"./models/ComputeResourceDescription\";\nimport CredentialSummary from \"./models/CredentialSummary\";\nimport DataProduct from \"./models/DataProduct\";\nimport Experiment from \"./models/Experiment\";\nimport ExperimentSearchFields from \"./models/ExperimentSearchFields\";\nimport ExperimentStatistics from \"./models/ExperimentStatistics\";\nimport ExperimentStoragePath from \"./models/ExperimentStoragePath\";\nimport ExperimentSummary from \"./models/ExperimentSummary\";\nimport FullExperiment from \"./models/FullExperiment\";\nimport GatewayResourceProfile from \"./models/GatewayResourceProfile\";\nimport Group from \"./models/Group\";\nimport GroupResourceProfile from \"./models/GroupResourceProfile\";\nimport IAMUserProfile from \"./models/IAMUserProfile\";\nimport LogRecord from \"./models/LogRecord\";\nimport Notification from \"./models/Notification\";\nimport Parser from \"./models/Parser\";\nimport Project from \"./models/Project\";\nimport Settings from \"./models/Settings\";\nimport SharedEntity from \"./models/SharedEntity\";\nimport StoragePreference from \"./models/StoragePreference\";\nimport StorageResourceDescription from \"./models/StorageResourceDescription\";\nimport UnverifiedEmailUserProfile from \"./models/UnverifiedEmailUserProfile\";\nimport User from \"./models/User\";\nimport UserProfile from \"./models/UserProfile\";\nimport UserStoragePath from \"./models/UserStoragePath\";\nimport WorkspacePreferences from \"./models/WorkspacePreferences\";\n/*\nexamples:\n\nGenerating Services based on the API view set\n{\n  serviceName:{\n    url:'/example/api',\n    viewSet:true, // or array of supported view set method names\n    pagination: true/false,\n    modelClass: ModelClass,\n  }\n}\nNormal service configuration:\n{\n  serviceName:{\n    methods: {\n      serviceAction1:{\n        url:'/example/api/<look_up>',  # the <look_up> implies a path parameter lok_up, defaults to service's url\n        requestType:'post', # defaults to \"get\"\n        bodyParams:[...] # body parameter names for json parameter if body\n          params id=s a list of array else an object with the param name for the\n          body object\n        queryParams:[], # list query param names/ query param name to param\n          name mapping, defaults to service's queryParams\n        pagination:true, # whether to treat the response as a paginated\n          response, defaults to service's pagination\n        modelClass: ModelClass\n      }\n    }\n  }\n}\n */\n\nexport default {\n  ApplicationDeployments: {\n    url: \"/api/application-deployments\",\n    viewSet: true,\n    methods: {\n      getQueues: {\n        url: \"/api/application-deployments/<lookup>/queues/\",\n        requestType: \"get\",\n        modelClass: BatchQueue\n      }\n    },\n    queryParams: [\"appModuleId\", \"groupResourceProfileId\"],\n    modelClass: ApplicationDeploymentDescription\n  },\n  ApplicationInterfaces: {\n    url: \"/api/application-interfaces\",\n    viewSet: true,\n    modelClass: ApplicationInterfaceDefinition\n  },\n  ApplicationModules: {\n    url: \"/api/applications\",\n    viewSet: true,\n    methods: {\n      getApplicationInterface: {\n        url: \"/api/applications/<lookup>/application_interface/\",\n        requestType: \"get\",\n        modelClass: ApplicationInterfaceDefinition\n      },\n      getApplicationDeployments: {\n        url: \"/api/applications/<lookup>/application_deployments/\",\n        requestType: \"get\",\n        modelClass: ApplicationDeploymentDescription\n      },\n      listAll: {\n        url: \"/api/applications/list_all/\",\n        requestType: \"get\",\n        modelClass: ApplicationModule\n      },\n      favorite: {\n        url: \"/api/applications/<lookup>/favorite/\",\n        requestType: \"post\"\n      },\n      unfavorite: {\n        url: \"/api/applications/<lookup>/unfavorite/\",\n        requestType: \"post\"\n      }\n    },\n    modelClass: ApplicationModule\n  },\n  ComputeResources: {\n    url: \"/api/compute-resources\",\n    viewSet: [\"retrieve\"],\n    methods: {\n      names: {\n        url: \"/api/compute-resources/all_names/\",\n        requestType: \"get\"\n      },\n      namesList: {\n        url: \"/api/compute-resources/all_names_list/\",\n        requestType: \"get\"\n      }\n    },\n    modelClass: ComputeResourceDescription\n  },\n  CredentialSummaries: {\n    url: \"/api/credential-summaries/\",\n    viewSet: [\"list\", \"retrieve\", \"delete\"],\n    methods: {\n      allSSHCredentials: {\n        url: \"/api/credential-summaries/ssh/\",\n        requestType: \"get\",\n        modelClass: CredentialSummary\n      },\n      allPasswordCredentials: {\n        url: \"/api/credential-summaries/password/\",\n        requestType: \"get\",\n        modelClass: CredentialSummary\n      },\n      createSSH: {\n        url: \"/api/credential-summaries/create_ssh/\",\n        requestType: \"post\",\n        bodyParams: {\n          name: \"data\"\n        },\n        modelClass: CredentialSummary\n      },\n      createPassword: {\n        url: \"/api/credential-summaries/create_password/\",\n        requestType: \"post\",\n        bodyParams: {\n          name: \"data\"\n        },\n        modelClass: CredentialSummary\n      }\n    },\n    modelClass: CredentialSummary\n  },\n  DataProducts: {\n    url: \"/api/data-products/\",\n    methods: {\n      retrieve: {\n        requestType: \"get\",\n        queryParams: {\n          lookup: \"product-uri\"\n        },\n        modelClass: DataProduct\n      }\n    }\n  },\n  Experiments: {\n    url: \"/api/experiments/\",\n    viewSet: true,\n    methods: {\n      launch: {\n        url: \"/api/experiments/<lookup>/launch/\",\n        requestType: \"post\",\n        modelClass: Experiment\n      },\n      clone: {\n        url: \"/api/experiments/<lookup>/clone/\",\n        requestType: \"post\",\n        modelClass: Experiment\n      },\n      cancel: {\n        url: \"/api/experiments/<lookup>/cancel/\",\n        requestType: \"post\",\n        modelClass: Experiment\n      }\n    },\n    modelClass: Experiment\n  },\n  ExperimentSearch: {\n    url: \"/api/experiment-search\",\n    viewSet: [{\n      name: \"list\",\n      initialDataParam: \"initialData\"\n    }],\n    modelClass: ExperimentSummary,\n    pagination: true,\n    queryParams: [\"limit\", \"offset\"].concat(ExperimentSearchFields.values.map(function (f) {\n      return f.name;\n    }))\n  },\n  ExperimentStatistics: {\n    url: \"/api/experiment-statistics\",\n    methods: {\n      get: {\n        url: \"/api/experiment-statistics\",\n        requestType: \"get\",\n        queryParams: [\"fromTime\", \"toTime\", \"userName\", \"applicationName\", \"resourceHostName\", \"limit\", \"offset\"],\n        pagination: true,\n        modelClass: ExperimentStatistics\n      }\n    }\n  },\n  ExperimentStoragePaths: {\n    url: \"/api/experiment-storage\",\n    methods: {\n      get: {\n        url: \"/api/experiment-storage/<experimentId>/<path>\",\n        requestType: \"get\",\n        modelClass: ExperimentStoragePath,\n        encodePathParams: false\n      }\n    }\n  },\n  FullExperiments: {\n    url: \"/api/full-experiments\",\n    viewSet: [{\n      name: \"retrieve\",\n      initialDataParam: \"initialFullExperimentData\"\n    }],\n    modelClass: FullExperiment\n  },\n  GatewayResourceProfile: {\n    url: \"/api/gateway-resource-profile/\",\n    methods: {\n      get: {\n        url: \"/api/gateway-resource-profile/\",\n        requestType: \"get\",\n        modelClass: GatewayResourceProfile\n      },\n      update: {\n        requestType: \"put\",\n        bodyParams: {\n          name: \"data\"\n        },\n        modelClass: GatewayResourceProfile\n      }\n    },\n    modelClass: GatewayResourceProfile\n  },\n  GroupResourceProfiles: {\n    url: \"/api/group-resource-profiles/\",\n    viewSet: true,\n    modelClass: GroupResourceProfile\n  },\n  Groups: {\n    url: \"/api/groups\",\n    viewSet: true,\n    pagination: true,\n    queryParams: [\"limit\", \"offset\"],\n    modelClass: Group\n  },\n  IAMUserProfiles: {\n    url: \"/api/iam-user-profiles\",\n    viewSet: true,\n    pagination: true,\n    methods: {\n      enable: {\n        url: \"/api/iam-user-profiles/<lookup>/enable/\",\n        requestType: \"post\",\n        modelClass: IAMUserProfile\n      }\n    },\n    queryParams: [\"limit\", \"offset\", \"search\"],\n    modelClass: IAMUserProfile\n  },\n  LogRecords: {\n    url: \"/api/log\",\n    methods: {\n      send: {\n        url: \"/api/log\",\n        requestType: \"post\",\n        bodyParams: {\n          name: \"data\"\n        },\n        modelClass: LogRecord\n      }\n    },\n    modelClass: LogRecord\n  },\n  Parsers: {\n    url: \"/api/parsers\",\n    viewSet: true,\n    queryParams: [\"limit\", \"offset\"],\n    modelClass: Parser\n  },\n  Projects: {\n    url: \"/api/projects\",\n    viewSet: true,\n    pagination: true,\n    methods: {\n      listAll: {\n        url: \"/api/projects/list_all/\",\n        requestType: \"get\",\n        modelClass: Project\n      }\n    },\n    queryParams: [\"limit\", \"offset\"],\n    modelClass: Project\n  },\n  Settings: {\n    url: \"/api/settings/\",\n    methods: {\n      get: {\n        url: \"/api/settings/\",\n        requestType: \"get\",\n        modelClass: Settings\n      }\n    }\n  },\n  SharedEntities: {\n    url: \"/api/shared-entities\",\n    viewSet: [\"retrieve\", \"update\"],\n    methods: {\n      merge: {\n        url: \"/api/shared-entities/<lookup>/merge/\",\n        bodyParams: {\n          name: \"data\"\n        },\n        requestType: \"put\",\n        modelClass: SharedEntity\n      }\n    },\n    modelClass: SharedEntity\n  },\n  StoragePreferences: {\n    url: \"/api/storage-preferences/\",\n    viewSet: true,\n    modelClass: StoragePreference\n  },\n  StorageResources: {\n    url: \"/api/storage-resources\",\n    viewSet: [\"retrieve\"],\n    methods: {\n      names: {\n        url: \"/api/storage-resources/all_names/\",\n        requestType: \"get\"\n      }\n    },\n    modelClass: StorageResourceDescription\n  },\n  UnverifiedEmailUsers: {\n    url: \"/api/unverified-email-users\",\n    viewSet: true,\n    pagination: true,\n    queryParams: [\"limit\", \"offset\"],\n    modelClass: UnverifiedEmailUserProfile\n  },\n  Users: {\n    url: \"/auth/users\",\n    viewSet: true,\n    methods: {\n      current: {\n        url: \"/auth/users/current/\",\n        requestType: \"get\"\n      },\n      resendEmailVerification: {\n        url: \"/auth/users/<lookup>/resend_email_verification/\",\n        requestType: \"post\"\n      },\n      verifyEmailChange: {\n        url: \"/auth/users/<lookup>/verify_email_change/\",\n        requestType: \"post\",\n        bodyParams: {\n          name: \"data\"\n        },\n        modelClass: User\n      }\n    },\n    modelClass: User\n  },\n  UserProfiles: {\n    url: \"/api/user-profiles\",\n    viewSet: [\"list\", \"retrieve\"],\n    modelClass: UserProfile\n  },\n  UserStoragePaths: {\n    url: \"/api/user-storage\",\n    methods: {\n      get: {\n        url: \"/api/user-storage/<path>\",\n        requestType: \"get\",\n        modelClass: UserStoragePath,\n        encodePathParams: false\n      }\n    }\n  },\n  WorkspacePreferences: {\n    url: \"/api/workspace-preferences\",\n    methods: {\n      get: {\n        url: \"/api/workspace-preferences\",\n        requestType: \"get\",\n        modelClass: WorkspacePreferences\n      }\n    }\n  },\n  ManageNotifications: {\n    url: \"/api/manage-notifications/\",\n    viewSet: true,\n    pagination: false,\n    modelClass: Notification\n  },\n  APIServerStatusCheck: {\n    url: \"/api/api-status-check\",\n    methods: {\n      get: {\n        url: \"/api/api-status-check/\",\n        requestType: \"get\"\n      }\n    }\n  }\n};",{"version":3,"sources":["/home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/service_config.js"],"names":["ApplicationDeploymentDescription","ApplicationInterfaceDefinition","ApplicationModule","BatchQueue","ComputeResourceDescription","CredentialSummary","DataProduct","Experiment","ExperimentSearchFields","ExperimentStatistics","ExperimentStoragePath","ExperimentSummary","FullExperiment","GatewayResourceProfile","Group","GroupResourceProfile","IAMUserProfile","LogRecord","Notification","Parser","Project","Settings","SharedEntity","StoragePreference","StorageResourceDescription","UnverifiedEmailUserProfile","User","UserProfile","UserStoragePath","WorkspacePreferences","ApplicationDeployments","url","viewSet","methods","getQueues","requestType","modelClass","queryParams","ApplicationInterfaces","ApplicationModules","getApplicationInterface","getApplicationDeployments","listAll","favorite","unfavorite","ComputeResources","names","namesList","CredentialSummaries","allSSHCredentials","allPasswordCredentials","createSSH","bodyParams","name","createPassword","DataProducts","retrieve","lookup","Experiments","launch","clone","cancel","ExperimentSearch","initialDataParam","pagination","concat","values","map","f","get","ExperimentStoragePaths","encodePathParams","FullExperiments","update","GroupResourceProfiles","Groups","IAMUserProfiles","enable","LogRecords","send","Parsers","Projects","SharedEntities","merge","StoragePreferences","StorageResources","UnverifiedEmailUsers","Users","current","resendEmailVerification","verifyEmailChange","UserProfiles","UserStoragePaths","ManageNotifications","APIServerStatusCheck"],"mappings":"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","sourcesContent":["import ApplicationDeploymentDescription from \"./models/ApplicationDeploymentDescription\";\nimport ApplicationInterfaceDefinition from \"./models/ApplicationInterfaceDefinition\";\nimport ApplicationModule from \"./models/ApplicationModule\";\nimport BatchQueue from \"./models/BatchQueue\";\nimport ComputeResourceDescription from \"./models/ComputeResourceDescription\";\nimport CredentialSummary from \"./models/CredentialSummary\";\nimport DataProduct from \"./models/DataProduct\";\nimport Experiment from \"./models/Experiment\";\nimport ExperimentSearchFields from \"./models/ExperimentSearchFields\";\nimport ExperimentStatistics from \"./models/ExperimentStatistics\";\nimport ExperimentStoragePath from \"./models/ExperimentStoragePath\";\nimport ExperimentSummary from \"./models/ExperimentSummary\";\nimport FullExperiment from \"./models/FullExperiment\";\nimport GatewayResourceProfile from \"./models/GatewayResourceProfile\";\nimport Group from \"./models/Group\";\nimport GroupResourceProfile from \"./models/GroupResourceProfile\";\nimport IAMUserProfile from \"./models/IAMUserProfile\";\nimport LogRecord from \"./models/LogRecord\";\nimport Notification from \"./models/Notification\";\nimport Parser from \"./models/Parser\";\nimport Project from \"./models/Project\";\nimport Settings from \"./models/Settings\";\nimport SharedEntity from \"./models/SharedEntity\";\nimport StoragePreference from \"./models/StoragePreference\";\nimport StorageResourceDescription from \"./models/StorageResourceDescription\";\nimport UnverifiedEmailUserProfile from \"./models/UnverifiedEmailUserProfile\";\nimport User from \"./models/User\";\nimport UserProfile from \"./models/UserProfile\";\nimport UserStoragePath from \"./models/UserStoragePath\";\nimport WorkspacePreferences from \"./models/WorkspacePreferences\";\n/*\nexamples:\n\nGenerating Services based on the API view set\n{\n  serviceName:{\n    url:'/example/api',\n    viewSet:true, // or array of supported view set method names\n    pagination: true/false,\n    modelClass: ModelClass,\n  }\n}\nNormal service configuration:\n{\n  serviceName:{\n    methods: {\n      serviceAction1:{\n        url:'/example/api/<look_up>',  # the <look_up> implies a path parameter lok_up, defaults to service's url\n        requestType:'post', # defaults to \"get\"\n        bodyParams:[...] # body parameter names for json parameter if body\n          params id=s a list of array else an object with the param name for the\n          body object\n        queryParams:[], # list query param names/ query param name to param\n          name mapping, defaults to service's queryParams\n        pagination:true, # whether to treat the response as a paginated\n          response, defaults to service's pagination\n        modelClass: ModelClass\n      }\n    }\n  }\n}\n */\n\nexport default {\n  ApplicationDeployments: {\n    url: \"/api/application-deployments\",\n    viewSet: true,\n    methods: {\n      getQueues: {\n        url: \"/api/application-deployments/<lookup>/queues/\",\n        requestType: \"get\",\n        modelClass: BatchQueue,\n      },\n    },\n    queryParams: [\"appModuleId\", \"groupResourceProfileId\"],\n    modelClass: ApplicationDeploymentDescription,\n  },\n  ApplicationInterfaces: {\n    url: \"/api/application-interfaces\",\n    viewSet: true,\n    modelClass: ApplicationInterfaceDefinition,\n  },\n  ApplicationModules: {\n    url: \"/api/applications\",\n    viewSet: true,\n    methods: {\n      getApplicationInterface: {\n        url: \"/api/applications/<lookup>/application_interface/\",\n        requestType: \"get\",\n        modelClass: ApplicationInterfaceDefinition,\n      },\n      getApplicationDeployments: {\n        url: \"/api/applications/<lookup>/application_deployments/\",\n        requestType: \"get\",\n        modelClass: ApplicationDeploymentDescription,\n      },\n      listAll: {\n        url: \"/api/applications/list_all/\",\n        requestType: \"get\",\n        modelClass: ApplicationModule,\n      },\n      favorite: {\n        url: \"/api/applications/<lookup>/favorite/\",\n        requestType: \"post\",\n      },\n      unfavorite: {\n        url: \"/api/applications/<lookup>/unfavorite/\",\n        requestType: \"post\",\n      },\n    },\n    modelClass: ApplicationModule,\n  },\n  ComputeResources: {\n    url: \"/api/compute-resources\",\n    viewSet: [\"retrieve\"],\n    methods: {\n      names: {\n        url: \"/api/compute-resources/all_names/\",\n        requestType: \"get\",\n      },\n      namesList: {\n        url: \"/api/compute-resources/all_names_list/\",\n        requestType: \"get\",\n      },\n    },\n    modelClass: ComputeResourceDescription,\n  },\n  CredentialSummaries: {\n    url: \"/api/credential-summaries/\",\n    viewSet: [\"list\", \"retrieve\", \"delete\"],\n    methods: {\n      allSSHCredentials: {\n        url: \"/api/credential-summaries/ssh/\",\n        requestType: \"get\",\n        modelClass: CredentialSummary,\n      },\n      allPasswordCredentials: {\n        url: \"/api/credential-summaries/password/\",\n        requestType: \"get\",\n        modelClass: CredentialSummary,\n      },\n      createSSH: {\n        url: \"/api/credential-summaries/create_ssh/\",\n        requestType: \"post\",\n        bodyParams: {\n          name: \"data\",\n        },\n        modelClass: CredentialSummary,\n      },\n      createPassword: {\n        url: \"/api/credential-summaries/create_password/\",\n        requestType: \"post\",\n        bodyParams: {\n          name: \"data\",\n        },\n        modelClass: CredentialSummary,\n      },\n    },\n    modelClass: CredentialSummary,\n  },\n  DataProducts: {\n    url: \"/api/data-products/\",\n    methods: {\n      retrieve: {\n        requestType: \"get\",\n        queryParams: {\n          lookup: \"product-uri\",\n        },\n        modelClass: DataProduct,\n      },\n    },\n  },\n  Experiments: {\n    url: \"/api/experiments/\",\n    viewSet: true,\n    methods: {\n      launch: {\n        url: \"/api/experiments/<lookup>/launch/\",\n        requestType: \"post\",\n        modelClass: Experiment,\n      },\n      clone: {\n        url: \"/api/experiments/<lookup>/clone/\",\n        requestType: \"post\",\n        modelClass: Experiment,\n      },\n      cancel: {\n        url: \"/api/experiments/<lookup>/cancel/\",\n        requestType: \"post\",\n        modelClass: Experiment,\n      },\n    },\n    modelClass: Experiment,\n  },\n  ExperimentSearch: {\n    url: \"/api/experiment-search\",\n    viewSet: [\n      {\n        name: \"list\",\n        initialDataParam: \"initialData\",\n      },\n    ],\n    modelClass: ExperimentSummary,\n    pagination: true,\n    queryParams: [\"limit\", \"offset\"].concat(\n      ExperimentSearchFields.values.map((f) => f.name)\n    ),\n  },\n  ExperimentStatistics: {\n    url: \"/api/experiment-statistics\",\n    methods: {\n      get: {\n        url: \"/api/experiment-statistics\",\n        requestType: \"get\",\n        queryParams: [\n          \"fromTime\",\n          \"toTime\",\n          \"userName\",\n          \"applicationName\",\n          \"resourceHostName\",\n          \"limit\",\n          \"offset\",\n        ],\n        pagination: true,\n        modelClass: ExperimentStatistics,\n      },\n    },\n  },\n  ExperimentStoragePaths: {\n    url: \"/api/experiment-storage\",\n    methods: {\n      get: {\n        url: \"/api/experiment-storage/<experimentId>/<path>\",\n        requestType: \"get\",\n        modelClass: ExperimentStoragePath,\n        encodePathParams: false,\n      },\n    },\n  },\n  FullExperiments: {\n    url: \"/api/full-experiments\",\n    viewSet: [\n      {\n        name: \"retrieve\",\n        initialDataParam: \"initialFullExperimentData\",\n      },\n    ],\n    modelClass: FullExperiment,\n  },\n  GatewayResourceProfile: {\n    url: \"/api/gateway-resource-profile/\",\n    methods: {\n      get: {\n        url: \"/api/gateway-resource-profile/\",\n        requestType: \"get\",\n        modelClass: GatewayResourceProfile,\n      },\n      update: {\n        requestType: \"put\",\n        bodyParams: {\n          name: \"data\",\n        },\n        modelClass: GatewayResourceProfile,\n      },\n    },\n    modelClass: GatewayResourceProfile,\n  },\n  GroupResourceProfiles: {\n    url: \"/api/group-resource-profiles/\",\n    viewSet: true,\n    modelClass: GroupResourceProfile,\n  },\n  Groups: {\n    url: \"/api/groups\",\n    viewSet: true,\n    pagination: true,\n    queryParams: [\"limit\", \"offset\"],\n    modelClass: Group,\n  },\n  IAMUserProfiles: {\n    url: \"/api/iam-user-profiles\",\n    viewSet: true,\n    pagination: true,\n    methods: {\n      enable: {\n        url: \"/api/iam-user-profiles/<lookup>/enable/\",\n        requestType: \"post\",\n        modelClass: IAMUserProfile,\n      },\n    },\n    queryParams: [\"limit\", \"offset\", \"search\"],\n    modelClass: IAMUserProfile,\n  },\n  LogRecords: {\n    url: \"/api/log\",\n    methods: {\n      send: {\n        url: \"/api/log\",\n        requestType: \"post\",\n        bodyParams: {\n          name: \"data\",\n        },\n        modelClass: LogRecord,\n      },\n    },\n    modelClass: LogRecord,\n  },\n  Parsers: {\n    url: \"/api/parsers\",\n    viewSet: true,\n    queryParams: [\"limit\", \"offset\"],\n    modelClass: Parser,\n  },\n  Projects: {\n    url: \"/api/projects\",\n    viewSet: true,\n    pagination: true,\n    methods: {\n      listAll: {\n        url: \"/api/projects/list_all/\",\n        requestType: \"get\",\n        modelClass: Project,\n      },\n    },\n    queryParams: [\"limit\", \"offset\"],\n    modelClass: Project,\n  },\n  Settings: {\n    url: \"/api/settings/\",\n    methods: {\n      get: {\n        url: \"/api/settings/\",\n        requestType: \"get\",\n        modelClass: Settings,\n      },\n    },\n  },\n  SharedEntities: {\n    url: \"/api/shared-entities\",\n    viewSet: [\"retrieve\", \"update\"],\n    methods: {\n      merge: {\n        url: \"/api/shared-entities/<lookup>/merge/\",\n        bodyParams: {\n          name: \"data\",\n        },\n        requestType: \"put\",\n        modelClass: SharedEntity,\n      },\n    },\n    modelClass: SharedEntity,\n  },\n  StoragePreferences: {\n    url: \"/api/storage-preferences/\",\n    viewSet: true,\n    modelClass: StoragePreference,\n  },\n  StorageResources: {\n    url: \"/api/storage-resources\",\n    viewSet: [\"retrieve\"],\n    methods: {\n      names: {\n        url: \"/api/storage-resources/all_names/\",\n        requestType: \"get\",\n      },\n    },\n    modelClass: StorageResourceDescription,\n  },\n  UnverifiedEmailUsers: {\n    url: \"/api/unverified-email-users\",\n    viewSet: true,\n    pagination: true,\n    queryParams: [\"limit\", \"offset\"],\n    modelClass: UnverifiedEmailUserProfile,\n  },\n  Users: {\n    url: \"/auth/users\",\n    viewSet: true,\n    methods: {\n      current: {\n        url: \"/auth/users/current/\",\n        requestType: \"get\",\n      },\n      resendEmailVerification: {\n        url: \"/auth/users/<lookup>/resend_email_verification/\",\n        requestType: \"post\",\n      },\n      verifyEmailChange: {\n        url: \"/auth/users/<lookup>/verify_email_change/\",\n        requestType: \"post\",\n        bodyParams: {\n          name: \"data\",\n        },\n        modelClass: User,\n      },\n    },\n    modelClass: User,\n  },\n  UserProfiles: {\n    url: \"/api/user-profiles\",\n    viewSet: [\"list\", \"retrieve\"],\n    modelClass: UserProfile,\n  },\n  UserStoragePaths: {\n    url: \"/api/user-storage\",\n    methods: {\n      get: {\n        url: \"/api/user-storage/<path>\",\n        requestType: \"get\",\n        modelClass: UserStoragePath,\n        encodePathParams: false,\n      },\n    },\n  },\n  WorkspacePreferences: {\n    url: \"/api/workspace-preferences\",\n    methods: {\n      get: {\n        url: \"/api/workspace-preferences\",\n        requestType: \"get\",\n        modelClass: WorkspacePreferences,\n      },\n    },\n  },\n  ManageNotifications: {\n    url: \"/api/manage-notifications/\",\n    viewSet: true,\n    pagination: false,\n    modelClass: Notification,\n  },\n  APIServerStatusCheck: {\n    url: \"/api/api-status-check\",\n    methods: {\n      get: {\n        url: \"/api/api-status-check/\",\n        requestType: \"get\",\n      },\n    },\n  },\n};\n"]}]}