{"remainingRequest":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/thread-loader/dist/cjs.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/babel-loader/lib/index.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/ComputeResourceDescription.js","dependencies":[{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/ComputeResourceDescription.js","mtime":1638641844319},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/thread-loader/dist/cjs.js","mtime":1638646228889},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/babel-loader/lib/index.js","mtime":1638646321845},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1638646227499}],"contextDependencies":[],"result":["import \"core-js/modules/es6.reflect.construct\";\nimport _classCallCheck from \"/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _inherits from \"/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport BaseModel from \"./BaseModel\";\nimport BatchQueue from \"./BatchQueue\";\nvar FIELDS = [\"computeResourceId\", \"hostName\", {\n  name: \"hostAliases\",\n  type: \"string\",\n  list: true\n}, {\n  name: \"ipAddresses\",\n  type: \"string\",\n  list: true\n}, \"resourceDescription\", \"enabled\", {\n  name: \"batchQueues\",\n  type: BatchQueue,\n  list: true\n}, // TODO: map these\n// 'fileSystems',\n// 'jobSubmissionInterfaces',\n// 'dataMovementInterfaces',\n\"maxMemoryPerNode\", \"gatewayUsageReporting\", \"gatewayUsageModuleLoadCommand\", \"gatewayUsageExecutable\", \"cpusPerNode\", \"defaultNodeCount\", \"defaultCPUCount\", \"defaultWalltime\"];\n\nvar ComputeResourceDescription = /*#__PURE__*/function (_BaseModel) {\n  _inherits(ComputeResourceDescription, _BaseModel);\n\n  var _super = _createSuper(ComputeResourceDescription);\n\n  function ComputeResourceDescription() {\n    var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, ComputeResourceDescription);\n\n    return _super.call(this, FIELDS, data);\n  }\n\n  return ComputeResourceDescription;\n}(BaseModel);\n\nexport { ComputeResourceDescription as default };",{"version":3,"sources":["/home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/ComputeResourceDescription.js"],"names":["BaseModel","BatchQueue","FIELDS","name","type","list","ComputeResourceDescription","data"],"mappings":";;;;;;;;;;AAAA,OAAOA,SAAP;AACA,OAAOC,UAAP;AAEA,IAAMC,MAAM,GAAG,CACb,mBADa,EAEb,UAFa,EAGb;AACEC,EAAAA,IAAI,EAAE,aADR;AAEEC,EAAAA,IAAI,EAAE,QAFR;AAGEC,EAAAA,IAAI,EAAE;AAHR,CAHa,EAQb;AACEF,EAAAA,IAAI,EAAE,aADR;AAEEC,EAAAA,IAAI,EAAE,QAFR;AAGEC,EAAAA,IAAI,EAAE;AAHR,CARa,EAab,qBAba,EAcb,SAda,EAeb;AACEF,EAAAA,IAAI,EAAE,aADR;AAEEC,EAAAA,IAAI,EAAEH,UAFR;AAGEI,EAAAA,IAAI,EAAE;AAHR,CAfa,EAoBb;AACA;AACA;AACA;AACA,kBAxBa,EAyBb,uBAzBa,EA0Bb,+BA1Ba,EA2Bb,wBA3Ba,EA4Bb,aA5Ba,EA6Bb,kBA7Ba,EA8Bb,iBA9Ba,EA+Bb,iBA/Ba,CAAf;;IAkCqBC,0B;;;;;AACnB,wCAAuB;AAAA,QAAXC,IAAW,uEAAJ,EAAI;;AAAA;;AAAA,6BACfL,MADe,EACPK,IADO;AAEtB;;;EAHqDP,S;;SAAnCM,0B","sourcesContent":["import BaseModel from \"./BaseModel\";\nimport BatchQueue from \"./BatchQueue\";\n\nconst FIELDS = [\n  \"computeResourceId\",\n  \"hostName\",\n  {\n    name: \"hostAliases\",\n    type: \"string\",\n    list: true,\n  },\n  {\n    name: \"ipAddresses\",\n    type: \"string\",\n    list: true,\n  },\n  \"resourceDescription\",\n  \"enabled\",\n  {\n    name: \"batchQueues\",\n    type: BatchQueue,\n    list: true,\n  },\n  // TODO: map these\n  // 'fileSystems',\n  // 'jobSubmissionInterfaces',\n  // 'dataMovementInterfaces',\n  \"maxMemoryPerNode\",\n  \"gatewayUsageReporting\",\n  \"gatewayUsageModuleLoadCommand\",\n  \"gatewayUsageExecutable\",\n  \"cpusPerNode\",\n  \"defaultNodeCount\",\n  \"defaultCPUCount\",\n  \"defaultWalltime\",\n];\n\nexport default class ComputeResourceDescription extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n  }\n}\n"]}]}