{"remainingRequest":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/thread-loader/dist/cjs.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/babel-loader/lib/index.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/Group.js","dependencies":[{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/Group.js","mtime":1638641844319},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/thread-loader/dist/cjs.js","mtime":1638646228889},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/babel-loader/lib/index.js","mtime":1638646321845},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1638646227499}],"contextDependencies":[],"result":["import \"core-js/modules/es6.reflect.construct\";\nimport \"core-js/modules/es6.function.name\";\nimport _classCallCheck from \"/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport BaseModel from \"./BaseModel\";\nvar FIELDS = [\"id\", \"name\", \"ownerId\", \"description\", {\n  name: \"members\",\n  type: \"string\",\n  list: true,\n  default: BaseModel.defaultNewInstance(Array)\n}, {\n  name: \"admins\",\n  type: \"string\",\n  list: true,\n  default: BaseModel.defaultNewInstance(Array)\n}, {\n  name: \"isOwner\",\n  type: \"boolean\",\n  default: true\n}, {\n  name: \"isAdmin\",\n  type: \"boolean\",\n  default: false\n}, {\n  name: \"isMember\",\n  type: \"boolean\",\n  default: true\n}, \"isGatewayAdminsGroup\", \"isReadOnlyGatewayAdminsGroup\", \"isDefaultGatewayUsersGroup\"];\n\nvar Group = /*#__PURE__*/function (_BaseModel) {\n  _inherits(Group, _BaseModel);\n\n  var _super = _createSuper(Group);\n\n  function Group() {\n    var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Group);\n\n    return _super.call(this, FIELDS, data);\n  }\n\n  _createClass(Group, [{\n    key: \"validate\",\n    value: function validate() {\n      if (this.isEmpty(this.name.trim())) {\n        return {\n          name: [\"Please provide a name.\"]\n        };\n      }\n\n      return null;\n    }\n    /**\n     * Return true if group is either the \"Gateway Admins\" or the \"Readonly Admins\" group.\n     */\n\n  }, {\n    key: \"isAdminGroup\",\n    get: function get() {\n      return this.isReadOnlyGatewayAdminsGroup || this.isGatewayAdminsGroup;\n    }\n  }, {\n    key: \"userHasWriteAccess\",\n    get: function get() {\n      return this.isOwner || this.isAdmin;\n    }\n  }]);\n\n  return Group;\n}(BaseModel);\n\nexport { Group as default };",{"version":3,"sources":["/home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/Group.js"],"names":["BaseModel","FIELDS","name","type","list","default","defaultNewInstance","Array","Group","data","isEmpty","trim","isReadOnlyGatewayAdminsGroup","isGatewayAdminsGroup","isOwner","isAdmin"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,SAAP;AAEA,IAAMC,MAAM,GAAG,CACb,IADa,EAEb,MAFa,EAGb,SAHa,EAIb,aAJa,EAKb;AACEC,EAAAA,IAAI,EAAE,SADR;AAEEC,EAAAA,IAAI,EAAE,QAFR;AAGEC,EAAAA,IAAI,EAAE,IAHR;AAIEC,EAAAA,OAAO,EAAEL,SAAS,CAACM,kBAAV,CAA6BC,KAA7B;AAJX,CALa,EAWb;AACEL,EAAAA,IAAI,EAAE,QADR;AAEEC,EAAAA,IAAI,EAAE,QAFR;AAGEC,EAAAA,IAAI,EAAE,IAHR;AAIEC,EAAAA,OAAO,EAAEL,SAAS,CAACM,kBAAV,CAA6BC,KAA7B;AAJX,CAXa,EAiBb;AACEL,EAAAA,IAAI,EAAE,SADR;AAEEC,EAAAA,IAAI,EAAE,SAFR;AAGEE,EAAAA,OAAO,EAAE;AAHX,CAjBa,EAsBb;AACEH,EAAAA,IAAI,EAAE,SADR;AAEEC,EAAAA,IAAI,EAAE,SAFR;AAGEE,EAAAA,OAAO,EAAE;AAHX,CAtBa,EA2Bb;AACEH,EAAAA,IAAI,EAAE,UADR;AAEEC,EAAAA,IAAI,EAAE,SAFR;AAGEE,EAAAA,OAAO,EAAE;AAHX,CA3Ba,EAgCb,sBAhCa,EAiCb,8BAjCa,EAkCb,4BAlCa,CAAf;;IAqCqBG,K;;;;;AACnB,mBAAuB;AAAA,QAAXC,IAAW,uEAAJ,EAAI;;AAAA;;AAAA,6BACfR,MADe,EACPQ,IADO;AAEtB;;;;WAED,oBAAW;AACT,UAAI,KAAKC,OAAL,CAAa,KAAKR,IAAL,CAAUS,IAAV,EAAb,CAAJ,EAAoC;AAClC,eAAO;AACLT,UAAAA,IAAI,EAAE,CAAC,wBAAD;AADD,SAAP;AAGD;;AACD,aAAO,IAAP;AACD;AAED;AACF;AACA;;;;SACE,eAAmB;AACjB,aAAO,KAAKU,4BAAL,IAAqC,KAAKC,oBAAjD;AACD;;;SAED,eAAyB;AACvB,aAAO,KAAKC,OAAL,IAAgB,KAAKC,OAA5B;AACD;;;;EAvBgCf,S;;SAAdQ,K","sourcesContent":["import BaseModel from \"./BaseModel\";\n\nconst FIELDS = [\n  \"id\",\n  \"name\",\n  \"ownerId\",\n  \"description\",\n  {\n    name: \"members\",\n    type: \"string\",\n    list: true,\n    default: BaseModel.defaultNewInstance(Array),\n  },\n  {\n    name: \"admins\",\n    type: \"string\",\n    list: true,\n    default: BaseModel.defaultNewInstance(Array),\n  },\n  {\n    name: \"isOwner\",\n    type: \"boolean\",\n    default: true,\n  },\n  {\n    name: \"isAdmin\",\n    type: \"boolean\",\n    default: false,\n  },\n  {\n    name: \"isMember\",\n    type: \"boolean\",\n    default: true,\n  },\n  \"isGatewayAdminsGroup\",\n  \"isReadOnlyGatewayAdminsGroup\",\n  \"isDefaultGatewayUsersGroup\",\n];\n\nexport default class Group extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n  }\n\n  validate() {\n    if (this.isEmpty(this.name.trim())) {\n      return {\n        name: [\"Please provide a name.\"],\n      };\n    }\n    return null;\n  }\n\n  /**\n   * Return true if group is either the \"Gateway Admins\" or the \"Readonly Admins\" group.\n   */\n  get isAdminGroup() {\n    return this.isReadOnlyGatewayAdminsGroup || this.isGatewayAdminsGroup;\n  }\n\n  get userHasWriteAccess() {\n    return this.isOwner || this.isAdmin;\n  }\n}\n"]}]}