{"remainingRequest":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/thread-loader/dist/cjs.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/babel-loader/lib/index.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/SharedEntity.js","dependencies":[{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/SharedEntity.js","mtime":1638641844323},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/thread-loader/dist/cjs.js","mtime":1638646228889},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/babel-loader/lib/index.js","mtime":1638646321845},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1638646227499}],"contextDependencies":[],"result":["import \"core-js/modules/es6.reflect.construct\";\nimport \"core-js/modules/es6.array.find\";\nimport _classCallCheck from \"/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport BaseModel from \"./BaseModel\";\nimport GroupPermission from \"./GroupPermission\";\nimport UserPermission from \"./UserPermission\";\nimport UserProfile from \"./UserProfile\";\nimport ResourcePermissionType from \"./ResourcePermissionType\";\nvar FIELDS = [\"entityId\", {\n  name: \"userPermissions\",\n  type: UserPermission,\n  list: true,\n  default: BaseModel.defaultNewInstance(Array)\n}, {\n  name: \"groupPermissions\",\n  type: GroupPermission,\n  list: true,\n  default: BaseModel.defaultNewInstance(Array)\n}, {\n  name: \"owner\",\n  type: UserProfile\n}, \"isOwner\", \"hasSharingPermission\"];\n\nvar SharedEntity = /*#__PURE__*/function (_BaseModel) {\n  _inherits(SharedEntity, _BaseModel);\n\n  var _super = _createSuper(SharedEntity);\n\n  function SharedEntity() {\n    var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, SharedEntity);\n\n    return _super.call(this, FIELDS, data);\n  }\n\n  _createClass(SharedEntity, [{\n    key: \"addUser\",\n    value: function addUser(user) {\n      if (!this.userPermissions) {\n        this.userPermissions = [];\n      }\n\n      if (!this.userPermissions.find(function (up) {\n        return up.user.airavataInternalUserId === user.airavataInternalUserId;\n      })) {\n        this.userPermissions.push(new UserPermission({\n          user: user,\n          permissionType: ResourcePermissionType.READ\n        }));\n      }\n    }\n  }, {\n    key: \"removeUser\",\n    value: function removeUser(user) {\n      this.userPermissions = this.userPermissions.filter(function (userPermission) {\n        return userPermission.user.airavataInternalUserId !== user.airavataInternalUserId;\n      });\n    }\n  }, {\n    key: \"addGroup\",\n    value: function addGroup(_ref) {\n      var group = _ref.group,\n          _ref$permissionType = _ref.permissionType,\n          permissionType = _ref$permissionType === void 0 ? ResourcePermissionType.READ : _ref$permissionType;\n\n      if (!this.groupPermissions) {\n        this.groupPermissions = [];\n      }\n\n      if (!this.groupPermissions.find(function (gp) {\n        return gp.group.id === group.id;\n      })) {\n        this.groupPermissions.push(new GroupPermission({\n          group: group,\n          permissionType: permissionType\n        }));\n      }\n    }\n  }, {\n    key: \"removeGroup\",\n    value: function removeGroup(group) {\n      this.groupPermissions = this.groupPermissions.filter(function (groupPermission) {\n        return groupPermission.group.id !== group.id;\n      });\n    }\n  }, {\n    key: \"nonAdminGroupPermissions\",\n    get: function get() {\n      if (this.groupPermissions) {\n        return this.groupPermissions.filter(function (groupPermission) {\n          return !groupPermission.group.isAdminGroup;\n        });\n      } else {\n        return [];\n      }\n    }\n  }]);\n\n  return SharedEntity;\n}(BaseModel);\n\nexport { SharedEntity as default };",{"version":3,"sources":["/home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/SharedEntity.js"],"names":["BaseModel","GroupPermission","UserPermission","UserProfile","ResourcePermissionType","FIELDS","name","type","list","default","defaultNewInstance","Array","SharedEntity","data","user","userPermissions","find","up","airavataInternalUserId","push","permissionType","READ","filter","userPermission","group","groupPermissions","gp","id","groupPermission","isAdminGroup"],"mappings":"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","sourcesContent":["import BaseModel from \"./BaseModel\";\nimport GroupPermission from \"./GroupPermission\";\nimport UserPermission from \"./UserPermission\";\nimport UserProfile from \"./UserProfile\";\nimport ResourcePermissionType from \"./ResourcePermissionType\";\n\nconst FIELDS = [\n  \"entityId\",\n  {\n    name: \"userPermissions\",\n    type: UserPermission,\n    list: true,\n    default: BaseModel.defaultNewInstance(Array),\n  },\n  {\n    name: \"groupPermissions\",\n    type: GroupPermission,\n    list: true,\n    default: BaseModel.defaultNewInstance(Array),\n  },\n  {\n    name: \"owner\",\n    type: UserProfile,\n  },\n  \"isOwner\",\n  \"hasSharingPermission\",\n];\n\nexport default class SharedEntity extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n  }\n\n  addUser(user) {\n    if (!this.userPermissions) {\n      this.userPermissions = [];\n    }\n    if (\n      !this.userPermissions.find(\n        (up) => up.user.airavataInternalUserId === user.airavataInternalUserId\n      )\n    ) {\n      this.userPermissions.push(\n        new UserPermission({\n          user: user,\n          permissionType: ResourcePermissionType.READ,\n        })\n      );\n    }\n  }\n\n  removeUser(user) {\n    this.userPermissions = this.userPermissions.filter(\n      (userPermission) =>\n        userPermission.user.airavataInternalUserId !==\n        user.airavataInternalUserId\n    );\n  }\n\n  addGroup({ group, permissionType = ResourcePermissionType.READ }) {\n    if (!this.groupPermissions) {\n      this.groupPermissions = [];\n    }\n    if (!this.groupPermissions.find((gp) => gp.group.id === group.id)) {\n      this.groupPermissions.push(\n        new GroupPermission({\n          group: group,\n          permissionType: permissionType,\n        })\n      );\n    }\n  }\n\n  removeGroup(group) {\n    this.groupPermissions = this.groupPermissions.filter(\n      (groupPermission) => groupPermission.group.id !== group.id\n    );\n  }\n\n  get nonAdminGroupPermissions() {\n    if (this.groupPermissions) {\n      return this.groupPermissions.filter(\n        (groupPermission) => !groupPermission.group.isAdminGroup\n      );\n    } else {\n      return [];\n    }\n  }\n}\n"]}]}