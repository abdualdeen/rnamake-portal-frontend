{"remainingRequest":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/thread-loader/dist/cjs.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/babel-loader/lib/index.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vanishing/git/airavata-django-portal/django_airavata/static/common/js/components/Linkify.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/static/common/js/components/Linkify.vue","mtime":1639684988547},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/thread-loader/dist/cjs.js","mtime":1638646228889},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/babel-loader/lib/index.js","mtime":1638646321845},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/vue-loader/lib/index.js","mtime":1638646324785}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport * as linkify from \"linkifyjs\";\nexport default {\n  name: \"linkify\",\n  render: function render(createElement) {\n    var _this = this;\n\n    // Find top level text nodes and run linkify on the text, converting them\n    // into an array of links and text nodes\n    var children = this.$slots.default.map(function (node) {\n      if (node.text) {\n        var tokens = linkify.tokenize(node.text);\n        return tokens.map(function (t) {\n          if (t.isLink) {\n            return createElement(\"a\", {\n              attrs: {\n                href: t.toHref(\"https\"),\n                target: \"_blank\"\n              },\n              on: {\n                click: _this.clickHandler\n              }\n            }, t.toString());\n          } else {\n            return t.toString();\n          }\n        });\n      } else {\n        return node;\n      }\n    }) // Flatten array since text nodes are mapped to arrays\n    .flat();\n    return createElement(\"span\", null, children);\n  },\n  methods: {\n    clickHandler: function clickHandler(e) {\n      // stop click event from bubbling up\n      e.stopPropagation();\n    }\n  }\n};",{"version":3,"sources":["Linkify.vue"],"names":[],"mappings":";AACA,OAAA,KAAA,OAAA,MAAA,WAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,SADA;AAGA,EAAA,MAAA,EAAA,gBAAA,aAAA,EAAA;AAAA;;AACA;AACA;AACA,QAAA,QAAA,GAAA,KAAA,MAAA,CAAA,OAAA,CACA,GADA,CACA,UAAA,IAAA,EAAA;AACA,UAAA,IAAA,CAAA,IAAA,EAAA;AACA,YAAA,MAAA,GAAA,OAAA,CAAA,QAAA,CAAA,IAAA,CAAA,IAAA,CAAA;AACA,eAAA,MAAA,CAAA,GAAA,CAAA,UAAA,CAAA,EAAA;AACA,cAAA,CAAA,CAAA,MAAA,EAAA;AACA,mBAAA,aAAA,CACA,GADA,EAEA;AACA,cAAA,KAAA,EAAA;AAAA,gBAAA,IAAA,EAAA,CAAA,CAAA,MAAA,CAAA,OAAA,CAAA;AAAA,gBAAA,MAAA,EAAA;AAAA,eADA;AAEA,cAAA,EAAA,EAAA;AACA,gBAAA,KAAA,EAAA,KAAA,CAAA;AADA;AAFA,aAFA,EAQA,CAAA,CAAA,QAAA,EARA,CAAA;AAUA,WAXA,MAWA;AACA,mBAAA,CAAA,CAAA,QAAA,EAAA;AACA;AACA,SAfA,CAAA;AAgBA,OAlBA,MAkBA;AACA,eAAA,IAAA;AACA;AACA,KAvBA,EAwBA;AAxBA,KAyBA,IAzBA,EAAA;AA0BA,WAAA,aAAA,CAAA,MAAA,EAAA,IAAA,EAAA,QAAA,CAAA;AACA,GAjCA;AAkCA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,wBACA,CADA,EACA;AACA;AACA,MAAA,CAAA,CAAA,eAAA;AACA;AAJA;AAlCA,CAAA","sourcesContent":["<script>\nimport * as linkify from \"linkifyjs\";\n\nexport default {\n  name: \"linkify\",\n\n  render: function (createElement) {\n    // Find top level text nodes and run linkify on the text, converting them\n    // into an array of links and text nodes\n    const children = this.$slots.default\n      .map((node) => {\n        if (node.text) {\n          const tokens = linkify.tokenize(node.text);\n          return tokens.map((t) => {\n            if (t.isLink) {\n              return createElement(\n                \"a\",\n                {\n                  attrs: { href: t.toHref(\"https\"), target: \"_blank\" },\n                  on: {\n                    click: this.clickHandler,\n                  },\n                },\n                t.toString()\n              );\n            } else {\n              return t.toString();\n            }\n          });\n        } else {\n          return node;\n        }\n      })\n      // Flatten array since text nodes are mapped to arrays\n      .flat();\n    return createElement(\"span\", null, children);\n  },\n  methods: {\n    clickHandler(e) {\n      // stop click event from bubbling up\n      e.stopPropagation();\n    },\n  },\n};\n</script>\n"],"sourceRoot":"../../static/common/js/components"}]}