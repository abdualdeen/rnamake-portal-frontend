{"remainingRequest":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/thread-loader/dist/cjs.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/babel-loader/lib/index.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vanishing/git/airavata-django-portal/django_airavata/static/common/js/components/AutocompleteTextInput.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/static/common/js/components/AutocompleteTextInput.vue","mtime":1638641844579},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/thread-loader/dist/cjs.js","mtime":1638646228889},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/babel-loader/lib/index.js","mtime":1638646321845},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/groups/node_modules/vue-loader/lib/index.js","mtime":1638646324785}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"autocomplete-text-input\",\n  props: {\n    suggestions: {\n      type: Array,\n      required: true\n    },\n    placeholder: {\n      type: String,\n      default: \"Type to get suggestions...\"\n    },\n    maxMatches: {\n      type: Number,\n      default: 5\n    }\n  },\n  data: function data() {\n    return {\n      open: false,\n      current: 0,\n      searchValue: \"\"\n    };\n  },\n  computed: {\n    filtered: function filtered() {\n      var _this = this;\n\n      return this.suggestions.filter(function (data) {\n        // Case insensitive search\n        return data.name.toLowerCase().indexOf(_this.searchValue.toLowerCase()) >= 0;\n      }).slice(0, this.maxMatches);\n    }\n  },\n  methods: {\n    updateSearchValue: function updateSearchValue(value) {\n      if (this.open === false) {\n        this.open = true;\n        this.current = 0;\n      }\n\n      if (value === \"\") {\n        this.open = false;\n      }\n\n      this.searchValue = value;\n      this.$emit(\"search-changed\", value);\n    },\n    enter: function enter() {\n      if (this.filtered.length === 0) {\n        return;\n      }\n\n      this.emitSelectedItem(this.current);\n      this.searchValue = \"\";\n      this.open = false;\n    },\n    up: function up() {\n      if (this.current > 0) {\n        this.current--;\n      }\n    },\n    down: function down() {\n      if (this.current < this.filtered.length - 1) {\n        this.current++;\n      }\n    },\n    isActive: function isActive(index) {\n      return index === this.current;\n    },\n    suggestionClick: function suggestionClick(index) {\n      this.emitSelectedItem(index);\n      this.searchValue = \"\";\n      this.open = false;\n    },\n    emitSelectedItem: function emitSelectedItem(index) {\n      this.$emit(\"selected\", this.filtered[index]);\n    }\n  }\n};",{"version":3,"sources":["AutocompleteTextInput.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA,eAAA;AACA,EAAA,IAAA,EAAA,yBADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,QAAA,EAAA;AAFA,KADA;AAKA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KALA;AASA,IAAA,UAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA;AATA,GAFA;AAgBA,EAAA,IAhBA,kBAgBA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA,CAFA;AAGA,MAAA,WAAA,EAAA;AAHA,KAAA;AAKA,GAtBA;AAwBA,EAAA,QAAA,EAAA;AACA,IAAA,QADA,sBACA;AAAA;;AACA,aAAA,KAAA,WAAA,CACA,MADA,CACA,UAAA,IAAA,EAAA;AACA;AACA,eACA,IAAA,CAAA,IAAA,CAAA,WAAA,GAAA,OAAA,CAAA,KAAA,CAAA,WAAA,CAAA,WAAA,EAAA,KAAA,CADA;AAGA,OANA,EAOA,KAPA,CAOA,CAPA,EAOA,KAAA,UAPA,CAAA;AAQA;AAVA,GAxBA;AAoCA,EAAA,OAAA,EAAA;AACA,IAAA,iBADA,6BACA,KADA,EACA;AACA,UAAA,KAAA,IAAA,KAAA,KAAA,EAAA;AACA,aAAA,IAAA,GAAA,IAAA;AACA,aAAA,OAAA,GAAA,CAAA;AACA;;AACA,UAAA,KAAA,KAAA,EAAA,EAAA;AACA,aAAA,IAAA,GAAA,KAAA;AACA;;AACA,WAAA,WAAA,GAAA,KAAA;AACA,WAAA,KAAA,CAAA,gBAAA,EAAA,KAAA;AACA,KAXA;AAYA,IAAA,KAZA,mBAYA;AACA,UAAA,KAAA,QAAA,CAAA,MAAA,KAAA,CAAA,EAAA;AACA;AACA;;AACA,WAAA,gBAAA,CAAA,KAAA,OAAA;AACA,WAAA,WAAA,GAAA,EAAA;AACA,WAAA,IAAA,GAAA,KAAA;AACA,KAnBA;AAoBA,IAAA,EApBA,gBAoBA;AACA,UAAA,KAAA,OAAA,GAAA,CAAA,EAAA;AACA,aAAA,OAAA;AACA;AACA,KAxBA;AAyBA,IAAA,IAzBA,kBAyBA;AACA,UAAA,KAAA,OAAA,GAAA,KAAA,QAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,aAAA,OAAA;AACA;AACA,KA7BA;AA8BA,IAAA,QA9BA,oBA8BA,KA9BA,EA8BA;AACA,aAAA,KAAA,KAAA,KAAA,OAAA;AACA,KAhCA;AAiCA,IAAA,eAjCA,2BAiCA,KAjCA,EAiCA;AACA,WAAA,gBAAA,CAAA,KAAA;AACA,WAAA,WAAA,GAAA,EAAA;AACA,WAAA,IAAA,GAAA,KAAA;AACA,KArCA;AAsCA,IAAA,gBAtCA,4BAsCA,KAtCA,EAsCA;AACA,WAAA,KAAA,CAAA,UAAA,EAAA,KAAA,QAAA,CAAA,KAAA,CAAA;AACA;AAxCA;AApCA,CAAA","sourcesContent":["<template>\n  <div class=\"autocomplete-text-input\">\n    <b-input-group>\n      <b-input-group-text slot=\"prepend\">\n        <i class=\"fa fa-search\"></i>\n      </b-input-group-text>\n      <b-form-input\n        type=\"text\"\n        :value=\"searchValue\"\n        :placeholder=\"placeholder\"\n        @input=\"updateSearchValue\"\n        @keydown.native.enter=\"enter\"\n        @keydown.native.down=\"down\"\n        @keydown.native.up=\"up\"\n      ></b-form-input>\n    </b-input-group>\n    <b-list-group class=\"autocomplete-suggestion-list\" v-if=\"open\">\n      <b-list-group-item\n        v-for=\"(suggestion, index) in filtered\"\n        v-bind:class=\"{ active: isActive(index) }\"\n        href=\"#\"\n        @click=\"suggestionClick(index)\"\n        v-bind:key=\"suggestion.id\"\n      >\n        <slot name=\"suggestion\" :suggestion=\"suggestion\">\n          {{ suggestion.name }}\n        </slot>\n      </b-list-group-item>\n    </b-list-group>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"autocomplete-text-input\",\n  props: {\n    suggestions: {\n      type: Array,\n      required: true,\n    },\n    placeholder: {\n      type: String,\n      default: \"Type to get suggestions...\",\n    },\n    maxMatches: {\n      type: Number,\n      default: 5,\n    },\n  },\n  data() {\n    return {\n      open: false,\n      current: 0,\n      searchValue: \"\",\n    };\n  },\n\n  computed: {\n    filtered() {\n      return this.suggestions\n        .filter((data) => {\n          // Case insensitive search\n          return (\n            data.name.toLowerCase().indexOf(this.searchValue.toLowerCase()) >= 0\n          );\n        })\n        .slice(0, this.maxMatches);\n    },\n  },\n  methods: {\n    updateSearchValue(value) {\n      if (this.open === false) {\n        this.open = true;\n        this.current = 0;\n      }\n      if (value === \"\") {\n        this.open = false;\n      }\n      this.searchValue = value;\n      this.$emit(\"search-changed\", value);\n    },\n    enter() {\n      if (this.filtered.length === 0) {\n        return;\n      }\n      this.emitSelectedItem(this.current);\n      this.searchValue = \"\";\n      this.open = false;\n    },\n    up() {\n      if (this.current > 0) {\n        this.current--;\n      }\n    },\n    down() {\n      if (this.current < this.filtered.length - 1) {\n        this.current++;\n      }\n    },\n    isActive(index) {\n      return index === this.current;\n    },\n    suggestionClick(index) {\n      this.emitSelectedItem(index);\n      this.searchValue = \"\";\n      this.open = false;\n    },\n    emitSelectedItem(index) {\n      this.$emit(\"selected\", this.filtered[index]);\n    },\n  },\n};\n</script>\n\n<style scoped>\n.autocomplete-text-input {\n  position: relative;\n}\n.autocomplete-suggestion-list {\n  width: 100%;\n  position: absolute;\n  z-index: 3;\n}\n</style>\n"],"sourceRoot":"../../static/common/js/components"}]}