{"remainingRequest":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/auth/node_modules/thread-loader/dist/cjs.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/auth/node_modules/babel-loader/lib/index.js!/home/vanishing/git/airavata-django-portal/django_airavata/apps/auth/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/vanishing/git/airavata-django-portal/django_airavata/apps/auth/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vanishing/git/airavata-django-portal/django_airavata/static/common/js/components/ValidatedForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/static/common/js/components/ValidatedForm.vue","mtime":1638641844579},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/auth/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/auth/node_modules/thread-loader/dist/cjs.js","mtime":1638646228889},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/auth/node_modules/babel-loader/lib/index.js","mtime":1638646261191},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/auth/node_modules/cache-loader/dist/cjs.js","mtime":1638646228487},{"path":"/home/vanishing/git/airavata-django-portal/django_airavata/apps/auth/node_modules/vue-loader/lib/index.js","mtime":1638646266152}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport ValidatedFormGroup from \"./ValidatedFormGroup\";\nexport default {\n  name: \"validated-form\",\n  props: {\n    items: {\n      type: Array,\n      required: true\n    }\n  },\n  components: {\n    ValidatedFormGroup: ValidatedFormGroup\n  },\n  data: function data() {\n    return {\n      invalidFormItems: [],\n      feedbackMessages: {}\n    };\n  },\n  computed: {\n    valid: function valid() {\n      return this.invalidFormItems.length === 0;\n    }\n  },\n  methods: {\n    setValid: function setValid(key) {\n      var wasValid = this.valid;\n\n      if (this.invalidFormItems.includes(key)) {\n        var index = this.invalidFormItems.indexOf(key);\n        this.invalidFormItems.splice(index, 1);\n      }\n\n      if (!wasValid && this.valid) {\n        this.$emit(\"valid\");\n      }\n    },\n    setInvalid: function setInvalid(key, messages) {\n      var wasValid = this.valid;\n\n      if (!this.invalidFormItems.includes(key)) {\n        this.invalidFormItems.push(key);\n      }\n\n      if (typeof messages === \"string\") {\n        this.feedbackMessages[key] = [messages];\n      } else {\n        this.feedbackMessages[key] = messages;\n      }\n\n      if (wasValid) {\n        this.$emit(\"invalid\");\n      }\n    },\n    isValid: function isValid(key) {\n      return !this.invalidFormItems.includes(key);\n    },\n    getFeedbackMessages: function getFeedbackMessages(key) {\n      if (key in this.feedbackMessages) {\n        return this.feedbackMessages[key];\n      } else {\n        return [];\n      }\n    }\n  }\n};",{"version":3,"sources":["ValidatedForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAqBA,OAAA,kBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,gBADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,QAAA,EAAA;AAFA;AADA,GAFA;AAQA,EAAA,UAAA,EAAA;AACA,IAAA,kBAAA,EAAA;AADA,GARA;AAWA,EAAA,IAXA,kBAWA;AACA,WAAA;AACA,MAAA,gBAAA,EAAA,EADA;AAEA,MAAA,gBAAA,EAAA;AAFA,KAAA;AAIA,GAhBA;AAiBA,EAAA,QAAA,EAAA;AACA,IAAA,KADA,mBACA;AACA,aAAA,KAAA,gBAAA,CAAA,MAAA,KAAA,CAAA;AACA;AAHA,GAjBA;AAsBA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,oBACA,GADA,EACA;AACA,UAAA,QAAA,GAAA,KAAA,KAAA;;AACA,UAAA,KAAA,gBAAA,CAAA,QAAA,CAAA,GAAA,CAAA,EAAA;AACA,YAAA,KAAA,GAAA,KAAA,gBAAA,CAAA,OAAA,CAAA,GAAA,CAAA;AACA,aAAA,gBAAA,CAAA,MAAA,CAAA,KAAA,EAAA,CAAA;AACA;;AACA,UAAA,CAAA,QAAA,IAAA,KAAA,KAAA,EAAA;AACA,aAAA,KAAA,CAAA,OAAA;AACA;AACA,KAVA;AAWA,IAAA,UAXA,sBAWA,GAXA,EAWA,QAXA,EAWA;AACA,UAAA,QAAA,GAAA,KAAA,KAAA;;AACA,UAAA,CAAA,KAAA,gBAAA,CAAA,QAAA,CAAA,GAAA,CAAA,EAAA;AACA,aAAA,gBAAA,CAAA,IAAA,CAAA,GAAA;AACA;;AACA,UAAA,OAAA,QAAA,KAAA,QAAA,EAAA;AACA,aAAA,gBAAA,CAAA,GAAA,IAAA,CAAA,QAAA,CAAA;AACA,OAFA,MAEA;AACA,aAAA,gBAAA,CAAA,GAAA,IAAA,QAAA;AACA;;AACA,UAAA,QAAA,EAAA;AACA,aAAA,KAAA,CAAA,SAAA;AACA;AACA,KAxBA;AAyBA,IAAA,OAzBA,mBAyBA,GAzBA,EAyBA;AACA,aAAA,CAAA,KAAA,gBAAA,CAAA,QAAA,CAAA,GAAA,CAAA;AACA,KA3BA;AA4BA,IAAA,mBA5BA,+BA4BA,GA5BA,EA4BA;AACA,UAAA,GAAA,IAAA,KAAA,gBAAA,EAAA;AACA,eAAA,KAAA,gBAAA,CAAA,GAAA,CAAA;AACA,OAFA,MAEA;AACA,eAAA,EAAA;AACA;AACA;AAlCA;AAtBA,CAAA","sourcesContent":["<template>\n  <b-form>\n    <template v-for=\"item in items\">\n      <validated-form-group\n        :label=\"item.label\"\n        :key=\"item.key\"\n        :valid=\"isValid(item.key)\"\n        :feedback-messages=\"getFeedbackMessages(item.key)\"\n        :description=\"item.description\"\n      >\n        <slot\n          :item=\"item.item\"\n          :valid=\"() => setValid(item.key)\"\n          :invalid=\"(messages) => setInvalid(item.key, messages)\"\n        />\n      </validated-form-group>\n    </template>\n  </b-form>\n</template>\n\n<script>\nimport ValidatedFormGroup from \"./ValidatedFormGroup\";\n\nexport default {\n  name: \"validated-form\",\n  props: {\n    items: {\n      type: Array,\n      required: true,\n    },\n  },\n  components: {\n    ValidatedFormGroup,\n  },\n  data() {\n    return {\n      invalidFormItems: [],\n      feedbackMessages: {},\n    };\n  },\n  computed: {\n    valid() {\n      return this.invalidFormItems.length === 0;\n    },\n  },\n  methods: {\n    setValid(key) {\n      const wasValid = this.valid;\n      if (this.invalidFormItems.includes(key)) {\n        const index = this.invalidFormItems.indexOf(key);\n        this.invalidFormItems.splice(index, 1);\n      }\n      if (!wasValid && this.valid) {\n        this.$emit(\"valid\");\n      }\n    },\n    setInvalid(key, messages) {\n      const wasValid = this.valid;\n      if (!this.invalidFormItems.includes(key)) {\n        this.invalidFormItems.push(key);\n      }\n      if (typeof messages === \"string\") {\n        this.feedbackMessages[key] = [messages];\n      } else {\n        this.feedbackMessages[key] = messages;\n      }\n      if (wasValid) {\n        this.$emit(\"invalid\");\n      }\n    },\n    isValid(key) {\n      return !this.invalidFormItems.includes(key);\n    },\n    getFeedbackMessages(key) {\n      if (key in this.feedbackMessages) {\n        return this.feedbackMessages[key];\n      } else {\n        return [];\n      }\n    },\n  },\n};\n</script>\n"],"sourceRoot":"../../static/common/js/components"}]}