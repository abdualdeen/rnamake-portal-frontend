{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./js/components/GatewayNoticesContainer.vue?5942","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/errors/UnhandledError.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/BaseEnum.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/BaseModel.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/LogRecord.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/errors/ErrorReporter.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/errors/UnhandledErrorDisplayList.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/errors/UnhandledErrorDispatcher.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/ParallelismType.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/CommandObject.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/SetEnvPaths.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/ApplicationDeploymentDescription.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/DataType.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/dependencies/BooleanExpressionEvaluator.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/validators/MaxLengthValidator.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/validators/MinLengthValidator.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/validators/RegularExpressionValidator.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/validators/ValidatorFactory.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/InputDataObjectType.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/OutputDataObjectType.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/ErrorModel.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/ExperimentState.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/ExperimentStatus.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/ProcessState.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/ProcessStatus.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/ComputationalResourceSchedulingModel.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/JobState.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/JobStatus.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/Job.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/TaskTypes.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/TaskState.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/TaskStatus.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/Task.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/ProcessWorkflow.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/ProcessModel.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/UserConfigurationData.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/Experiment.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/ApplicationInterfaceDefinition.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/ApplicationModule.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/BatchQueue.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/BatchQueueResourcePolicy.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/ComputeResourcePolicy.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/ComputeResourceReservation.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/DataReplicaLocation.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/DataProduct.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/ExperimentSearchFields.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/ComputeResourceDescription.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/Project.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/FullExperiment.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/Group.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/GroupComputeResourcePreference.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/ResourcePermissionType.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/GroupPermission.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/GroupResourceProfile.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/IAMUserProfile.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/NotificationPriority.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/Notification.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/UserStatus.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/UserProfile.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/UserPermission.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/SharedEntity.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/StoragePreference.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/SummaryType.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/WorkspacePreferences.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/utils/Cache.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/utils/FetchUtils.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/services/JobSubmissionService.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/services/CloudJobSubmissionService.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/services/GlobusJobSubmissionService.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/services/LocaJobSubmissionService.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/services/SshJobSubmissionService.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/services/UnicoreJobSubmissionService.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/services/DataMovementService.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/services/SCPDataMovementService.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/services/GridFTPDataMovementService.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/services/UnicoreDataMovementService.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/utils/PaginationIterator.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/CredentialSummary.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/ExperimentSummary.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/ExperimentStatistics.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/UserStorageDirectory.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/UserStorageFile.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/UserStoragePath.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/ExperimentStoragePath.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/GatewayResourceProfile.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/IOType.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/ParserInput.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/ParserOutput.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/Parser.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/Settings.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/StorageResourceDescription.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/UnverifiedEmailUserProfile.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/models/User.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/service_config.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/services/ServiceFactory.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/session/Session.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/utils/ExperimentUtils.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/utils/StringUtils.js","webpack:////home/vanishing/git/airavata-django-portal/django_airavata/apps/api/static/django_airavata_api/js/index.js","webpack:///js/components/GatewayNoticesContainer.vue","webpack:///./js/components/GatewayNoticesContainer.vue?8800","webpack:///./js/components/GatewayNoticesContainer.vue","webpack:///./js/notices.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","map","webpackContext","req","id","webpackContextResolve","e","Error","code","keys","resolve","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","unreadCount","staticStyle","_v","_l","notice","notificationId","class","textColor","_s","title","is_read","_e","on","$event","ackNotification","notificationMessage","fromNow","publishedTime","staticRenderFns","idSequence","UnhandledError","message","error","details","suppressDisplay","suppressLogging","createdDate","Date","BaseEnum","writeName","freeze","values","find","x","names","enums","index","forEach","v","BaseModel","fields","fieldDefinition","convertSimpleField","fieldName","fieldType","type","fieldIsList","list","fieldDefault","default","getDefaultValue","fieldValue","item","convertField","convertDateField","convertModelField","modelClass","enumValue","byName","byValue","trim","Array","constructor","classRef","FIELDS","LogRecord","ErrorReporter","unhandledError","console","log","JSON","stringify","StackTrace","fromError","then","stackframes","stacktrace","sf","toString","services","LoggingService","send","level","ignoreErrors","catch","err","UnhandledErrorDisplayList","unhandledErrors","indexOf","UnhandledErrorDispatcher","reportUnhandledError","UnhandledErrorList","add","ParallelismType","init","CommandObject","_key","uuidv4","SetEnvPaths","SERIAL","ApplicationDeploymentDescription","DataType","STRING","INTEGER","FLOAT","URI","URI_COLLECTION","STDOUT","STDERR","BooleanExpressionEvaluator","context","expression","evaluate","AND","k","exp","evaluations","reduce","acc","curr","contextValue","_evaluateComparison","comparisonDefinition","comparison","_getComparisonValue","MaxLengthValidator","config","maxLength","customErrorMessage","getErrorMessage","MinLengthValidator","minLength","RegularExpressionValidator","regex","RegExp","match","VALIDATOR_MAPPING","ValidatorFactory","validationsConfig","errorMessages","validation","validatorClass","validator","errorMessage","validate","Promise","IS_REQUIRED_DEFAULT","IS_REQUIRED_URI_COLLECTION","InputDataObjectType","show","metaData","undefined","inputValue","results","valueErrorMessages","isRequired","isEmpty","editorValidations","validatorFactory","concat","inputValues","editorDependencies","booleanExpressionEvaluator","showOptions","metadata","_getMetadata","VALID_DATA_TYPES","OutputDataObjectType","fileMetadata","ErrorModel","ExperimentState","progressingStates","SCHEDULED","LAUNCHED","EXECUTING","CANCELING","finishedStates","CANCELED","COMPLETED","FAILED","ExperimentStatus","state","isProgressing","isFinished","ProcessState","ProcessStatus","ComputationalResourceSchedulingModel","queueInfo","batchQueueResourcePolicy","validationResults","resourceHostId","queueName","nodeCount","maxAllowedNodes","maxNodes","totalCPUCount","maxAllowedCores","maxProcessors","wallTimeLimit","maxAllowedWalltime","maxRunTime","totalPhysicalMemory","maxMemory","JobState","JobStatus","Job","jobStatuses","latestJobStatus","jobState","timeOfStateChange","reason","TaskTypes","TaskState","TaskStatus","Task","taskStatuses","ProcessWorkflow","ProcessModel","tasksArrCopy","tasks","sort","a","b","aIndex","taskDagArray","findIndex","taskId","bIndex","taskDag","split","defaultNewInstance","UserConfigurationData","computationalResourceSchedulingValidation","computationalResourceScheduling","Experiment","evaluateInputDependencies","experimentName","projectId","applicationInterface","experimentInputs","applicationInputs","input","clone","experimentOutputs","applicationOutputs","_collectInputValues","evaluateDependencies","inputName","inp","outputName","out","experimentStatus","latestStatus","hasLaunchedStates","CREATED","userHasWriteAccess","VALIDATED","userConfigurationData","ApplicationInterfaceDefinition","stdout","stderr","experiment","populateInputsOutputsFromApplicationInterface","executionId","applicationInterfaceId","applicationModules","applicationName","ApplicationModule","BatchQueue","BatchQueueResourcePolicy","batchQueue","ComputeResourcePolicy","groupResourceProfileId","computeResourceId","allowedBatchQueues","currentTimeTopOfHour","setMinutes","setSeconds","setMilliseconds","ComputeResourceReservation","reservationName","startTime","endTime","queueNames","now","DataReplicaLocation","FILENAME_REGEX","TEXT_MIME_TYPE_REGEX","IMAGE_MIME_TYPE_REGEX","DataProduct","replicaLocations","firstReplicaLocation","fileURL","URL","filePath","filenameMatch","exec","pathname","mimeType","test","productMetadata","ExperimentSearchFields","ComputeResourceDescription","Project","FullExperiment","project","applicationModule","appModuleName","computeResource","hostName","Group","isReadOnlyGatewayAdminsGroup","isGatewayAdminsGroup","isOwner","isAdmin","GroupComputeResourcePreference","loginUserName","scratchLocation","ResourcePermissionType","GroupPermission","GroupResourceProfile","computePreferences","pref","computeResourcePolicies","pol","batchQueueResourcePolicies","filter","computeResourcePreference","computeResourcePolicy","existingComputeResourcePreference","assign","existingComputeResourcePolicy","existingBatchQueueResourcePolicies","existingBatchQueueResourcePolicy","queuename","existingBatchQueueResourcePolicyIndex","removedChildren","existingComputeResourcePreferenceIndex","existingComputeResourcePolicyIndex","IAMUserProfile","NotificationPriority","Notification","expirationTime","priority","UserStatus","UserProfile","emails","UserPermission","SharedEntity","user","userPermissions","up","airavataInternalUserId","permissionType","READ","userPermission","group","groupPermissions","gp","groupPermission","isAdminGroup","StoragePreference","SummaryType","WorkspacePreferences","DEFAULT_EXPIRATION_TIME_MS","CacheEntry","expireDate","_value","_expireDate","getTime","Cache","_cache","has","cacheEntry","isExpired","count","parseQueryParams","url","queryParams","encodeURIComponent","join","setSpinnerDisplay","display","spinner","document","getElementById","style","incrementCount","decrementCount","responseCache","showSpinner","promise","getCSRFToken","csrfToken","cookie","val","startsWith","createHeaders","contentType","accept","headers","Headers","Accept","set","post","body","mediaType","responseType","FormData","delete","processFetch","method","credentials","put","cache","fetchRequest","fetchConfig","fetch","response","ok","status","responseData","json","detail","createErrorDetails","responseBody","statusText","reportError","JobSubmissionService","retrieveUrl","FetchUtils","CloudJobSubmissionService","GlobusJobSubmissionService","LocaJobSubmissionService","SshJobSubmissionService","UnicoreJobSubmissionService","DataMovementService","SCPDataMovementService","GridFTPDataMovementService","UnicoreDataMovementService","PaginationIterator","pagedResponse","resultType","processResponse","_next","_previous","next","previous","isArray","offset","limit","hasNext","CredentialSummary","ExperimentSummary","statusUpdateTime","convertToExperiment","isEditable","ExperimentStatistics","UserStorageDirectory","UserStorageFile","UserStoragePath","ExperimentStoragePath","GatewayResourceProfile","IOType","ParserInput","ParserOutput","ParserInputFile","ParserOutputFile","Parser","Settings","StorageResourceDescription","UnverifiedEmailUserProfile","User","ApplicationDeployments","viewSet","methods","getQueues","requestType","ApplicationInterfaces","ApplicationModules","getApplicationInterface","getApplicationDeployments","listAll","favorite","unfavorite","ComputeResources","namesList","CredentialSummaries","allSSHCredentials","allPasswordCredentials","createSSH","bodyParams","createPassword","DataProducts","retrieve","lookup","Experiments","launch","cancel","ExperimentSearch","initialDataParam","pagination","f","ExperimentStoragePaths","encodePathParams","FullExperiments","update","GroupResourceProfiles","Groups","IAMUserProfiles","enable","LogRecords","Parsers","Projects","SharedEntities","merge","StoragePreferences","StorageResources","UnverifiedEmailUsers","Users","current","resendEmailVerification","verifyEmailChange","UserProfiles","UserStoragePaths","ManageNotifications","APIServerStatusCheck","postKey","getKey","putKey","delKey","parsePathParams","pathParamsRegEx","pathParamsMatch","pathParams","pathParamMatch","pathParam","replace","parseServiceMapping","serviceConfiguration","mappedFunctions","viewSetFunctions","endsWith","defaultPagination","viewSetFunction","viewSetFunctionName","methodName","methodConfig","parseQueryMapping","queryParamsMapping","newQueryParamMapping","queryParam","ServiceFactory","serviceConfigurations","parsedConfigurations","serviceName","TypeError","serviceObj","functionNames","functionName","toLowerCase","pathParamsMapping","params","paramKeys","initialData","paramKey","paginationHandler","resultHandler","Session","username","isGatewayAdmin","session","AiravataPortalSessionData","createExperiment","applicationId","computeResourceName","loadApplicationInterfaceById","loadApplicationInterfaceByApplicationModuleId","loadApplicationInterfaceByName","applicationModuleId","loadComputeResourceIdByName","loadGroupResourceProfile","groupResourceProfile","loadApplicationDeployments","deployments","deployment","computeHostId","loadQueue","queueDescription","loadWorkspacePreferences","workspacePreferences","most_recent_project_id","toLocaleString","dateStyle","timeStyle","defaultCPUCount","defaultNodeCount","defaultWalltime","ApplicationInterfaceService","applicationInterfaces","ai","ApplicationModuleService","ComputeResourceService","computeResourceNames","GroupResourceProfileService","groupResourceProfiles","grp","computePref","ApplicationDeploymentService","appModuleId","applicationDeployment","appDeploymentId","queues","queue","q","isDefaultQueue","WorkspacePreferencesService","loadExperiment","experimentId","ExperimentService","readDataProduct","dataProductURI","bodyType","readExperimentDataObject","dataType","dataObjectsField","dataObject","dataObj","isFileValueType","downloads","dp","all","readInputFile","readOutputFile","sortIgnoreCase","arr","keyFunction","localeCompare","APIServerStatusCheckService","service","CredentialSummaryService","DataProductService","ExperimentSearchService","ExperimentStatisticsService","ExperimentStoragePathService","FullExperimentService","GatewayResourceProfileService","GroupService","IAMUserProfileService","ManageNotificationService","ParserService","ProjectService","SettingsService","SharedEntityService","StoragePreferenceService","StorageResourceService","UnverifiedEmailUserProfileService","UserProfileService","UserService","UserStoragePathService","utils","ExperimentUtils","StringUtils","props","computed","unreadNotices","notices","component","Vue","render","h","GatewayNoticesContainer","beforeMount","parseInt","$el","dataset","parse","$mount"],"mappings":"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ACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,aAAc,OACd,UAAW,OACX,aAAc,OACd,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,UAAW,OACX,aAAc,OACd,UAAW,OACX,aAAc,OACd,UAAW,OACX,aAAc,OACd,UAAW,OACX,aAAc,OACd,UAAW,OACX,aAAc,OACd,UAAW,OACX,aAAc,OACd,UAAW,OACX,aAAc,OACd,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,aAAc,OACd,UAAW,OACX,aAAc,OACd,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,aAAc,OACd,UAAW,OACX,aAAc,OACd,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,aAAc,OACd,gBAAiB,OACjB,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,UAAW,OACX,aAAc,OACd,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,aAAc,OACd,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAA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","file":"js/notices.14e894dd.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"notices\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/static/common/dist/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([2,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","var map = {\n\t\"./af\": \"2bfb\",\n\t\"./af.js\": \"2bfb\",\n\t\"./ar\": \"8e73\",\n\t\"./ar-dz\": \"a356\",\n\t\"./ar-dz.js\": \"a356\",\n\t\"./ar-kw\": \"423e\",\n\t\"./ar-kw.js\": \"423e\",\n\t\"./ar-ly\": \"1cfd\",\n\t\"./ar-ly.js\": \"1cfd\",\n\t\"./ar-ma\": \"0a84\",\n\t\"./ar-ma.js\": \"0a84\",\n\t\"./ar-sa\": \"8230\",\n\t\"./ar-sa.js\": \"8230\",\n\t\"./ar-tn\": \"6d83\",\n\t\"./ar-tn.js\": \"6d83\",\n\t\"./ar.js\": \"8e73\",\n\t\"./az\": \"485c\",\n\t\"./az.js\": \"485c\",\n\t\"./be\": \"1fc1\",\n\t\"./be.js\": \"1fc1\",\n\t\"./bg\": \"84aa\",\n\t\"./bg.js\": \"84aa\",\n\t\"./bm\": \"a7fa\",\n\t\"./bm.js\": \"a7fa\",\n\t\"./bn\": \"9043\",\n\t\"./bn.js\": \"9043\",\n\t\"./bo\": \"d26a\",\n\t\"./bo.js\": \"d26a\",\n\t\"./br\": \"6887\",\n\t\"./br.js\": \"6887\",\n\t\"./bs\": \"2554\",\n\t\"./bs.js\": \"2554\",\n\t\"./ca\": \"d716\",\n\t\"./ca.js\": \"d716\",\n\t\"./cs\": \"3c0d\",\n\t\"./cs.js\": \"3c0d\",\n\t\"./cv\": \"03ec\",\n\t\"./cv.js\": \"03ec\",\n\t\"./cy\": \"9797\",\n\t\"./cy.js\": \"9797\",\n\t\"./da\": \"0f14\",\n\t\"./da.js\": \"0f14\",\n\t\"./de\": \"b469\",\n\t\"./de-at\": \"b3eb\",\n\t\"./de-at.js\": \"b3eb\",\n\t\"./de-ch\": \"bb71\",\n\t\"./de-ch.js\": \"bb71\",\n\t\"./de.js\": \"b469\",\n\t\"./dv\": \"598a\",\n\t\"./dv.js\": \"598a\",\n\t\"./el\": \"8d47\",\n\t\"./el.js\": \"8d47\",\n\t\"./en-SG\": \"cdab\",\n\t\"./en-SG.js\": \"cdab\",\n\t\"./en-au\": \"0e6b\",\n\t\"./en-au.js\": \"0e6b\",\n\t\"./en-ca\": \"3886\",\n\t\"./en-ca.js\": \"3886\",\n\t\"./en-gb\": \"39a6\",\n\t\"./en-gb.js\": \"39a6\",\n\t\"./en-ie\": \"e1d3\",\n\t\"./en-ie.js\": \"e1d3\",\n\t\"./en-il\": \"7333\",\n\t\"./en-il.js\": \"7333\",\n\t\"./en-nz\": \"6f50\",\n\t\"./en-nz.js\": \"6f50\",\n\t\"./eo\": \"65db\",\n\t\"./eo.js\": \"65db\",\n\t\"./es\": \"898b\",\n\t\"./es-do\": \"0a3c\",\n\t\"./es-do.js\": \"0a3c\",\n\t\"./es-us\": \"55c9\",\n\t\"./es-us.js\": \"55c9\",\n\t\"./es.js\": \"898b\",\n\t\"./et\": \"ec18\",\n\t\"./et.js\": \"ec18\",\n\t\"./eu\": \"0ff2\",\n\t\"./eu.js\": \"0ff2\",\n\t\"./fa\": \"8df4\",\n\t\"./fa.js\": \"8df4\",\n\t\"./fi\": \"81e9\",\n\t\"./fi.js\": \"81e9\",\n\t\"./fo\": \"0721\",\n\t\"./fo.js\": \"0721\",\n\t\"./fr\": \"9f26\",\n\t\"./fr-ca\": \"d9f8\",\n\t\"./fr-ca.js\": \"d9f8\",\n\t\"./fr-ch\": \"0e49\",\n\t\"./fr-ch.js\": \"0e49\",\n\t\"./fr.js\": \"9f26\",\n\t\"./fy\": \"7118\",\n\t\"./fy.js\": \"7118\",\n\t\"./ga\": \"5120\",\n\t\"./ga.js\": \"5120\",\n\t\"./gd\": \"f6b4\",\n\t\"./gd.js\": \"f6b4\",\n\t\"./gl\": \"8840\",\n\t\"./gl.js\": \"8840\",\n\t\"./gom-latn\": \"0caa\",\n\t\"./gom-latn.js\": \"0caa\",\n\t\"./gu\": \"e0c5\",\n\t\"./gu.js\": \"e0c5\",\n\t\"./he\": \"c7aa\",\n\t\"./he.js\": \"c7aa\",\n\t\"./hi\": \"dc4d\",\n\t\"./hi.js\": \"dc4d\",\n\t\"./hr\": \"4ba9\",\n\t\"./hr.js\": \"4ba9\",\n\t\"./hu\": \"5b14\",\n\t\"./hu.js\": \"5b14\",\n\t\"./hy-am\": \"d6b6\",\n\t\"./hy-am.js\": \"d6b6\",\n\t\"./id\": \"5038\",\n\t\"./id.js\": \"5038\",\n\t\"./is\": \"0558\",\n\t\"./is.js\": \"0558\",\n\t\"./it\": \"6e98\",\n\t\"./it-ch\": \"6f12\",\n\t\"./it-ch.js\": \"6f12\",\n\t\"./it.js\": \"6e98\",\n\t\"./ja\": \"079e\",\n\t\"./ja.js\": \"079e\",\n\t\"./jv\": \"b540\",\n\t\"./jv.js\": \"b540\",\n\t\"./ka\": \"201b\",\n\t\"./ka.js\": \"201b\",\n\t\"./kk\": \"6d79\",\n\t\"./kk.js\": \"6d79\",\n\t\"./km\": \"e81d\",\n\t\"./km.js\": \"e81d\",\n\t\"./kn\": \"3e92\",\n\t\"./kn.js\": \"3e92\",\n\t\"./ko\": \"22f8\",\n\t\"./ko.js\": \"22f8\",\n\t\"./ku\": \"2421\",\n\t\"./ku.js\": \"2421\",\n\t\"./ky\": \"9609\",\n\t\"./ky.js\": \"9609\",\n\t\"./lb\": \"440c\",\n\t\"./lb.js\": \"440c\",\n\t\"./lo\": \"b29d\",\n\t\"./lo.js\": \"b29d\",\n\t\"./lt\": \"26f9\",\n\t\"./lt.js\": \"26f9\",\n\t\"./lv\": \"b97c\",\n\t\"./lv.js\": \"b97c\",\n\t\"./me\": \"293c\",\n\t\"./me.js\": \"293c\",\n\t\"./mi\": \"688b\",\n\t\"./mi.js\": \"688b\",\n\t\"./mk\": \"6909\",\n\t\"./mk.js\": \"6909\",\n\t\"./ml\": \"02fb\",\n\t\"./ml.js\": \"02fb\",\n\t\"./mn\": \"958b\",\n\t\"./mn.js\": \"958b\",\n\t\"./mr\": \"39bd\",\n\t\"./mr.js\": \"39bd\",\n\t\"./ms\": \"ebe4\",\n\t\"./ms-my\": \"6403\",\n\t\"./ms-my.js\": \"6403\",\n\t\"./ms.js\": \"ebe4\",\n\t\"./mt\": \"1b45\",\n\t\"./mt.js\": \"1b45\",\n\t\"./my\": \"8689\",\n\t\"./my.js\": \"8689\",\n\t\"./nb\": \"6ce3\",\n\t\"./nb.js\": \"6ce3\",\n\t\"./ne\": \"3a39\",\n\t\"./ne.js\": \"3a39\",\n\t\"./nl\": \"facd\",\n\t\"./nl-be\": \"db29\",\n\t\"./nl-be.js\": \"db29\",\n\t\"./nl.js\": \"facd\",\n\t\"./nn\": \"b84c\",\n\t\"./nn.js\": \"b84c\",\n\t\"./pa-in\": \"f3ff\",\n\t\"./pa-in.js\": \"f3ff\",\n\t\"./pl\": \"8d57\",\n\t\"./pl.js\": \"8d57\",\n\t\"./pt\": \"f260\",\n\t\"./pt-br\": \"d2d4\",\n\t\"./pt-br.js\": \"d2d4\",\n\t\"./pt.js\": \"f260\",\n\t\"./ro\": \"972c\",\n\t\"./ro.js\": \"972c\",\n\t\"./ru\": \"957c\",\n\t\"./ru.js\": \"957c\",\n\t\"./sd\": \"6784\",\n\t\"./sd.js\": \"6784\",\n\t\"./se\": \"ffff\",\n\t\"./se.js\": \"ffff\",\n\t\"./si\": \"eda5\",\n\t\"./si.js\": \"eda5\",\n\t\"./sk\": \"7be6\",\n\t\"./sk.js\": \"7be6\",\n\t\"./sl\": \"8155\",\n\t\"./sl.js\": \"8155\",\n\t\"./sq\": \"c8f3\",\n\t\"./sq.js\": \"c8f3\",\n\t\"./sr\": \"cf1e\",\n\t\"./sr-cyrl\": \"13e9\",\n\t\"./sr-cyrl.js\": \"13e9\",\n\t\"./sr.js\": \"cf1e\",\n\t\"./ss\": \"52bd\",\n\t\"./ss.js\": \"52bd\",\n\t\"./sv\": \"5fbd\",\n\t\"./sv.js\": \"5fbd\",\n\t\"./sw\": \"74dc\",\n\t\"./sw.js\": \"74dc\",\n\t\"./ta\": \"3de5\",\n\t\"./ta.js\": \"3de5\",\n\t\"./te\": \"5cbb\",\n\t\"./te.js\": \"5cbb\",\n\t\"./tet\": \"576c\",\n\t\"./tet.js\": \"576c\",\n\t\"./tg\": \"3b1b\",\n\t\"./tg.js\": \"3b1b\",\n\t\"./th\": \"10e8\",\n\t\"./th.js\": \"10e8\",\n\t\"./tl-ph\": \"0f38\",\n\t\"./tl-ph.js\": \"0f38\",\n\t\"./tlh\": \"cf75\",\n\t\"./tlh.js\": \"cf75\",\n\t\"./tr\": \"0e81\",\n\t\"./tr.js\": \"0e81\",\n\t\"./tzl\": \"cf51\",\n\t\"./tzl.js\": \"cf51\",\n\t\"./tzm\": \"c109\",\n\t\"./tzm-latn\": \"b53d\",\n\t\"./tzm-latn.js\": \"b53d\",\n\t\"./tzm.js\": \"c109\",\n\t\"./ug-cn\": \"6117\",\n\t\"./ug-cn.js\": \"6117\",\n\t\"./uk\": \"ada2\",\n\t\"./uk.js\": \"ada2\",\n\t\"./ur\": \"5294\",\n\t\"./ur.js\": \"5294\",\n\t\"./uz\": \"2e8c\",\n\t\"./uz-latn\": \"010e\",\n\t\"./uz-latn.js\": \"010e\",\n\t\"./uz.js\": \"2e8c\",\n\t\"./vi\": \"2921\",\n\t\"./vi.js\": \"2921\",\n\t\"./x-pseudo\": \"fd7e\",\n\t\"./x-pseudo.js\": \"fd7e\",\n\t\"./yo\": \"7f33\",\n\t\"./yo.js\": \"7f33\",\n\t\"./zh-cn\": \"5c3a\",\n\t\"./zh-cn.js\": \"5c3a\",\n\t\"./zh-hk\": \"49ab\",\n\t\"./zh-hk.js\": \"49ab\",\n\t\"./zh-tw\": \"90ea\",\n\t\"./zh-tw.js\": \"90ea\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"4678\";","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"btn-group ml-3\"},[_c('div',{staticClass:\"dropdown\"},[_c('a',{staticClass:\"dropdown-toggle text-dark\",attrs:{\"href\":\"#\",\"id\":\"dropdownNoticeButton\",\"data-toggle\":\"dropdown\",\"title\":\"Notifications\",\"aria-haspopup\":\"true\",\"aria-expanded\":\"false\"}},[_c('span',{staticClass:\"fa-stack fa-1x has-badge\",attrs:{\"data-count\":_vm.unreadCount,\"id\":\"unread_notification_count\"}},[_c('i',{staticClass:\"fa fa-circle fa-stack-2x fa-inverse\"}),_c('i',{staticClass:\"fa fa-bell fa-stack-1x\"})])]),_c('div',{staticClass:\"dropdown-menu widget-notifications no-padding\",staticStyle:{\"width\":\"300px\"}},[_c('div',{staticClass:\"notifications-list\"},[_c('div',{staticClass:\"text-center text-primary\"},[_vm._v(\"Notifications\")]),_vm._l((_vm.unreadNotices),function(notice){return [_c('div',{key:notice.notificationId,staticClass:\"dropdown-divider\"}),_c('div',{key:notice.notificationId,staticClass:\"dropdown-item\"},[_c('div',[_c('span',{staticClass:\"notification-title text-wrap\",class:_vm.textColor(notice)},[_vm._v(_vm._s(notice.title))]),(!notice.is_read)?_c('a',{staticClass:\"fas fa-dot-circle\",attrs:{\"data-toggle\":\"tooltip\",\"data-placement\":\"left\",\"title\":\"Mark as read\",\"id\":notice.notificationId},on:{\"click\":function($event){return _vm.ackNotification(notice)}}}):_vm._e()]),_c('div',{staticClass:\"notification-description text-wrap\",attrs:{\"id\":\"notification_description\"}},[_c('strong',[_vm._v(_vm._s(notice.notificationMessage))])]),_c('div',{staticClass:\"notification-ago time\"},[_vm._v(\"\\n              \"+_vm._s(_vm.fromNow(notice.publishedTime))+\"\\n            \")])])]})],2)])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","let idSequence = 0;\nclass UnhandledError {\n  constructor({\n    message = null,\n    error = null,\n    details = null,\n    suppressDisplay = false,\n    suppressLogging = false,\n  }) {\n    this.id = idSequence++;\n    this.message = message;\n    this.error = error;\n    this.details = details;\n    this.suppressDisplay = suppressDisplay;\n    this.suppressLogging = suppressLogging;\n    this.createdDate = new Date();\n  }\n}\n\nexport default UnhandledError;\n","export default class BaseEnum {\n  // TODO: add parameter\n  constructor(name, value, writeName = false) {\n    this.name = name;\n    this.value = value;\n    this.writeName = writeName;\n    // immutable\n    Object.freeze(this);\n  }\n  toJSON() {\n    return this.writeName ? this.name : this.value;\n  }\n  static byName(name) {\n    return this.values.find((x) => x.name === name);\n  }\n  static byValue(value) {\n    return this.values.find((x) => x.value === value);\n  }\n  // This must be called to initialize static methods on the Enum subclass\n  static init(names, writeName = false) {\n    const enums = names.map((name, index) => new this(name, index, writeName));\n    Object.freeze(enums);\n    Object.defineProperty(this, \"values\", {\n      get: function () {\n        return enums;\n      },\n    });\n    this.values.forEach((v) => (this[v.name] = v));\n  }\n}\n","import BaseEnum from \"./BaseEnum\";\n\nexport default class BaseModel {\n  /**\n   * Create and optionally populate fields of a model instance.\n   * - fields: an Array of field definitions. Each field definition can either\n   *   be just the name of the field as a string, or an object with the\n   *   following properties:\n   *   - name (required)\n   *   - type (required: one of 'string', 'boolean', 'number', 'date', or a class reference)\n   *   - list (optional, boolean)\n   *   - default (optional, the default value to be used, if not specified then null is used)\n   * - data: a data object, typically a deserialized JSON response\n   */\n  constructor(fields, data = {}) {\n    fields.forEach((fieldDefinition) => {\n      if (typeof fieldDefinition === \"string\") {\n        this[fieldDefinition] = this.convertSimpleField(\n          data[fieldDefinition],\n          null\n        );\n      } else {\n        // fieldDefinition must be an object\n        let fieldName = fieldDefinition.name;\n        let fieldType = fieldDefinition.type;\n        let fieldIsList =\n          typeof fieldDefinition.list !== \"undefined\"\n            ? fieldDefinition.list\n            : false;\n        let fieldDefault =\n          typeof fieldDefinition.default !== \"undefined\"\n            ? this.getDefaultValue(fieldDefinition.default)\n            : null;\n        let fieldValue = data[fieldName];\n        if (fieldIsList) {\n          this[fieldName] = fieldValue\n            ? fieldValue.map((item) =>\n                this.convertField(fieldType, item, fieldDefault)\n              )\n            : fieldDefault;\n        } else {\n          this[fieldName] = this.convertField(\n            fieldType,\n            fieldValue,\n            fieldDefault\n          );\n        }\n      }\n    });\n  }\n\n  convertField(fieldType, fieldValue, fieldDefault) {\n    if (fieldValue === null || typeof fieldValue === \"undefined\") {\n      return fieldDefault;\n    } else if (\n      fieldType === \"string\" ||\n      fieldType === \"boolean\" ||\n      fieldType === \"number\"\n    ) {\n      return this.convertSimpleField(fieldValue, fieldDefault);\n    } else if (fieldType === \"date\") {\n      return this.convertDateField(fieldValue, fieldDefault);\n    } else if (typeof fieldType === \"function\") {\n      // Assume that it is another BaseModel class\n      return this.convertModelField(fieldType, fieldValue, fieldDefault);\n    }\n  }\n\n  convertSimpleField(fieldValue, fieldDefault) {\n    return typeof fieldValue !== \"undefined\" ? fieldValue : fieldDefault;\n  }\n\n  convertDateField(fieldValue, fieldDefault) {\n    return typeof fieldValue !== \"undefined\"\n      ? new Date(fieldValue)\n      : fieldDefault;\n  }\n\n  convertModelField(modelClass, fieldValue, fieldDefault) {\n    if (typeof fieldValue !== \"undefined\") {\n      if (modelClass.prototype instanceof BaseEnum) {\n        // When cloning the fieldValue is an enum instance\n        if (fieldValue instanceof BaseEnum) {\n          return fieldValue;\n        }\n        let enumValue = null;\n        if (typeof fieldValue === \"string\") {\n          // convert by name if type is string\n          enumValue = modelClass.byName(fieldValue);\n        } else {\n          // Otherwise it is an integer that we need to convert to enum\n          enumValue = modelClass.byValue(fieldValue);\n        }\n        if (!enumValue) {\n          // enum wasn't found, construct an enum instance from the value\n          return new BaseEnum(`Unknown value: ${fieldValue}`, fieldValue);\n        } else {\n          return enumValue;\n        }\n      } else if (fieldValue instanceof modelClass) {\n        // No conversion necessary, just return the fieldValue\n        return fieldValue;\n      } else {\n        return new modelClass(fieldValue);\n      }\n    }\n    return fieldDefault;\n  }\n\n  getDefaultValue(fieldDefault) {\n    if (typeof fieldDefault === \"function\") {\n      return fieldDefault();\n    } else {\n      return fieldDefault;\n    }\n  }\n\n  static defaultNewInstance(classRef) {\n    return () => new classRef();\n  }\n\n  /**\n   * Override to provide validation. If there are validation errors this\n   * method should return a dictionary where keys are property names and\n   * values are an array of error messages.\n   */\n  validate() {\n    return null;\n  }\n\n  isEmpty(value) {\n    return (\n      value === null ||\n      (typeof value === \"string\" && value.trim() === \"\") ||\n      (value instanceof Array && value.length === 0)\n    );\n  }\n\n  /**\n   * Return a fully deep cloned instance of this instance.\n   */\n  clone() {\n    return new this.constructor(this);\n  }\n}\n","import BaseModel from \"./BaseModel\";\n\nconst FIELDS = [\n  \"level\",\n  \"message\",\n  \"details\",\n  {\n    name: \"stacktrace\",\n    type: \"string\",\n    list: true,\n  },\n];\n\nexport default class LogRecord extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n  }\n}\n","import { services } from \"..\";\nimport LogRecord from \"../models/LogRecord\";\n\nimport StackTrace from \"stacktrace-js\";\n\nclass ErrorReporter {\n  reportUnhandledError(unhandledError) {\n    console.log(JSON.stringify(unhandledError, null, 4)); // eslint-disable-line no-console\n\n    StackTrace.fromError(unhandledError.error)\n      .then((stackframes) => {\n        const stacktrace = stackframes.map((sf) => sf.toString());\n        services.LoggingService.send(\n          {\n            data: new LogRecord({\n              level: \"ERROR\",\n              message: unhandledError.message,\n              details: unhandledError.details,\n              stacktrace: stacktrace,\n            }),\n          },\n          { ignoreErrors: true }\n        ).catch((err) => {\n          console.log(\"Failed to log error\", err); // eslint-disable-line no-console\n        });\n      })\n      .catch((err) => {\n        console.log(\"Failed to produce stacktrace\", err); // eslint-disable-line no-console\n      });\n  }\n}\n\nexport default new ErrorReporter();\n","class UnhandledErrorDisplayList {\n  constructor() {\n    this.unhandledErrors = [];\n  }\n\n  add(unhandledError) {\n    this.unhandledErrors.push(unhandledError);\n  }\n\n  remove(unhandledError) {\n    const i = this.unhandledErrors.indexOf(unhandledError);\n    this.unhandledErrors.splice(i, 1);\n  }\n\n  get list() {\n    return this.unhandledErrors;\n  }\n}\n\nexport default new UnhandledErrorDisplayList();\n","import ErrorReporter from \"./ErrorReporter\";\nimport UnhandledError from \"./UnhandledError\";\nimport UnhandledErrorList from \"./UnhandledErrorDisplayList\";\n\nclass UnhandledErrorDispatcher {\n  reportError({\n    message = null,\n    error = null,\n    details = null,\n    suppressDisplay = false,\n    suppressLogging = false,\n  }) {\n    const unhandledError = new UnhandledError({\n      message,\n      error,\n      details,\n      suppressDisplay,\n      suppressLogging,\n    });\n    this.reportUnhandledError(unhandledError);\n  }\n\n  reportUnhandledError(unhandledError) {\n    if (!unhandledError.suppressDisplay) {\n      UnhandledErrorList.add(unhandledError);\n    }\n    if (!unhandledError.suppressLogging) {\n      ErrorReporter.reportUnhandledError(unhandledError);\n    }\n  }\n}\n\nexport default new UnhandledErrorDispatcher();\n","import BaseEnum from \"./BaseEnum\";\n\nexport default class ParallelismType extends BaseEnum {}\nParallelismType.init([\n  \"SERIAL\",\n  \"MPI\",\n  \"OPENMP\",\n  \"OPENMP_MPI\",\n  \"CCM\",\n  \"CRAY_MPI\",\n]);\n","import BaseModel from \"./BaseModel\";\nimport uuidv4 from \"uuid/v4\";\n\nconst FIELDS = [\"command\", \"commandOrder\"];\n\nexport default class CommandObject extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n    this._key = data.key ? data.key : uuidv4();\n  }\n\n  get key() {\n    return this._key;\n  }\n}\n","import BaseModel from \"./BaseModel\";\nimport uuidv4 from \"uuid/v4\";\n\nconst FIELDS = [\"name\", \"value\", \"envPathOrder\"];\n\nexport default class SetEnvPaths extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n    this._key = data.key ? data.key : uuidv4();\n  }\n\n  get key() {\n    return this._key;\n  }\n}\n","import BaseModel from \"./BaseModel\";\nimport ParallelismType from \"./ParallelismType\";\nimport CommandObject from \"./CommandObject\";\nimport SetEnvPaths from \"./SetEnvPaths\";\n\nconst FIELDS = [\n  \"appDeploymentId\",\n  \"appModuleId\",\n  \"computeHostId\",\n  \"executablePath\",\n  {\n    name: \"parallelism\",\n    type: ParallelismType,\n    default: ParallelismType.SERIAL,\n  },\n  \"appDeploymentDescription\",\n  {\n    name: \"moduleLoadCmds\",\n    type: CommandObject,\n    list: true,\n  },\n  {\n    name: \"libPrependPaths\",\n    type: SetEnvPaths,\n    list: true,\n  },\n  {\n    name: \"libAppendPaths\",\n    type: SetEnvPaths,\n    list: true,\n  },\n  {\n    name: \"setEnvironment\",\n    type: SetEnvPaths,\n    list: true,\n  },\n  {\n    name: \"preJobCommands\",\n    type: CommandObject,\n    list: true,\n  },\n  {\n    name: \"postJobCommands\",\n    type: CommandObject,\n    list: true,\n  },\n  \"defaultQueueName\",\n  \"defaultNodeCount\",\n  \"defaultCPUCount\",\n  \"defaultWalltime\",\n  {\n    name: \"editableByUser\",\n    type: \"boolean\",\n    default: false,\n  },\n  \"userHasWriteAccess\",\n];\n\nexport default class ApplicationDeploymentDescription extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n  }\n}\n","import BaseEnum from \"./BaseEnum\";\n\nexport default class DataType extends BaseEnum {\n  get isSimpleValueType() {\n    return (\n      [DataType.STRING, DataType.INTEGER, DataType.FLOAT].indexOf(this) >= 0\n    );\n  }\n  get isFileValueType() {\n    return (\n      [\n        DataType.URI,\n        DataType.URI_COLLECTION,\n        DataType.STDOUT,\n        DataType.STDERR,\n      ].indexOf(this) >= 0\n    );\n  }\n}\nDataType.init([\n  \"STRING\",\n  \"INTEGER\",\n  \"FLOAT\",\n  \"URI\",\n  \"URI_COLLECTION\",\n  \"STDOUT\",\n  \"STDERR\",\n]);\n","export default class BooleanExpressionEvaluator {\n  /**\n   * Context to use for looking up values of variables in expressions.\n   * @param {object} context\n   */\n  constructor(context) {\n    this.context = context;\n  }\n  /**\n   * Evaluates boolean expression and returns boolean result.\n   * @param {object} expression\n   */\n  evaluate(expression) {\n    const keys = Object.keys(expression);\n    if (keys.length > 1) {\n      // Implicitly AND together several expressions\n      return this.evaluate({\n        AND: keys.map((k) => {\n          const exp = {};\n          exp[k] = expression[k];\n          return exp;\n        }),\n      });\n    }\n    if (keys.length < 1) {\n      throw new Error(\n        \"Expression does not contain a key: \" + JSON.stringify(expression)\n      );\n    }\n\n    const key = keys[0];\n    const value = expression[key];\n    if (key === \"AND\") {\n      if (value instanceof Array) {\n        const evaluations = value.map((exp) => this.evaluate(exp));\n        return evaluations.reduce((acc, curr) => acc && curr);\n      } else {\n        throw new Error(\n          \"Unrecognized operand value for AND: \" + JSON.stringify(value)\n        );\n      }\n    } else if (key === \"OR\") {\n      if (value instanceof Array) {\n        const evaluations = value.map((exp) => this.evaluate(exp));\n        return evaluations.reduce((acc, curr) => acc || curr);\n      } else {\n        throw new Error(\n          \"Unrecognized operand value for OR: \" + JSON.stringify(value)\n        );\n      }\n    } else if (key === \"NOT\") {\n      if (typeof value === \"object\" && !(value instanceof Array)) {\n        return !this.evaluate(value);\n      } else {\n        throw new Error(\n          \"Unrecognized operand value for NOT: \" + JSON.stringify(value)\n        );\n      }\n    }\n\n    if (typeof value === \"object\") {\n      if (!(key in this.context)) {\n        throw new Error(\n          \"Missing context value for expression \" +\n            JSON.stringify(expression) +\n            \" in context \" +\n            JSON.stringify(this.context)\n        );\n      }\n      const contextValue = this.context[key];\n      return this._evaluateComparison(contextValue, value);\n    }\n  }\n\n  _evaluateComparison(value, comparisonDefinition) {\n    const comparison = comparisonDefinition[\"comparison\"];\n    if (!comparison) {\n      throw new Error(\n        \"Expression definition is missing 'comparison' property: \" +\n          JSON.stringify(comparisonDefinition)\n      );\n    }\n    if (comparison === \"equals\") {\n      return value === this._getComparisonValue(comparisonDefinition);\n    }\n    throw new Error(\"Unrecognized comparison \" + JSON.stringify(comparison));\n  }\n\n  _getComparisonValue(comparisonDefinition) {\n    if (!(\"value\" in comparisonDefinition)) {\n      throw new Error(\n        \"Missing required 'value' property in comparison definition: \" +\n          JSON.stringify(comparisonDefinition)\n      );\n    }\n    return comparisonDefinition[\"value\"];\n  }\n}\n","export default class MaxLengthValidator {\n  constructor(config) {\n    this.maxLength = config[\"value\"];\n    if (\"message\" in config) {\n      this.customErrorMessage = config[\"message\"];\n    }\n  }\n\n  validate(value) {\n    if (value === null || typeof value === \"undefined\") {\n      return null;\n    }\n    if (typeof value !== \"string\") {\n      value = value.toString();\n    }\n    if (value.length > this.maxLength) {\n      return this.getErrorMessage(value);\n    }\n    return null;\n  }\n\n  getErrorMessage() {\n    if (this.customErrorMessage) {\n      return this.customErrorMessage;\n    } else {\n      return (\n        \"The value must be less than or equal to \" +\n        this.maxLength +\n        \" characters in length.\"\n      );\n    }\n  }\n}\n","export default class MinLengthValidator {\n  constructor(config) {\n    this.minLength = config[\"value\"];\n    if (\"message\" in config) {\n      this.customErrorMessage = config[\"message\"];\n    }\n  }\n\n  validate(value) {\n    if (value === null || typeof value === \"undefined\") {\n      return this.getErrorMessage(value);\n    }\n    if (typeof value !== \"string\") {\n      value = value.toString();\n    }\n    if (value.length < this.minLength) {\n      return this.getErrorMessage(value);\n    }\n    return null;\n  }\n\n  getErrorMessage() {\n    if (this.customErrorMessage) {\n      return this.customErrorMessage;\n    } else {\n      return (\n        \"The value must be at least \" +\n        this.minLength +\n        \" characters in length.\"\n      );\n    }\n  }\n}\n","export default class RegularExpressionValidator {\n  constructor(config) {\n    this.regex = new RegExp(config[\"value\"]);\n    if (\"message\" in config) {\n      this.customErrorMessage = config[\"message\"];\n    }\n  }\n\n  validate(value) {\n    if (value === null || typeof value === \"undefined\") {\n      return null;\n    }\n    if (typeof value !== \"string\") {\n      value = value.toString();\n    }\n    if (!value.match(this.regex)) {\n      return this.getErrorMessage(value);\n    }\n    return null;\n  }\n\n  getErrorMessage() {\n    if (this.customErrorMessage) {\n      return this.customErrorMessage;\n    } else {\n      return \"The value must match the regular expression \" + this.regex;\n    }\n  }\n}\n","import MaxLengthValidator from \"./MaxLengthValidator\";\nimport MinLengthValidator from \"./MinLengthValidator\";\nimport RegularExpressionValidator from \"./RegularExpressionValidator\";\n\nconst VALIDATOR_MAPPING = {\n  \"max-length\": MaxLengthValidator,\n  \"min-length\": MinLengthValidator,\n  regex: RegularExpressionValidator,\n};\nexport default class ValidatorFactory {\n  validate(validationsConfig, value) {\n    const errorMessages = [];\n    validationsConfig.forEach((validation) => {\n      let validatorClass = VALIDATOR_MAPPING[validation.type];\n      let validator = new validatorClass(validation);\n      let errorMessage = validator.validate(value);\n      if (errorMessage !== null) {\n        errorMessages.push(Promise.resolve(errorMessage));\n      }\n    });\n    return errorMessages;\n  }\n}\n","import BaseModel from \"./BaseModel\";\nimport DataType from \"./DataType\";\nimport BooleanExpressionEvaluator from \"./dependencies/BooleanExpressionEvaluator\";\nimport uuidv4 from \"uuid/v4\";\nimport ValidatorFactory from \"./validators/ValidatorFactory\";\n\nconst FIELDS = [\n  \"name\",\n  \"value\",\n  {\n    name: \"type\",\n    type: DataType,\n    default: DataType.STRING,\n  },\n  \"applicationArgument\",\n  {\n    name: \"standardInput\",\n    type: \"boolean\",\n    default: false,\n  },\n  \"userFriendlyDescription\",\n  \"metaData\",\n  \"inputOrder\",\n  {\n    name: \"isRequired\",\n    type: \"boolean\",\n    default: false,\n  },\n  {\n    name: \"requiredToAddedToCommandLine\",\n    type: \"boolean\",\n    default: false,\n  },\n  {\n    name: \"dataStaged\",\n    type: \"boolean\",\n    default: false,\n  },\n  \"storageResourceId\",\n  {\n    name: \"isReadOnly\",\n    type: \"boolean\",\n    default: false,\n  },\n  \"overrideFilename\",\n];\n\nconst IS_REQUIRED_DEFAULT = \"This field is required.\";\nconst IS_REQUIRED_URI_COLLECTION = \"At least one file must be selected.\";\n\nexport default class InputDataObjectType extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n    this._key = data.key ? data.key : uuidv4();\n    this.show = true;\n  }\n\n  get key() {\n    return this._key;\n  }\n\n  /**\n   * Get the UI component id for the editor component to use for this input.\n   * Returns null if there is no editor UI component id.\n   *\n   * The expected JSON schema for the editor UI component id is the following:\n   * {\n   *   \"editor\": {\n   *     \"ui-component-id\": \"input-editor-component-id\",\n   *     ...\n   *   }\n   * }\n   */\n  get editorUIComponentId() {\n    const metadata = this._getMetadata();\n    if (\n      metadata &&\n      \"editor\" in metadata &&\n      \"ui-component-id\" in metadata[\"editor\"]\n    ) {\n      return metadata[\"editor\"][\"ui-component-id\"];\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the configuration for the editor component, which will be available\n   * to the editor component for customizing its look and functionality.\n   * Returns empty object if there is no editor config.\n   *\n   * The expected JSON schema for the editor config is the following:\n   * {\n   *   \"editor\": {\n   *     \"config\": {\n   *       ... anything can go here ...\n   *     }\n   *     ...\n   *   }\n   * }\n   */\n  get editorConfig() {\n    const metadata = this._getMetadata();\n    if (metadata && \"editor\" in metadata && \"config\" in metadata[\"editor\"]) {\n      return metadata[\"editor\"][\"config\"];\n    } else {\n      return {};\n    }\n  }\n\n  /**\n   * Get the validations for the editor component. See ValidatorFactory for a\n   * list of available validations. Returns empty array if there are no\n   * validations.\n   *\n   * The expected JSON schema for the editor validations is the following:\n   * {\n   *   \"editor\": {\n   *     \"validations\": [\n   *       {\n   *         \"type\": \"validation-name\",\n   *         \"value\": \"some value for configuring validation, passed to validator constructor\",\n   *         \"message\": \"(Optional) custom validation error message\"\n   *       },\n   *       ... additional validations go here ...\n   *     ]\n   *     ...\n   *   }\n   * }\n   *\n   * Note: \"message\" is optional for all validations.\n   */\n  get editorValidations() {\n    const metadata = this._getMetadata();\n    if (\n      metadata &&\n      \"editor\" in metadata &&\n      \"validations\" in metadata[\"editor\"]\n    ) {\n      return metadata[\"editor\"][\"validations\"];\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Get the dependencies for the editor component. Returns empty object if\n   * there are no dependencies. See evaluateDependencies for a list of\n   * available kinds of dependencies.\n   *\n   * The expected JSON schema for the editor validations is the following:\n   * {\n   *   \"editor\": {\n   *     \"dependencies\": {\n   *       \"show\": {\n   *         \"AND\": [              // Boolean operator (\"AND\", \"OR\")\n   *           \"INPUT_1\": {        // Name of other application input\n   *             \"type\": \"equals\", // Name of comparison type\n   *             \"value\": \"1\"      // Value to compare with\n   *           },\n   *           \"NOT\": {            // \"NOT\" is given a single input comparison or \"AND\" or \"OR\" expression\n   *             \"INPUT_2\": {\n   *               ...\n   *             }\n   *           }\n   *           ... additional boolean expressions (\"AND\", \"OR\", \"NOT\")\n   *           ... additional application input comparisons\n   *         ]\n   *       },\n   *       \"showOptions\": {        // Optional\n   *         \"isRequired\": true    // Set isRequired to true when shown, false otherwise (Note:\n   *                               // REST API automatically adds and updates this metadata as needed)\n   *       }\n   *     }\n   *   }\n   * }\n   */\n  get editorDependencies() {\n    const metadata = this._getMetadata();\n    if (\n      metadata &&\n      \"editor\" in metadata &&\n      \"dependencies\" in metadata[\"editor\"]\n    ) {\n      return metadata[\"editor\"][\"dependencies\"];\n    } else {\n      return {};\n    }\n  }\n\n  _getMetadata() {\n    // metaData could really be anything, here we expect it to be an object\n    // so safely check if it is first\n    if (this.metaData && typeof this.metaData === \"object\") {\n      return this.metaData;\n    } else {\n      return null;\n    }\n  }\n\n  validate(value = undefined) {\n    let inputValue = typeof value != \"undefined\" ? value : this.value;\n    let results = {};\n    // Skip running validations when the input isn't shown\n    if (!this.show) {\n      return results;\n    }\n    let valueErrorMessages = [];\n    if (this.isRequired && this.isEmpty(inputValue)) {\n      if (this.type === DataType.URI_COLLECTION) {\n        valueErrorMessages.push(IS_REQUIRED_URI_COLLECTION);\n      } else {\n        valueErrorMessages.push(IS_REQUIRED_DEFAULT);\n      }\n    }\n    // Run through any validations if configured\n    if (this.editorValidations.length > 0) {\n      const validatorFactory = new ValidatorFactory();\n      valueErrorMessages = valueErrorMessages.concat(\n        validatorFactory.validate(this.editorValidations, inputValue)\n      );\n    }\n    if (valueErrorMessages.length > 0) {\n      results[\"value\"] = valueErrorMessages;\n    }\n    return results;\n  }\n\n  /**\n   * Evaluate dependencies on the values of other application inputs.\n   */\n  evaluateDependencies(inputValues) {\n    if (Object.keys(this.editorDependencies).length > 0) {\n      const booleanExpressionEvaluator = new BooleanExpressionEvaluator(\n        inputValues\n      );\n      if (\"show\" in this.editorDependencies) {\n        this.show = booleanExpressionEvaluator.evaluate(\n          this.editorDependencies.show\n        );\n        if (\"showOptions\" in this.editorDependencies) {\n          if (\n            \"isRequired\" in this.editorDependencies.showOptions &&\n            this.editorDependencies.showOptions.isRequired\n          ) {\n            this.isRequired = this.show;\n          }\n        }\n      }\n    }\n  }\n}\n\nInputDataObjectType.VALID_DATA_TYPES = [\n  DataType.STRING,\n  DataType.INTEGER,\n  DataType.FLOAT,\n  DataType.URI,\n  DataType.URI_COLLECTION,\n];\n","import BaseModel from \"./BaseModel\";\nimport DataType from \"./DataType\";\nimport uuidv4 from \"uuid/v4\";\n\nconst FIELDS = [\n  \"name\",\n  \"value\",\n  {\n    name: \"type\",\n    type: DataType,\n    default: DataType.URI,\n  },\n  \"applicationArgument\",\n  {\n    name: \"isRequired\",\n    type: \"boolean\",\n    default: false,\n  },\n  {\n    name: \"requiredToAddedToCommandLine\",\n    type: \"boolean\",\n    default: false,\n  },\n  {\n    name: \"dataMovement\",\n    type: \"boolean\",\n    default: false,\n  },\n  \"location\",\n  \"searchQuery\",\n  {\n    name: \"outputStreaming\",\n    type: \"boolean\",\n    default: false,\n  },\n  \"storageResourceId\",\n  \"metaData\",\n];\n\nexport default class OutputDataObjectType extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n    // Copy key when cloning a model\n    this._key = data.key ? data.key : uuidv4();\n  }\n\n  get key() {\n    return this._key;\n  }\n\n  get fileMetadata() {\n    return this.metaData ? this.metaData[\"file-metadata\"] : null;\n  }\n\n  get fileMetadataMimeType() {\n    return this.fileMetadata && this.fileMetadata[\"mime-type\"]\n      ? this.fileMetadata[\"mime-type\"]\n      : null;\n  }\n}\n\nOutputDataObjectType.VALID_DATA_TYPES = DataType.values;\n","import BaseModel from \"./BaseModel\";\n\nconst FIELDS = [\n  \"errorId\",\n  {\n    name: \"creationTime\",\n    type: \"date\",\n  },\n  \"actualErrorMessage\",\n  \"userFriendlyMessage\",\n  \"transientOrPersistent\",\n  {\n    name: \"rootCauseErrorIdList\",\n    type: \"string\",\n    list: true,\n  },\n];\n\nexport default class ErrorModel extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n  }\n}\n","import BaseEnum from \"./BaseEnum\";\n\nexport default class ExperimentState extends BaseEnum {\n  get isProgressing() {\n    const progressingStates = [\n      ExperimentState.SCHEDULED,\n      ExperimentState.LAUNCHED,\n      ExperimentState.EXECUTING,\n      ExperimentState.CANCELING,\n    ];\n    return progressingStates.indexOf(this) >= 0;\n  }\n  get isFinished() {\n    const finishedStates = [\n      ExperimentState.CANCELED,\n      ExperimentState.COMPLETED,\n      ExperimentState.FAILED,\n    ];\n    return finishedStates.indexOf(this) >= 0;\n  }\n}\nExperimentState.init([\n  \"CREATED\",\n  \"VALIDATED\",\n  \"SCHEDULED\",\n  \"LAUNCHED\",\n  \"EXECUTING\",\n  \"CANCELING\",\n  \"CANCELED\",\n  \"COMPLETED\",\n  \"FAILED\",\n]);\n","import BaseModel from \"./BaseModel\";\nimport ExperimentState from \"./ExperimentState\";\n\nconst FIELDS = [\n  {\n    name: \"state\",\n    type: ExperimentState,\n  },\n  {\n    name: \"timeOfStateChange\",\n    type: \"date\",\n  },\n  \"reason\",\n  \"statusId\",\n];\n\nexport default class ExperimentStatus extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n  }\n\n  get isProgressing() {\n    return this.state && this.state.isProgressing;\n  }\n\n  get isFinished() {\n    return this.state && this.state.isFinished;\n  }\n}\n","import BaseEnum from \"./BaseEnum\";\n\nexport default class ProcessState extends BaseEnum {}\nProcessState.init([\n  \"CREATED\",\n  \"VALIDATED\",\n  \"STARTED\",\n  \"PRE_PROCESSING\",\n  \"CONFIGURING_WORKSPACE\",\n  \"INPUT_DATA_STAGING\",\n  \"EXECUTING\",\n  \"MONITORING\",\n  \"OUTPUT_DATA_STAGING\",\n  \"POST_PROCESSING\",\n  \"COMPLETED\",\n  \"FAILED\",\n  \"CANCELLING\",\n  \"CANCELED\",\n]);\n","import BaseModel from \"./BaseModel\";\nimport ProcessState from \"./ProcessState\";\n\nconst FIELDS = [\n  {\n    name: \"state\",\n    type: ProcessState,\n  },\n  {\n    name: \"timeOfStateChange\",\n    type: Date,\n  },\n  \"reason\",\n  \"statusId\",\n];\n\nexport default class ProcessStatus extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n  }\n}\n","import BaseModel from \"./BaseModel\";\n\nconst FIELDS = [\n  \"resourceHostId\",\n  \"totalCPUCount\",\n  \"nodeCount\",\n  \"numberOfThreads\",\n  \"queueName\",\n  \"wallTimeLimit\",\n  \"totalPhysicalMemory\",\n  \"chessisNumber\",\n  \"staticWorkingDir\",\n  \"overrideLoginUserName\",\n  \"overrideScratchLocation\",\n  \"overrideAllocationProjectNumber\",\n];\n\nexport default class ComputationalResourceSchedulingModel extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n  }\n\n  validate(queueInfo = null, batchQueueResourcePolicy = null) {\n    const validationResults = {};\n    if (this.isEmpty(this.resourceHostId)) {\n      validationResults[\"resourceHostId\"] = \"Please select a compute resource.\";\n    }\n    if (this.isEmpty(this.queueName)) {\n      validationResults[\"queueName\"] = \"Please select a queue.\";\n    }\n    if (!(this.nodeCount > 0)) {\n      validationResults[\"nodeCount\"] = \"Enter a node count greater than 0.\";\n    } else if (\n      batchQueueResourcePolicy &&\n      this.nodeCount > batchQueueResourcePolicy.maxAllowedNodes\n    ) {\n      validationResults[\n        \"nodeCount\"\n      ] = `Enter a node count no greater than ${batchQueueResourcePolicy.maxAllowedNodes}.`;\n    } else if (\n      queueInfo &&\n      queueInfo.maxNodes &&\n      this.nodeCount > queueInfo.maxNodes\n    ) {\n      validationResults[\n        \"nodeCount\"\n      ] = `Enter a node count no greater than ${queueInfo.maxNodes}.`;\n    }\n    if (!(this.totalCPUCount > 0)) {\n      validationResults[\"totalCPUCount\"] = \"Enter a core count greater than 0.\";\n    } else if (\n      batchQueueResourcePolicy &&\n      this.totalCPUCount > batchQueueResourcePolicy.maxAllowedCores\n    ) {\n      validationResults[\n        \"totalCPUCount\"\n      ] = `Enter a core count no greater than ${batchQueueResourcePolicy.maxAllowedCores}.`;\n    } else if (\n      queueInfo &&\n      queueInfo.maxProcessors &&\n      this.totalCPUCount > queueInfo.maxProcessors\n    ) {\n      validationResults[\n        \"totalCPUCount\"\n      ] = `Enter a core count no greater than ${queueInfo.maxProcessors}.`;\n    }\n    if (!(this.wallTimeLimit > 0)) {\n      validationResults[\"wallTimeLimit\"] =\n        \"Enter a wall time limit greater than 0.\";\n    } else if (\n      batchQueueResourcePolicy &&\n      this.wallTimeLimit > batchQueueResourcePolicy.maxAllowedWalltime\n    ) {\n      validationResults[\n        \"wallTimeLimit\"\n      ] = `Enter a wall time limit no greater than ${batchQueueResourcePolicy.maxAllowedWalltime}.`;\n    } else if (\n      queueInfo &&\n      queueInfo.maxRunTime &&\n      this.wallTimeLimit > queueInfo.maxRunTime\n    ) {\n      validationResults[\n        \"wallTimeLimit\"\n      ] = `Enter a wall time limit no greater than ${queueInfo.maxRunTime}.`;\n    }\n    if (!(this.totalPhysicalMemory >= 0)) {\n      validationResults[\"totalPhysicalMemory\"] =\n        \"Enter a total physical memory greater than or equal to 0.\";\n    } else if (\n      queueInfo &&\n      queueInfo.maxMemory &&\n      this.totalPhysicalMemory > queueInfo.maxMemory\n    ) {\n      validationResults[\n        \"totalPhysicalMemory\"\n      ] = `Enter a total physical memory no greater than ${queueInfo.maxMemory}.`;\n    }\n    return validationResults;\n  }\n}\n","import BaseEnum from \"./BaseEnum\";\n\nexport default class JobState extends BaseEnum {}\nJobState.init([\n  \"SUBMITTED\",\n  \"QUEUED\",\n  \"ACTIVE\",\n  \"COMPLETE\",\n  \"CANCELED\",\n  \"FAILED\",\n  \"SUSPENDED\",\n  \"UNKNOWN\",\n  \"NON_CRITICAL_FAIL\",\n]);\n","import BaseModel from \"./BaseModel\";\nimport JobState from \"./JobState\";\n\nconst FIELDS = [\n  {\n    name: \"jobState\",\n    type: JobState,\n  },\n  {\n    name: \"timeOfStateChange\",\n    type: \"date\",\n  },\n  \"reason\",\n  \"statusId\",\n];\n\nexport default class JobStatus extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n  }\n}\n","import BaseModel from \"./BaseModel\";\nimport JobStatus from \"./JobStatus\";\n\nconst FIELDS = [\n  \"jobId\",\n  \"taskId\",\n  \"processId\",\n  \"jobDescription\",\n  {\n    name: \"creationTime\",\n    type: \"date\",\n  },\n  {\n    name: \"jobStatuses\",\n    type: JobStatus,\n    list: true,\n  },\n  \"computeResourceConsumed\",\n  \"jobName\",\n  \"workingDir\",\n  \"stdOut\",\n  \"stdErr\",\n  \"exitCode\",\n];\n\nexport default class Job extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n  }\n\n  // get the first job status\n  get latestJobStatus() {\n    if (this.jobStatuses && this.jobStatuses.length > 0) {\n      return this.jobStatuses[this.jobStatuses.length - 1];\n    } else {\n      return null;\n    }\n  }\n\n  get jobStatusStateName() {\n    return this.latestJobStatus ? this.latestJobStatus.jobState.name : null;\n  }\n\n  get jobStatusTimeOfStateChange() {\n    return this.latestJobStatus ? this.latestJobStatus.timeOfStateChange : null;\n  }\n\n  get jobStatusReason() {\n    return this.latestJobStatus ? this.latestJobStatus.reason : null;\n  }\n}\n","import BaseEnum from \"./BaseEnum\";\n\nexport default class TaskTypes extends BaseEnum {}\nTaskTypes.init([\n  \"ENV_SETUP\",\n  \"DATA_STAGING\",\n  \"JOB_SUBMISSION\",\n  \"ENV_CLEANUP\",\n  \"MONITORING\",\n  \"OUTPUT_FETCHING\",\n]);\n","import BaseEnum from \"./BaseEnum\";\n\nexport default class TaskState extends BaseEnum {}\nTaskState.init([\"CREATED\", \"EXECUTING\", \"COMPLETED\", \"FAILED\", \"CANCELED\"]);\n","import BaseModel from \"./BaseModel\";\nimport TaskState from \"./TaskState\";\n\nconst FIELDS = [\n  {\n    name: \"state\",\n    type: TaskState,\n  },\n  {\n    name: \"timeOfStateChange\",\n    type: Date,\n  },\n  \"reason\",\n  \"statusId\",\n];\n\nexport default class TaskStatus extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n  }\n}\n","import BaseModel from \"./BaseModel\";\nimport ErrorModel from \"./ErrorModel\";\nimport Job from \"./Job\";\nimport TaskTypes from \"./TaskTypes\";\nimport TaskStatus from \"./TaskStatus\";\n\nconst FIELDS = [\n  \"taskId\",\n  {\n    name: \"taskType\",\n    type: TaskTypes,\n  },\n  \"parentProcessId\",\n  {\n    name: \"creationTime\",\n    type: Date,\n  },\n  {\n    name: \"lastUpdateTime\",\n    type: Date,\n  },\n  {\n    name: \"taskStatuses\",\n    type: TaskStatus,\n    list: true,\n  },\n  \"taskDetail\",\n  \"subTaskModel\",\n  {\n    name: \"taskErrors\",\n    type: ErrorModel,\n    list: true,\n  },\n  {\n    name: \"jobs\",\n    type: Job,\n    list: true,\n  },\n  \"maxRetry\",\n  \"currentRetry\",\n];\n\nexport default class Task extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n  }\n\n  get latestStatus() {\n    if (this.taskStatuses && this.taskStatuses.length > 0) {\n      return this.taskStatuses[this.taskStatuses.length - 1];\n    } else {\n      return null;\n    }\n  }\n}\n","import BaseModel from \"./BaseModel\";\n\nconst FIELDS = [\n  \"processId\",\n  \"workflowId\",\n  {\n    name: \"creationTime\",\n    type: Date,\n  },\n  \"type\",\n];\n\nexport default class ProcessWorkflow extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n  }\n}\n","import BaseModel from \"./BaseModel\";\nimport ProcessStatus from \"./ProcessStatus\";\nimport InputDataObjectType from \"./InputDataObjectType\";\nimport OutputDataObjectType from \"./OutputDataObjectType\";\nimport ComputationalResourceSchedulingModel from \"./ComputationalResourceSchedulingModel\";\nimport Task from \"./Task\";\nimport ErrorModel from \"./ErrorModel\";\nimport ProcessWorkflow from \"./ProcessWorkflow\";\n\nconst FIELDS = [\n  \"processId\",\n  \"experimentId\",\n  {\n    name: \"creationTime\",\n    type: Date,\n  },\n  {\n    name: \"lastUpdateTime\",\n    type: Date,\n  },\n  {\n    name: \"processStatuses\",\n    type: ProcessStatus,\n    list: true,\n  },\n  \"processDetail\",\n  \"applicationInterfaceId\",\n  \"applicationDeploymentId\",\n  \"computeResourceId\",\n  {\n    name: \"processInputs\",\n    type: InputDataObjectType,\n    list: true,\n  },\n  {\n    name: \"processOutputs\",\n    type: OutputDataObjectType,\n    list: true,\n  },\n  {\n    name: \"processResourceSchedule\",\n    type: ComputationalResourceSchedulingModel,\n  },\n  {\n    name: \"tasks\",\n    type: Task,\n    list: true,\n  },\n  \"taskDag\",\n  {\n    name: \"processErrors\",\n    type: ErrorModel,\n    list: true,\n  },\n  \"gatewayExecutionId\",\n  \"enableEmailNotification\",\n  \"emailAddresses\",\n  \"storageResourceId\",\n  \"userDn\",\n  \"generateCert\",\n  \"experimentDataDir\",\n  \"userName\",\n  \"useUserCRPref\",\n  \"groupResourceProfileId\",\n  {\n    name: \"processWorkflows\",\n    type: ProcessWorkflow,\n    list: true,\n  },\n];\n\nexport default class ProcessModel extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n  }\n\n  /**\n   * Return tasks sorted by task DAG order.\n   */\n  get sortedTasks() {\n    const tasksArrCopy = this.tasks.slice();\n    tasksArrCopy.sort((a, b) => {\n      const aIndex = this.taskDagArray.findIndex((t) => t === a.taskId);\n      const bIndex = this.taskDagArray.findIndex((t) => t === b.taskId);\n      return aIndex - bIndex;\n    });\n    return tasksArrCopy;\n  }\n\n  get taskDagArray() {\n    return this.taskDag ? this.taskDag.split(\",\") : [];\n  }\n}\n","import BaseModel from \"./BaseModel\";\nimport ComputationalResourceSchedulingModel from \"./ComputationalResourceSchedulingModel\";\n\nconst FIELDS = [\n  {\n    name: \"airavataAutoSchedule\",\n    type: \"boolean\",\n    default: false,\n  },\n  {\n    name: \"overrideManualScheduledParams\",\n    type: \"boolean\",\n    default: false,\n  },\n  {\n    name: \"shareExperimentPublicly\",\n    type: \"boolean\",\n    default: false,\n  },\n  {\n    name: \"computationalResourceScheduling\",\n    type: ComputationalResourceSchedulingModel,\n    default: BaseModel.defaultNewInstance(ComputationalResourceSchedulingModel),\n  },\n  {\n    name: \"throttleResources\",\n    type: \"boolean\",\n    default: false,\n  },\n  \"userDN\",\n  {\n    name: \"generateCert\",\n    type: \"boolean\",\n    default: false,\n  },\n  \"storageId\",\n  \"experimentDataDir\",\n  {\n    name: \"useUserCRPref\",\n    type: \"boolean\",\n    default: false,\n  },\n  \"groupResourceProfileId\",\n];\n\nexport default class UserConfigurationData extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n  }\n\n  validate() {\n    const validationResults = {};\n    const computationalResourceSchedulingValidation = this.computationalResourceScheduling.validate();\n    if (Object.keys(computationalResourceSchedulingValidation).length > 0) {\n      validationResults[\n        \"computationalResourceScheduling\"\n      ] = computationalResourceSchedulingValidation;\n    }\n    return validationResults;\n  }\n}\n","import BaseModel from \"./BaseModel\";\nimport ErrorModel from \"./ErrorModel\";\nimport ExperimentState from \"./ExperimentState\";\nimport ExperimentStatus from \"./ExperimentStatus\";\nimport InputDataObjectType from \"./InputDataObjectType\";\nimport OutputDataObjectType from \"./OutputDataObjectType\";\nimport ProcessModel from \"./ProcessModel\";\nimport UserConfigurationData from \"./UserConfigurationData\";\n\nconst FIELDS = [\n  \"experimentId\",\n  \"projectId\",\n  \"gatewayId\",\n  {\n    name: \"experimentType\",\n    type: \"number\",\n    default: 0,\n  },\n  \"userName\",\n  \"experimentName\",\n  {\n    name: \"creationTime\",\n    type: \"date\",\n  },\n  \"description\",\n  \"executionId\",\n  {\n    name: \"enableEmailNotification\",\n    type: \"boolean\",\n    default: false,\n  },\n  {\n    name: \"emailAddresses\",\n    type: \"string\",\n    list: true,\n  },\n  {\n    name: \"userConfigurationData\",\n    type: UserConfigurationData,\n    default: BaseModel.defaultNewInstance(UserConfigurationData),\n  },\n  {\n    name: \"experimentInputs\",\n    type: InputDataObjectType,\n    list: true,\n    default: BaseModel.defaultNewInstance(Array),\n  },\n  {\n    name: \"experimentOutputs\",\n    type: OutputDataObjectType,\n    list: true,\n  },\n  {\n    name: \"experimentStatus\",\n    type: ExperimentStatus,\n    list: true,\n  },\n  {\n    name: \"errors\",\n    type: ErrorModel,\n    list: true,\n  },\n  {\n    name: \"processes\",\n    type: ProcessModel,\n    list: true,\n  },\n  \"workflow\",\n  {\n    name: \"userHasWriteAccess\",\n    type: \"boolean\",\n    default: true,\n  },\n];\n\nexport default class Experiment extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n    this.evaluateInputDependencies();\n  }\n\n  validate() {\n    let validationResults = {};\n    if (this.isEmpty(this.experimentName)) {\n      validationResults[\"experimentName\"] =\n        \"Please provide a name for this experiment.\";\n    }\n    if (this.isEmpty(this.projectId)) {\n      validationResults[\"projectId\"] = \"Please select a project.\";\n    }\n    return validationResults;\n  }\n\n  get latestStatus() {\n    if (this.experimentStatus && this.experimentStatus.length > 0) {\n      return this.experimentStatus[this.experimentStatus.length - 1];\n    } else {\n      return null;\n    }\n  }\n\n  get isProgressing() {\n    return this.latestStatus && this.latestStatus.isProgressing;\n  }\n\n  get isFinished() {\n    return this.latestStatus && this.latestStatus.isFinished;\n  }\n\n  get hasLaunched() {\n    const hasLaunchedStates = [\n      ExperimentState.SCHEDULED,\n      ExperimentState.LAUNCHED,\n      ExperimentState.EXECUTING,\n      ExperimentState.CANCELING,\n      ExperimentState.CANCELED,\n      ExperimentState.FAILED,\n      ExperimentState.COMPLETED,\n    ];\n    return (\n      this.latestStatus &&\n      hasLaunchedStates.indexOf(this.latestStatus.state) >= 0\n    );\n  }\n\n  get isEditable() {\n    return (\n      (!this.latestStatus ||\n        this.latestStatus.state === ExperimentState.CREATED) &&\n      this.userHasWriteAccess\n    );\n  }\n\n  get isCancelable() {\n    switch (this.latestStatus.state) {\n      case ExperimentState.VALIDATED:\n      case ExperimentState.SCHEDULED:\n      case ExperimentState.LAUNCHED:\n      case ExperimentState.EXECUTING:\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  get resourceHostId() {\n    return this.userConfigurationData &&\n      this.userConfigurationData.computationalResourceScheduling\n      ? this.userConfigurationData.computationalResourceScheduling\n          .resourceHostId\n      : null;\n  }\n\n  populateInputsOutputsFromApplicationInterface(applicationInterface) {\n    // Copy application inputs and outputs to the experiment\n    this.experimentInputs = applicationInterface.applicationInputs.map(\n      (input) => input.clone()\n    );\n    this.evaluateInputDependencies();\n    this.experimentOutputs = applicationInterface.applicationOutputs.slice();\n  }\n\n  evaluateInputDependencies() {\n    const inputValues = this._collectInputValues(this.experimentInputs);\n    for (const input of this.experimentInputs) {\n      input.evaluateDependencies(inputValues);\n    }\n  }\n\n  getExperimentInput(inputName) {\n    return this.experimentInputs.find(inp => inp.name === inputName);\n  }\n\n  getExperimentOutput(outputName) {\n    return this.experimentOutputs.find(out => out.name === outputName);\n  }\n\n  _collectInputValues() {\n    const result = {};\n    this.experimentInputs.forEach((inp) => {\n      result[inp.name] = inp.value;\n    });\n    return result;\n  }\n}\n","import BaseModel from \"./BaseModel\";\nimport InputDataObjectType from \"./InputDataObjectType\";\nimport OutputDataObjectType from \"./OutputDataObjectType\";\nimport DataType from \"./DataType\";\nimport Experiment from \"./Experiment\";\n\nconst FIELDS = [\n  \"applicationInterfaceId\",\n  \"applicationName\",\n  \"applicationDescription\",\n  {\n    name: \"applicationModules\",\n    type: \"string\",\n    list: true,\n  },\n  // When saving/updating, the order of the inputs in the applicationInputs\n  // array determines the 'inputOrder' that will be applied to each input on the\n  // backend. Updating 'inputOrder' will have no effect.\n  {\n    name: \"applicationInputs\",\n    type: InputDataObjectType,\n    list: true,\n    default: BaseModel.defaultNewInstance(Array),\n  },\n  {\n    name: \"applicationOutputs\",\n    type: OutputDataObjectType,\n    list: true,\n    default: BaseModel.defaultNewInstance(Array),\n  },\n  {\n    name: \"archiveWorkingDirectory\",\n    type: \"boolean\",\n    default: false,\n  },\n  {\n    name: \"hasOptionalFileInputs\",\n    type: \"boolean\",\n    default: false,\n  },\n  \"userHasWriteAccess\",\n];\n\nexport default class ApplicationInterfaceDefinition extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n  }\n\n  addStandardOutAndStandardErrorOutputs() {\n    const stdout = new OutputDataObjectType({\n      name: \"Standard-Out\",\n      type: DataType.STDOUT,\n      isRequired: true,\n      metaData: {\n        \"file-metadata\": {\n          \"mime-type\": \"text/plain\",\n        },\n      },\n    });\n    const stderr = new OutputDataObjectType({\n      name: \"Standard-Error\",\n      type: DataType.STDERR,\n      isRequired: true,\n      metaData: {\n        \"file-metadata\": {\n          \"mime-type\": \"text/plain\",\n        },\n      },\n    });\n    if (!this.applicationOutputs) {\n      this.applicationOutputs = [];\n    }\n    this.applicationOutputs.push(stdout, stderr);\n  }\n\n  createExperiment() {\n    const experiment = new Experiment();\n    experiment.populateInputsOutputsFromApplicationInterface(this);\n    experiment.executionId = this.applicationInterfaceId;\n    return experiment;\n  }\n\n  get applicationModuleId() {\n    if (!this.applicationModules || this.applicationModules.length > 1) {\n      throw new Error(\n        `No unique application module exists for interface\n        ${this.applicationName}: modules=${this.applicationModules}`\n      );\n    }\n    return this.applicationModules[0];\n  }\n}\n","import BaseModel from \"./BaseModel\";\n\nconst FIELDS = [\n  \"appModuleId\",\n  \"appModuleName\",\n  \"appModuleVersion\",\n  \"appModuleDescription\",\n  \"userHasWriteAccess\",\n];\n\nexport default class ApplicationModule extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n  }\n}\n","import BaseModel from \"./BaseModel\";\n\nconst FIELDS = [\n  \"queueName\",\n  \"queueDescription\",\n  \"maxRunTime\",\n  \"maxNodes\",\n  \"maxProcessors\",\n  \"maxJobsInQueue\",\n  \"maxMemory\",\n  \"cpuPerNode\",\n  \"defaultNodeCount\",\n  \"defaultCPUCount\",\n  \"defaultWalltime\",\n  \"queueSpecificMacros\",\n  \"isDefaultQueue\",\n];\n\nexport default class BatchQueue extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n  }\n}\n","import BaseModel from \"./BaseModel\";\n\nconst FIELDS = [\n  \"resourcePolicyId\",\n  \"computeResourceId\",\n  \"groupResourceProfileId\",\n  \"queuename\",\n  \"maxAllowedNodes\",\n  \"maxAllowedCores\",\n  \"maxAllowedWalltime\",\n];\n\nexport default class BatchQueueResourcePolicy extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n  }\n\n  validate(batchQueue) {\n    let validationResults = {};\n    if (this.maxAllowedNodes && this.maxAllowedNodes < 1) {\n      validationResults[\"maxAllowedNodes\"] = \"Must be at least 1.\";\n    } else if (this.maxAllowedNodes > batchQueue.maxNodes) {\n      validationResults[\n        \"maxAllowedNodes\"\n      ] = `Must be at most ${batchQueue.maxNodes}.`;\n    }\n    if (this.maxAllowedCores && this.maxAllowedCores < 1) {\n      validationResults[\"maxAllowedCores\"] = \"Must be at least 1.\";\n    } else if (this.maxAllowedCores > batchQueue.maxProcessors) {\n      validationResults[\n        \"maxAllowedCores\"\n      ] = `Must be at most ${batchQueue.maxProcessors}.`;\n    }\n    if (this.maxAllowedWalltime && this.maxAllowedWalltime < 1) {\n      validationResults[\"maxAllowedWalltime\"] = \"Must be at least 1.\";\n    } else if (this.maxAllowedWalltime > batchQueue.maxRunTime) {\n      validationResults[\n        \"maxAllowedWalltime\"\n      ] = `Must be at most ${batchQueue.maxRunTime}.`;\n    }\n    return validationResults;\n  }\n}\n","import BaseModel from \"./BaseModel\";\n\nconst FIELDS = [\n  \"resourcePolicyId\",\n  \"computeResourceId\",\n  \"groupResourceProfileId\",\n  {\n    name: \"allowedBatchQueues\",\n    type: \"string\",\n    list: true,\n  },\n];\n\nexport default class ComputeResourcePolicy extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n  }\n\n  populateParentIdsOnBatchQueueResourcePolicy(batchQueueResourcePolicy) {\n    // For new BatchQueueResourcePolicy instances, set the parent ids\n    batchQueueResourcePolicy.groupResourceProfileId = this.groupResourceProfileId;\n    batchQueueResourcePolicy.computeResourceId = this.computeResourceId;\n    return batchQueueResourcePolicy;\n  }\n\n  validate() {\n    let validationResults = {};\n    if (!this.allowedBatchQueues || this.allowedBatchQueues.length === 0) {\n      validationResults[\"allowedBatchQueues\"] =\n        \"Must select at least one queue.\";\n    }\n    return validationResults;\n  }\n}\n","import BaseModel from \"./BaseModel\";\nimport uuidv4 from \"uuid/v4\";\n\nfunction currentTimeTopOfHour() {\n  const d = new Date();\n  d.setMinutes(0);\n  d.setSeconds(0);\n  d.setMilliseconds(0);\n  return d;\n}\nconst FIELDS = [\n  \"reservationId\",\n  \"reservationName\",\n  {\n    name: \"queueNames\",\n    type: \"string\",\n    list: true,\n  },\n  {\n    name: \"startTime\",\n    type: Date,\n    default: () => currentTimeTopOfHour(),\n  },\n  {\n    name: \"endTime\",\n    type: Date,\n    default: () => currentTimeTopOfHour(),\n  },\n];\n\nexport default class ComputeResourceReservation extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n    this._key = data.key ? data.key : uuidv4();\n  }\n  get key() {\n    return this._key;\n  }\n  validate() {\n    let validationResults = {};\n    if (this.isEmpty(this.reservationName)) {\n      validationResults[\"reservationName\"] =\n        \"Please provide the name of this reservation.\";\n    }\n    if (this.startTime > this.endTime) {\n      validationResults[\"endTime\"] = \"End time must be later than start time.\";\n    }\n    if (this.isEmpty(this.queueNames)) {\n      validationResults[\"queueNames\"] = \"Please select at least one queue.\";\n    }\n    return validationResults;\n  }\n  get isExpired() {\n    const now = new Date();\n    return now > this.endTime;\n  }\n  get isActive() {\n    const now = new Date();\n    return this.startTime < now && now < this.endTime;\n  }\n  get isUpcoming() {\n    const now = new Date();\n    return now < this.startTime;\n  }\n}\n","import BaseModel from \"./BaseModel\";\n\nconst FIELDS = [\n  \"replicaId\",\n  \"productUri\",\n  \"replicaName\",\n  \"replicaDescription\",\n  {\n    name: \"creationTime\",\n    type: \"date\",\n  },\n  {\n    name: \"lastModifiedTime\",\n    type: \"date\",\n  },\n  {\n    name: \"validUntilTime\",\n    type: \"date\",\n  },\n  \"replicaLocationCategory\",\n  \"replicaPersistentType\",\n  \"storageResourceId\",\n  \"filePath\",\n  \"replicaMetadata\",\n];\n\nexport default class DataReplicaLocation extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n  }\n}\n","import BaseModel from \"./BaseModel\";\nimport DataReplicaLocation from \"./DataReplicaLocation\";\n\nimport URL from \"url-parse\";\n\nconst FIELDS = [\n  \"productUri\",\n  \"gatewayId\",\n  \"parentProductUri\",\n  \"productName\",\n  \"productDescription\",\n  \"ownerName\",\n  \"dataProductType\",\n  \"productSize\",\n  {\n    name: \"creationTime\",\n    type: \"date\",\n  },\n  {\n    name: \"lastModifiedTime\",\n    type: \"date\",\n  },\n  \"productMetadata\",\n  {\n    name: \"replicaLocations\",\n    type: DataReplicaLocation,\n    list: true,\n  },\n  \"downloadURL\",\n  \"isInputFileUpload\",\n  \"filesize\",\n];\n\nconst FILENAME_REGEX = /[^/]+$/;\nconst TEXT_MIME_TYPE_REGEX = /^text\\/.+/;\nconst IMAGE_MIME_TYPE_REGEX = /^image\\/.+/;\n\nexport default class DataProduct extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n  }\n\n  get filename() {\n    if (this.replicaLocations && this.replicaLocations.length > 0) {\n      const firstReplicaLocation = this.replicaLocations[0];\n      const fileURL = new URL(firstReplicaLocation.filePath);\n      const filenameMatch = FILENAME_REGEX.exec(fileURL.pathname);\n      if (filenameMatch) {\n        return filenameMatch[0];\n      }\n    }\n    return null;\n  }\n\n  get isText() {\n    return this.mimeType && TEXT_MIME_TYPE_REGEX.test(this.mimeType);\n  }\n\n  get isImage() {\n    return this.mimeType && IMAGE_MIME_TYPE_REGEX.test(this.mimeType);\n  }\n\n  get mimeType() {\n    return this.productMetadata && this.productMetadata[\"mime-type\"]\n      ? this.productMetadata[\"mime-type\"]\n      : null;\n  }\n}\n","import BaseEnum from \"./BaseEnum\";\n\nexport default class ExperimentSearchFields extends BaseEnum {}\nExperimentSearchFields.init([\n  \"EXPERIMENT_NAME\",\n  \"EXPERIMENT_DESC\",\n  \"APPLICATION_ID\",\n  \"FROM_DATE\",\n  \"TO_DATE\",\n  \"STATUS\",\n  \"PROJECT_ID\",\n  \"USER_NAME\",\n  \"JOB_ID\",\n]);\n","import BaseModel from \"./BaseModel\";\nimport BatchQueue from \"./BatchQueue\";\n\nconst FIELDS = [\n  \"computeResourceId\",\n  \"hostName\",\n  {\n    name: \"hostAliases\",\n    type: \"string\",\n    list: true,\n  },\n  {\n    name: \"ipAddresses\",\n    type: \"string\",\n    list: true,\n  },\n  \"resourceDescription\",\n  \"enabled\",\n  {\n    name: \"batchQueues\",\n    type: BatchQueue,\n    list: true,\n  },\n  // TODO: map these\n  // 'fileSystems',\n  // 'jobSubmissionInterfaces',\n  // 'dataMovementInterfaces',\n  \"maxMemoryPerNode\",\n  \"gatewayUsageReporting\",\n  \"gatewayUsageModuleLoadCommand\",\n  \"gatewayUsageExecutable\",\n  \"cpusPerNode\",\n  \"defaultNodeCount\",\n  \"defaultCPUCount\",\n  \"defaultWalltime\",\n];\n\nexport default class ComputeResourceDescription extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n  }\n}\n","import BaseModel from \"./BaseModel\";\n\nconst FIELDS = [\n  \"projectID\",\n  \"name\",\n  \"description\",\n  \"owner\",\n  \"gatewayId\",\n  {\n    name: \"creationTime\",\n    type: \"date\",\n  },\n  \"userHasWriteAccess\",\n  \"isOwner\",\n];\n\nexport default class Project extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n  }\n\n  validate() {\n    if (this.isEmpty(this.name)) {\n      return {\n        name: [\"Please provide a name.\"],\n      };\n    }\n    return null;\n  }\n}\n","import ApplicationModule from \"./ApplicationModule\";\nimport BaseModel from \"./BaseModel\";\nimport ComputeResourceDescription from \"./ComputeResourceDescription\";\nimport DataProduct from \"./DataProduct\";\nimport Experiment from \"./Experiment\";\nimport Job from \"./Job\";\nimport Project from \"./Project\";\n\nconst FIELDS = [\n  \"experimentId\",\n  {\n    name: \"experiment\",\n    type: Experiment,\n  },\n  {\n    name: \"project\",\n    type: Project,\n  },\n  {\n    name: \"applicationModule\",\n    type: ApplicationModule,\n  },\n  {\n    name: \"computeResource\",\n    type: ComputeResourceDescription,\n  },\n  {\n    name: \"outputDataProducts\",\n    type: DataProduct,\n    list: true,\n  },\n  {\n    name: \"inputDataProducts\",\n    type: DataProduct,\n    list: true,\n  },\n  {\n    name: \"jobDetails\",\n    type: Job,\n    list: true,\n  },\n  {\n    name: \"outputViews\",\n    type: Object,\n  },\n];\n\nexport default class FullExperiment extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n  }\n\n  get projectName() {\n    return this.project ? this.project.name : null;\n  }\n\n  get applicationName() {\n    return this.applicationModule ? this.applicationModule.appModuleName : null;\n  }\n\n  get computeHostName() {\n    return this.computeResource ? this.computeResource.hostName : null;\n  }\n\n  get resourceHostId() {\n    return this.experiment.resourceHostId;\n  }\n\n  get experimentStatus() {\n    return this.experiment.latestStatus;\n  }\n\n  get experimentStatusName() {\n    return this.experimentStatus ? this.experimentStatus.state.name : null;\n  }\n}\n","import BaseModel from \"./BaseModel\";\n\nconst FIELDS = [\n  \"id\",\n  \"name\",\n  \"ownerId\",\n  \"description\",\n  {\n    name: \"members\",\n    type: \"string\",\n    list: true,\n    default: BaseModel.defaultNewInstance(Array),\n  },\n  {\n    name: \"admins\",\n    type: \"string\",\n    list: true,\n    default: BaseModel.defaultNewInstance(Array),\n  },\n  {\n    name: \"isOwner\",\n    type: \"boolean\",\n    default: true,\n  },\n  {\n    name: \"isAdmin\",\n    type: \"boolean\",\n    default: false,\n  },\n  {\n    name: \"isMember\",\n    type: \"boolean\",\n    default: true,\n  },\n  \"isGatewayAdminsGroup\",\n  \"isReadOnlyGatewayAdminsGroup\",\n  \"isDefaultGatewayUsersGroup\",\n];\n\nexport default class Group extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n  }\n\n  validate() {\n    if (this.isEmpty(this.name.trim())) {\n      return {\n        name: [\"Please provide a name.\"],\n      };\n    }\n    return null;\n  }\n\n  /**\n   * Return true if group is either the \"Gateway Admins\" or the \"Readonly Admins\" group.\n   */\n  get isAdminGroup() {\n    return this.isReadOnlyGatewayAdminsGroup || this.isGatewayAdminsGroup;\n  }\n\n  get userHasWriteAccess() {\n    return this.isOwner || this.isAdmin;\n  }\n}\n","import BaseModel from \"./BaseModel\";\nimport ComputeResourceReservation from \"./ComputeResourceReservation\";\n\nconst FIELDS = [\n  \"computeResourceId\",\n  \"groupResourceProfileId\",\n  {\n    name: \"overridebyAiravata\",\n    type: \"boolean\",\n    default: true,\n  },\n  \"loginUserName\",\n  \"preferredJobSubmissionProtocol\",\n  \"preferredDataMovementProtocol\",\n  \"preferredBatchQueue\",\n  \"scratchLocation\",\n  \"allocationProjectNumber\",\n  \"resourceSpecificCredentialStoreToken\",\n  \"usageReportingGatewayId\",\n  \"qualityOfService\",\n  \"sshAccountProvisioner\",\n  \"groupSSHAccountProvisionerConfigs\",\n  \"sshAccountProvisionerAdditionalInfo\",\n  {\n    name: \"reservations\",\n    type: ComputeResourceReservation,\n    list: true,\n    default: BaseModel.defaultNewInstance(Array),\n  },\n  \n];\n\nexport default class GroupComputeResourcePreference extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n  }\n\n  validate() {\n    let validationResults = {};\n    if (this.isEmpty(this.loginUserName)) {\n      validationResults[\"loginUserName\"] = \"Please provide a login username.\";\n    }\n    if (this.isEmpty(this.scratchLocation)) {\n      validationResults[\"scratchLocation\"] =\n        \"Please provide a scratch location.\";\n    }\n    return validationResults;\n  }\n}\n","import BaseEnum from \"./BaseEnum\";\n\nexport default class ResourcePermissionType extends BaseEnum {}\nResourcePermissionType.init([\"WRITE\", \"READ\", \"OWNER\", \"MANAGE_SHARING\"]);\n","import BaseModel from \"./BaseModel\";\nimport Group from \"./Group\";\nimport ResourcePermissionType from \"./ResourcePermissionType\";\n\nexport default class GroupPermission extends BaseModel {\n  constructor(data = {}) {\n    super(\n      [\n        {\n          name: \"group\",\n          type: Group,\n        },\n        {\n          name: \"permissionType\",\n          type: ResourcePermissionType,\n        },\n      ],\n      data\n    );\n  }\n}\n","import BaseModel from \"./BaseModel\";\nimport BatchQueueResourcePolicy from \"./BatchQueueResourcePolicy\";\nimport ComputeResourcePolicy from \"./ComputeResourcePolicy\";\nimport GroupComputeResourcePreference from \"./GroupComputeResourcePreference\";\n\nconst FIELDS = [\n  \"gatewayId\",\n  \"groupResourceProfileId\",\n  \"groupResourceProfileName\",\n  {\n    name: \"computePreferences\",\n    type: GroupComputeResourcePreference,\n    list: true,\n    default: BaseModel.defaultNewInstance(Array),\n  },\n  {\n    name: \"computeResourcePolicies\",\n    type: ComputeResourcePolicy,\n    list: true,\n    default: BaseModel.defaultNewInstance(Array),\n  },\n  {\n    name: \"batchQueueResourcePolicies\",\n    type: BatchQueueResourcePolicy,\n    list: true,\n    default: BaseModel.defaultNewInstance(Array),\n  },\n  {\n    name: \"creationTime\",\n    type: \"date\",\n  },\n  {\n    name: \"updatedTime\",\n    type: \"date\",\n  },\n  \"defaultCredentialStoreToken\",\n  \"userHasWriteAccess\", // true if current user has write access\n];\n\nexport default class GroupResourceProfile extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n  }\n\n  getComputePreference(computeResourceId) {\n    return this.computePreferences.find(\n      (pref) => pref.computeResourceId === computeResourceId\n    );\n  }\n\n  getComputeResourcePolicy(computeResourceId) {\n    return this.computeResourcePolicies.find(\n      (pol) => pol.computeResourceId === computeResourceId\n    );\n  }\n\n  getBatchQueueResourcePolicies(computeResourceId) {\n    return this.batchQueueResourcePolicies.filter(\n      (pol) => pol.computeResourceId === computeResourceId\n    );\n  }\n\n  mergeComputeResourcePreference(\n    computeResourcePreference,\n    computeResourcePolicy,\n    batchQueueResourcePolicies\n  ) {\n    // merge/add computeResourcePreference and computeResourcePolicy\n    const existingComputeResourcePreference = this.computePreferences.find(\n      (pref) =>\n        pref.computeResourceId === computeResourcePreference.computeResourceId\n    );\n    if (existingComputeResourcePreference) {\n      Object.assign(\n        existingComputeResourcePreference,\n        computeResourcePreference\n      );\n    } else {\n      this.computePreferences.push(computeResourcePreference);\n    }\n    const existingComputeResourcePolicy = this.computeResourcePolicies.find(\n      (pol) => pol.computeResourceId === computeResourcePolicy.computeResourceId\n    );\n    if (existingComputeResourcePolicy) {\n      Object.assign(existingComputeResourcePolicy, computeResourcePolicy);\n    } else {\n      this.computeResourcePolicies.push(computeResourcePolicy);\n    }\n    // merge/add/remove batchQueueResourcePolicies\n    const existingBatchQueueResourcePolicies = this.batchQueueResourcePolicies.filter(\n      (pol) =>\n        pol.computeResourceId === computeResourcePreference.computeResourceId\n    );\n    for (const batchQueueResourcePolicy of batchQueueResourcePolicies) {\n      const existingBatchQueueResourcePolicy = existingBatchQueueResourcePolicies.find(\n        (pol) => pol.queuename === batchQueueResourcePolicy.queuename\n      );\n      if (existingBatchQueueResourcePolicy) {\n        Object.assign(\n          existingBatchQueueResourcePolicy,\n          batchQueueResourcePolicy\n        );\n        const existingBatchQueueResourcePolicyIndex = existingBatchQueueResourcePolicies.findIndex(\n          (pol) => pol.queuename === batchQueueResourcePolicy.queuename\n        );\n        if (existingBatchQueueResourcePolicyIndex >= 0) {\n          existingBatchQueueResourcePolicies.splice(\n            existingBatchQueueResourcePolicyIndex,\n            1\n          );\n        }\n      } else {\n        this.batchQueueResourcePolicies.push(batchQueueResourcePolicy);\n      }\n    }\n    for (const existingBatchQueueResourcePolicy of existingBatchQueueResourcePolicies) {\n      const existingBatchQueueResourcePolicyIndex = this.batchQueueResourcePolicies.findIndex(\n        (pol) =>\n          pol.computeResourceId ===\n            existingBatchQueueResourcePolicy.computeResourceId &&\n          pol.queuename === existingBatchQueueResourcePolicy.queuename\n      );\n      if (existingBatchQueueResourcePolicyIndex >= 0) {\n        this.batchQueueResourcePolicies.splice(\n          existingBatchQueueResourcePolicyIndex,\n          1\n        );\n      }\n    }\n  }\n\n  /**\n   * Remove compute resource preference, compute resource policy and batch queue policies.\n   * @param {string} computeResourceId\n   * @returns {boolean} true if this GroupResourceProfile was changed\n   */\n  removeComputeResource(computeResourceId) {\n    let removedChildren = false;\n    const existingComputeResourcePreferenceIndex = this.computePreferences.findIndex(\n      (pref) => pref.computeResourceId === computeResourceId\n    );\n    if (existingComputeResourcePreferenceIndex >= 0) {\n      this.computePreferences.splice(existingComputeResourcePreferenceIndex, 1);\n      removedChildren = true;\n    }\n    const existingComputeResourcePolicyIndex = this.computeResourcePolicies.findIndex(\n      (pol) => pol.computeResourceId === computeResourceId\n    );\n    if (existingComputeResourcePolicyIndex >= 0) {\n      this.computeResourcePolicies.splice(\n        existingComputeResourcePolicyIndex,\n        1\n      );\n      removedChildren = true;\n    }\n    const existingBatchQueueResourcePolicies = this.batchQueueResourcePolicies.filter(\n      (pol) => pol.computeResourceId === computeResourceId\n    );\n    for (const existingBatchQueueResourcePolicy of existingBatchQueueResourcePolicies) {\n      const existingBatchQueueResourcePolicyIndex = this.batchQueueResourcePolicies.indexOf(\n        existingBatchQueueResourcePolicy\n      );\n      this.batchQueueResourcePolicies.splice(\n        existingBatchQueueResourcePolicyIndex,\n        1\n      );\n      removedChildren = true;\n    }\n\n    return removedChildren;\n  }\n}\n","import BaseModel from \"./BaseModel\";\nimport Group from \"./Group\";\n\nconst FIELDS = [\n  \"userModelVersion\",\n  \"airavataInternalUserId\",\n  \"userId\",\n  \"gatewayId\",\n  \"email\",\n  \"firstName\",\n  \"lastName\",\n  \"enabled\",\n  \"emailVerified\",\n  \"airavataUserProfileExists\",\n  {\n    name: \"creationTime\",\n    type: \"date\",\n  },\n  {\n    name: \"groups\",\n    type: Group,\n    list: true,\n  },\n  \"userHasWriteAccess\",\n];\n\nexport default class IAMUserProfile extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n  }\n}\n","import BaseEnum from \"./BaseEnum\";\n\nexport default class NotificationPriority extends BaseEnum {}\nNotificationPriority.init([\"LOW\", \"NORMAL\", \"HIGH\"], true);\n","import BaseModel from \"./BaseModel\";\nimport NotificationPriority from \"./NotificationPriority\";\n\nconst FIELDS = [\n  \"notificationId\",\n  \"gatewayId\",\n  \"title\",\n  \"notificationMessage\",\n  {\n    name: \"creationTime\",\n    type: Date,\n  },\n  {\n    name: \"publishedTime\",\n    type: Date,\n  },\n  {\n    name: \"expirationTime\",\n    type: Date,\n  },\n  {\n    name: \"priority\",\n    type: NotificationPriority,\n  },\n  \"userHasWriteAccess\",\n];\n\nexport default class Notification extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n  }\n\n  validate() {\n    let validationResults = {};\n    if (this.isEmpty(this.title)) {\n      validationResults[\"title\"] = \"Please provide a Title for this notice.\";\n    }\n    if (\n      this.isEmpty(this.notificationMessage) ||\n      this.notificationMessage.length < 10\n    ) {\n      validationResults[\"notificationMessage\"] =\n        \"Please provide the message with minimum 10 characters.\";\n    }\n    if (this.isEmpty(this.publishedTime)) {\n      validationResults[\"publishedTime\"] = \"Please select the publish time\";\n    }\n    if (this.isEmpty(this.expirationTime)) {\n      validationResults[\"expirationTime\"] = \"Please select the expiration time\";\n    }\n    if (this.isEmpty(this.priority)) {\n      validationResults[\"priority\"] = \"Please select the priority\";\n    }\n    return validationResults;\n  }\n}\n","import BaseEnum from \"./BaseEnum\";\n\nexport default class UserStatus extends BaseEnum {}\nUserStatus.init([\n  \"ACTIVE\",\n  \"CONFIRMED\",\n  \"APPROVED\",\n  \"DELETED\",\n  \"DUPLICATE\",\n  \"GRACE_PERIOD\",\n  \"INVITED\",\n  \"DENIED\",\n  \"PENDING\",\n  \"PENDING_APPROVAL\",\n  \"PENDING_CONFIRMATION\",\n  \"SUSPENDED\",\n  \"DECLINED\",\n  \"EXPIRED\",\n]);\n","import BaseModel from \"./BaseModel\";\nimport UserStatus from \"./UserStatus\";\n\nconst FIELDS = [\n  \"userModelVersion\",\n  \"airavataInternalUserId\",\n  \"userId\",\n  \"gatewayId\",\n  \"emails\",\n  \"firstName\",\n  \"lastName\",\n  \"middleName\",\n  \"namePrefix\",\n  \"nameSuffix\",\n  \"orcidId\",\n  \"phones\",\n  \"country\",\n  \"nationality\",\n  \"homeOrganization\",\n  \"orginationAffiliation\",\n  {\n    name: \"creationTime\",\n    type: \"date\",\n  },\n  {\n    name: \"lastAccessTime\",\n    type: \"date\",\n  },\n  \"validUntil\",\n  {\n    name: \"State\",\n    type: UserStatus,\n  },\n  \"comments\",\n  \"labeledURI\",\n  \"gpgKey\",\n  \"timeZone\",\n  \"nsfDemographics\",\n  \"customDashboard\",\n];\n\nexport default class UserProfile extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n  }\n\n  get email() {\n    return this.emails != null && this.emails.length > 0\n      ? this.emails[0]\n      : null;\n  }\n}\n","import BaseModel from \"./BaseModel\";\nimport ResourcePermissionType from \"./ResourcePermissionType\";\nimport UserProfile from \"./UserProfile\";\n\nexport default class UserPermission extends BaseModel {\n  constructor(data = {}) {\n    super(\n      [\n        {\n          name: \"user\",\n          type: UserProfile,\n        },\n        {\n          name: \"permissionType\",\n          type: ResourcePermissionType,\n        },\n      ],\n      data\n    );\n  }\n}\n","import BaseModel from \"./BaseModel\";\nimport GroupPermission from \"./GroupPermission\";\nimport UserPermission from \"./UserPermission\";\nimport UserProfile from \"./UserProfile\";\nimport ResourcePermissionType from \"./ResourcePermissionType\";\n\nconst FIELDS = [\n  \"entityId\",\n  {\n    name: \"userPermissions\",\n    type: UserPermission,\n    list: true,\n    default: BaseModel.defaultNewInstance(Array),\n  },\n  {\n    name: \"groupPermissions\",\n    type: GroupPermission,\n    list: true,\n    default: BaseModel.defaultNewInstance(Array),\n  },\n  {\n    name: \"owner\",\n    type: UserProfile,\n  },\n  \"isOwner\",\n  \"hasSharingPermission\",\n];\n\nexport default class SharedEntity extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n  }\n\n  addUser(user) {\n    if (!this.userPermissions) {\n      this.userPermissions = [];\n    }\n    if (\n      !this.userPermissions.find(\n        (up) => up.user.airavataInternalUserId === user.airavataInternalUserId\n      )\n    ) {\n      this.userPermissions.push(\n        new UserPermission({\n          user: user,\n          permissionType: ResourcePermissionType.READ,\n        })\n      );\n    }\n  }\n\n  removeUser(user) {\n    this.userPermissions = this.userPermissions.filter(\n      (userPermission) =>\n        userPermission.user.airavataInternalUserId !==\n        user.airavataInternalUserId\n    );\n  }\n\n  addGroup({ group, permissionType = ResourcePermissionType.READ }) {\n    if (!this.groupPermissions) {\n      this.groupPermissions = [];\n    }\n    if (!this.groupPermissions.find((gp) => gp.group.id === group.id)) {\n      this.groupPermissions.push(\n        new GroupPermission({\n          group: group,\n          permissionType: permissionType,\n        })\n      );\n    }\n  }\n\n  removeGroup(group) {\n    this.groupPermissions = this.groupPermissions.filter(\n      (groupPermission) => groupPermission.group.id !== group.id\n    );\n  }\n\n  get nonAdminGroupPermissions() {\n    if (this.groupPermissions) {\n      return this.groupPermissions.filter(\n        (groupPermission) => !groupPermission.group.isAdminGroup\n      );\n    } else {\n      return [];\n    }\n  }\n}\n","import BaseModel from \"./BaseModel\";\n\nconst FIELDS = [\n  \"storageResourceId\",\n  \"loginUserName\",\n  \"fileSystemRootLocation\",\n  \"resourceSpecificCredentialStoreToken\",\n];\n\nexport default class StoragePreference extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n  }\n}\n","import BaseEnum from \"./BaseEnum\";\n\nexport default class SummaryType extends BaseEnum {}\nSummaryType.init([\"SSH\", \"PASSWD\", \"CERT\"], true);\n","import BaseModel from \"./BaseModel\";\n\nconst FIELDS = [\n  \"most_recent_project_id\",\n  \"most_recent_group_resource_profile_id\",\n  \"most_recent_compute_resource_id\",\n  \"application_preferences\",\n];\n\nexport default class WorkspacePreferences extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n  }\n}\n","const DEFAULT_EXPIRATION_TIME_MS = 5 * 60 * 1000;\n\nclass CacheEntry {\n  constructor(value, expireDate) {\n    this._value = value;\n    this._expireDate = expireDate;\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  get isExpired() {\n    return this._expireDate.getTime() < Date.now();\n  }\n}\n\nexport default class Cache {\n  constructor() {\n    this._cache = {};\n  }\n\n  get(key) {\n    if (this.has(key)) {\n      const cacheEntry = this._cache[key];\n      return cacheEntry.value;\n    } else {\n      return null;\n    }\n  }\n\n  put({\n    key,\n    value,\n    expireDate = new Date(Date.now() + DEFAULT_EXPIRATION_TIME_MS),\n  }) {\n    this._cache[key] = new CacheEntry(value, expireDate);\n  }\n\n  has(key) {\n    if (this._cache.hasOwnProperty(key)) {\n      const cacheEntry = this._cache[key];\n      if (cacheEntry.isExpired) {\n        delete this._cache[key];\n        return false;\n      } else {\n        return true;\n      }\n    } else {\n      return false;\n    }\n  }\n}\n","import UnhandledErrorDispatcher from \"../errors/UnhandledErrorDispatcher\";\nimport Cache from \"./Cache\";\n\nvar count = 0;\nconst parseQueryParams = function (url, queryParams = \"\") {\n  if (queryParams && typeof queryParams != \"string\") {\n    queryParams = Object.keys(queryParams)\n      .map(\n        (key) =>\n          encodeURIComponent(key) + \"=\" + encodeURIComponent(queryParams[key])\n      )\n      .join(\"&\");\n  }\n  if (queryParams && queryParams !== \"\") {\n    return url + \"?\" + queryParams;\n  } else {\n    return url;\n  }\n};\n\nconst setSpinnerDisplay = function (display) {\n  let spinner = document.getElementById(\"airavata-spinner\");\n  spinner.style.display = display;\n};\n\nconst incrementCount = function () {\n  count++;\n  if (count == 1) {\n    setSpinnerDisplay(\"block\");\n  }\n};\nconst decrementCount = function () {\n  if (count > 0) {\n    count--;\n    if (count == 0) {\n      setSpinnerDisplay(\"none\");\n    }\n  }\n};\n\nconst responseCache = new Cache();\n\nexport default {\n  showSpinner: function (promise) {\n    incrementCount();\n    promise.then(decrementCount, decrementCount);\n    // return the promise so that it can be chained\n    return promise;\n  },\n  getCSRFToken: function () {\n    var csrfToken = document.cookie\n      .split(\";\")\n      .map((val) => val.trim())\n      .filter((val) => val.startsWith(\"csrftoken\" + \"=\"))\n      .map((val) => val.split(\"=\")[1]);\n    if (csrfToken) {\n      return csrfToken[0];\n    } else {\n      return null;\n    }\n  },\n  // For POST, PUT, DELETE\n  createHeaders: function (\n    contentType = \"application/json\",\n    accept = \"application/json\"\n  ) {\n    var csrfToken = this.getCSRFToken();\n    var headers = new Headers({\n      \"Content-Type\": contentType,\n      Accept: accept,\n    });\n    if (csrfToken != null) {\n      headers.set(\"X-CSRFToken\", csrfToken);\n    }\n    return headers;\n  },\n  post: function (\n    url,\n    body,\n    queryParams = \"\",\n    {\n      mediaType = \"application/json\",\n      ignoreErrors = false,\n      showSpinner = true,\n      responseType = \"json\",\n    } = {}\n  ) {\n    var headers = this.createHeaders(mediaType);\n    // Browsers automatically handle content type for FormData request bodies\n    if (body instanceof FormData) {\n      headers.delete(\"Content-Type\");\n    }\n    url = parseQueryParams(url, queryParams);\n    return this.processFetch(url, {\n      method: \"post\",\n      body:\n        body instanceof FormData || typeof body === \"string\"\n          ? body\n          : JSON.stringify(body),\n      headers: headers,\n      credentials: \"same-origin\",\n      ignoreErrors,\n      showSpinner,\n      responseType,\n    });\n  },\n  put: function (\n    url,\n    body,\n    {\n      mediaType = \"application/json\",\n      ignoreErrors = false,\n      showSpinner = true,\n      responseType = \"json\",\n    } = {}\n  ) {\n    var headers = this.createHeaders(mediaType);\n    // Browsers automatically handle content type for FormData request bodies\n    if (body instanceof FormData) {\n      headers.delete(\"Content-Type\");\n    }\n    return this.processFetch(url, {\n      method: \"put\",\n      body:\n        body instanceof FormData || typeof body === \"string\"\n          ? body\n          : JSON.stringify(body),\n      headers: headers,\n      credentials: \"same-origin\",\n      ignoreErrors,\n      showSpinner,\n      responseType,\n    });\n  },\n  get: function (\n    url,\n    queryParams = \"\",\n    {\n      mediaType = \"application/json\",\n      ignoreErrors = false,\n      showSpinner = true,\n      cache = false,\n      responseType = \"json\",\n    } = {}\n  ) {\n    if (queryParams && typeof queryParams != \"string\") {\n      queryParams = Object.keys(queryParams)\n        .map(\n          (key) =>\n            encodeURIComponent(key) + \"=\" + encodeURIComponent(queryParams[key])\n        )\n        .join(\"&\");\n    }\n    if (queryParams) {\n      url = url + \"?\" + queryParams;\n    }\n    if (cache) {\n      if (responseCache.has(url)) {\n        return responseCache.get(url);\n      }\n    }\n    var headers = new Headers({ Accept: mediaType });\n    const fetchRequest = this.processFetch(url, {\n      method: \"get\",\n      headers: headers,\n      credentials: \"same-origin\",\n      ignoreErrors,\n      showSpinner,\n      responseType,\n    });\n    if (cache) {\n      responseCache.put({ key: url, value: fetchRequest });\n    }\n    return fetchRequest;\n  },\n  delete: function (\n    url,\n    { ignoreErrors = false, showSpinner = true, responseType = \"json\" } = {}\n  ) {\n    var headers = this.createHeaders();\n    return this.processFetch(url, {\n      method: \"delete\",\n      headers: headers,\n      credentials: \"same-origin\",\n      ignoreErrors,\n      showSpinner,\n      responseType,\n    });\n  },\n  processFetch: function (\n    url,\n    {\n      method = \"get\",\n      headers,\n      credentials = \"same-origin\",\n      body,\n      ignoreErrors = false,\n      showSpinner = true,\n      responseType = \"json\",\n    }\n  ) {\n    const fetchConfig = {\n      method,\n      headers,\n      credentials,\n    };\n    if (body) {\n      fetchConfig.body = body;\n    }\n    if (showSpinner) {\n      incrementCount();\n    }\n    return fetch(url, fetchConfig)\n      .then(\n        (response) => {\n          if (showSpinner) {\n            decrementCount();\n          }\n          if (response.ok) {\n            // No response body\n            if (response.status === 204) {\n              return Promise.resolve();\n            } else {\n              incrementCount();\n              return Promise.resolve(\n                response[responseType]().then((responseData) => {\n                  decrementCount();\n                  return responseData;\n                })\n              );\n            }\n          } else {\n            return response.json().then(\n              (json) => {\n                // if json doesn't have detail key, stringify body\n                let errorMessage = json.detail;\n                if (!(\"detail\" in json)) {\n                  errorMessage = \"Error: \" + JSON.stringify(json);\n                }\n                const error = new Error(errorMessage);\n                error.details = this.createErrorDetails({\n                  url,\n                  body,\n                  status: response.status,\n                  responseBody: json,\n                });\n                throw error;\n              },\n              () => {\n                // In case JSON parsing fails\n                const error = new Error(response.statusText);\n                error.details = this.createErrorDetails({\n                  url,\n                  body,\n                  status: response.status,\n                });\n                throw error;\n              }\n            );\n          }\n        },\n        (error) => {\n          error.details = this.createErrorDetails({ url, body });\n          throw error;\n        }\n      )\n      .catch((error) => {\n        if (showSpinner) {\n          decrementCount();\n        }\n        if (!ignoreErrors) {\n          this.reportError(error);\n        }\n        throw error;\n      });\n  },\n  createErrorDetails: function ({\n    url,\n    body,\n    status = null,\n    responseBody = null,\n  } = {}) {\n    return {\n      url,\n      body,\n      status,\n      response: responseBody,\n    };\n  },\n  reportError(error) {\n    UnhandledErrorDispatcher.reportError({\n      message: error.message,\n      error: error,\n      details: error.details,\n    });\n  },\n};\n","import FetchUtils from \"../utils/FetchUtils\";\n\nexport default class JobSubmissionService {\n  constructor() {\n    this.retrieveUrl = null;\n  }\n\n  retrieve(id) {\n    return FetchUtils.get(this.retrieveUrl, { id: id });\n  }\n}\n","import JobSubmissionService from \"./JobSubmissionService\";\n\nclass CloudJobSubmissionService extends JobSubmissionService {\n  constructor() {\n    super();\n    this.retrieveUrl = \"/api/compute/resource/details\";\n  }\n}\n\nexport default new CloudJobSubmissionService();\n","import JobSubmissionService from \"./JobSubmissionService\";\n\nclass GlobusJobSubmissionService extends JobSubmissionService {\n  constructor() {\n    super();\n    this.retrieveUrl = \"/api/job/submission/globus\";\n  }\n}\n\nexport default new GlobusJobSubmissionService();\n","import JobSubmissionService from \"./JobSubmissionService\";\n\nclass LocaJobSubmissionService extends JobSubmissionService {\n  constructor() {\n    super();\n    this.retrieveUrl = \"/api/job/submission/local\";\n  }\n}\n\nexport default new LocaJobSubmissionService();\n","import JobSubmissionService from \"./JobSubmissionService\";\n\nclass SshJobSubmissionService extends JobSubmissionService {\n  constructor() {\n    super();\n    this.retrieveUrl = \"/api/job/submission/ssh\";\n  }\n}\n\nexport default new SshJobSubmissionService();\n","import JobSubmissionService from \"./JobSubmissionService\";\n\nclass UnicoreJobSubmissionService extends JobSubmissionService {\n  constructor() {\n    super();\n    this.retrieveUrl = \"/api/job/submission/unicore\";\n  }\n}\n\nexport default new UnicoreJobSubmissionService();\n","import FetchUtils from \"../utils/FetchUtils\";\n\nexport default class DataMovementService {\n  constructor() {\n    this.retrieveUrl = null;\n  }\n\n  retrieve(id) {\n    return FetchUtils.get(this.retrieveUrl, { id: id });\n  }\n}\n","import DataMovementService from \"./DataMovementService\";\n\nclass SCPDataMovementService extends DataMovementService {\n  constructor() {\n    super();\n    this.retrieveUrl = \"/api/data/movement/gridftp\";\n  }\n}\n\nexport default new SCPDataMovementService();\n","import DataMovementService from \"./DataMovementService\";\n\nclass GridFTPDataMovementService extends DataMovementService {\n  constructor() {\n    super();\n    this.retrieveUrl = \"/api/data/movement/gridftp\";\n  }\n}\n\nexport default new GridFTPDataMovementService();\n","import DataMovementService from \"./DataMovementService\";\n\nclass UnicoreDataMovementService extends DataMovementService {\n  constructor() {\n    super();\n    this.retrieveUrl = \"/api/data/movement/gridftp\";\n  }\n}\n\nexport default new UnicoreDataMovementService();\n","import FetchUtils from \"./FetchUtils\";\n\nexport default class PaginationIterator {\n  constructor(pagedResponse, resultType = null) {\n    this.resultType = resultType;\n    this.processResponse(pagedResponse);\n  }\n\n  next() {\n    return FetchUtils.get(this._next).then((json) =>\n      this.processResponse(json)\n    );\n  }\n\n  hasNext() {\n    return this._next != null;\n  }\n\n  previous() {\n    return FetchUtils.get(this._previous).then((json) =>\n      this.processResponse(json)\n    );\n  }\n\n  hasPrevious() {\n    return this._previous != null;\n  }\n\n  processResponse(pagedResponse) {\n    this._next = pagedResponse.next;\n    this._previous = pagedResponse.previous;\n    if (this.resultType) {\n      if (Array.isArray(pagedResponse.results)) {\n        this.results = pagedResponse.results.map(\n          (result) => new this.resultType(result)\n        );\n      } else {\n        this.results = new this.resultType(pagedResponse.results);\n      }\n    } else {\n      this.results = pagedResponse.results;\n    }\n    this.offset = pagedResponse.offset;\n    this.limit = pagedResponse.limit;\n    this.count = pagedResponse.count;\n    return this;\n  }\n\n  toArray() {\n    let results = [].concat(this.results);\n    while (this.hasNext()) {\n      results = results.concat(this.next().results);\n    }\n    return results;\n  }\n}\n","import BaseModel from \"./BaseModel\";\nimport SummaryType from \"./SummaryType\";\n\nconst FIELDS = [\n  {\n    name: \"type\",\n    type: SummaryType,\n  },\n  \"gatewayId\",\n  \"username\",\n  \"publicKey\",\n  {\n    name: \"persistedTime\",\n    type: Date,\n  },\n  \"token\",\n  \"description\",\n  \"userHasWriteAccess\",\n];\n\nexport default class CredentialSummary extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n  }\n}\n","import BaseModel from \"./BaseModel\";\nimport Experiment from \"./Experiment\";\nimport ExperimentStatus from \"./ExperimentStatus\";\nimport ExperimentState from \"./ExperimentState\";\n\nconst FIELDS = [\n  \"experimentId\",\n  \"projectId\",\n  \"gatewayId\",\n  {\n    name: \"creationTime\",\n    type: \"date\",\n  },\n  \"userName\",\n  \"name\",\n  \"description\",\n  \"executionId\",\n  \"resourceHostId\",\n  {\n    name: \"experimentStatus\",\n    type: ExperimentState,\n  },\n  {\n    name: \"statusUpdateTime\",\n    type: \"date\",\n  },\n  {\n    name: \"userHasWriteAccess\",\n    type: \"boolean\",\n    default: false,\n  },\n];\n\nexport default class ExperimentSummary extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n  }\n\n  get isEditable() {\n    return this.convertToExperiment().isEditable;\n  }\n\n  convertToExperiment() {\n    // Purpose of this is to be able to access computed properties on\n    // Experiment.js\n    return new Experiment(\n      Object.assign({}, this, {\n        // Most properties are named the same as on Experiment, but the\n        // following require some conversion\n        experimentName: this.name,\n        experimentStatus: [\n          new ExperimentStatus({\n            state: this.experimentStatus,\n            timeOfStateChange: this.statusUpdateTime,\n          }),\n        ],\n      })\n    );\n  }\n}\n","import BaseModel from \"./BaseModel\";\nimport ExperimentSummary from \"./ExperimentSummary\";\n\nconst FIELDS = [\n  \"allExperimentCount\",\n  \"completedExperimentCount\",\n  \"cancelledExperimentCount\",\n  \"failedExperimentCount\",\n  \"createdExperimentCount\",\n  \"runningExperimentCount\",\n  {\n    name: \"allExperiments\",\n    type: ExperimentSummary,\n    list: true,\n  },\n  {\n    name: \"completedExperiments\",\n    type: ExperimentSummary,\n    list: true,\n  },\n  {\n    name: \"failedExperiments\",\n    type: ExperimentSummary,\n    list: true,\n  },\n  {\n    name: \"cancelledExperiments\",\n    type: ExperimentSummary,\n    list: true,\n  },\n  {\n    name: \"createdExperiments\",\n    type: ExperimentSummary,\n    list: true,\n  },\n  { name: \"runningExperiments\", type: ExperimentSummary, list: true },\n];\n\nexport default class ExperimentStatistics extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n  }\n}\n","import BaseModel from \"./BaseModel\";\n\nconst FIELDS = [\n  \"name\",\n  \"path\",\n  { name: \"createdTime\", type: \"date\" },\n  \"size\",\n  \"hidden\",\n];\n\nexport default class UserStorageDirectory extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n  }\n}\n","import BaseModel from \"./BaseModel\";\n\nconst FIELDS = [\n  \"name\",\n  \"downloadURL\",\n  \"dataProductURI\",\n  { name: \"createdTime\", type: \"date\" },\n  \"size\",\n  \"mimeType\",\n];\n\nexport default class UserStorageFile extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n  }\n}\n","import BaseModel from \"./BaseModel\";\nimport UserStorageDirectory from \"./UserStorageDirectory\";\nimport UserStorageFile from \"./UserStorageFile\";\n\nconst FIELDS = [\n  {\n    name: \"files\",\n    type: UserStorageFile,\n    list: true,\n  },\n  {\n    name: \"directories\",\n    type: UserStorageDirectory,\n    list: true,\n  },\n  {\n    name: \"parts\",\n    type: \"string\",\n    list: true,\n  },\n  {\n    name: \"isDir\",\n    type: \"boolean\",\n    list: false,\n  },\n];\n\nexport default class UserStoragePath extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n  }\n}\n","import UserStoragePath from \"./UserStoragePath\";\n\nexport default class ExperimentStoragePath extends UserStoragePath {\n}\n","import BaseModel from \"./BaseModel\";\nimport StoragePreference from \"./StoragePreference\";\n\nconst FIELDS = [\n  \"gatewayID\",\n  \"credentialStoreToken\",\n  \"computeResourcePreferences\",\n  {\n    name: \"storagePreferences\",\n    type: StoragePreference,\n    list: true,\n  },\n  \"identityServerTenant\",\n  \"identityServerPwdCredToken\",\n  \"userHasWriteAccess\",\n];\n\nexport default class GatewayResourceProfile extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n  }\n}\n","import BaseEnum from \"./BaseEnum\";\n\nexport default class IOType extends BaseEnum {}\nIOType.init([\"FILE\", \"PROPERTY\"]);\n","import BaseModel from \"./BaseModel\";\nimport IOType from \"./IOType\";\n\nconst FIELDS = [\n  \"id\",\n  \"name\",\n  \"requiredInput\",\n  \"parserId\",\n  {\n    name: \"type\",\n    type: IOType,\n  },\n];\n\nexport default class ParserInput extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n  }\n}\n","import BaseModel from \"./BaseModel\";\nimport IOType from \"./IOType\";\n\nconst FIELDS = [\n  \"id\",\n  \"name\",\n  \"requiredOutput\",\n  \"parserId\",\n  {\n    name: \"type\",\n    type: IOType,\n  },\n];\n\nexport default class ParserOutput extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n  }\n}\n","import BaseModel from \"./BaseModel\";\nimport ParserInputFile from \"./ParserInput\";\nimport ParserOutputFile from \"./ParserOutput\";\n\nconst FIELDS = [\n  \"id\",\n  \"imageName\",\n  \"outputDirPath\",\n  \"inputDirPath\",\n  \"executionCommand\",\n  {\n    name: \"inputFiles\",\n    list: true,\n    type: ParserInputFile,\n  },\n  {\n    name: \"outputFiles\",\n    list: true,\n    type: ParserOutputFile,\n  },\n  \"gatewayId\",\n];\n\nexport default class Parser extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n  }\n}\n","import BaseModel from \"./BaseModel\";\n\nconst FIELDS = [\"fileUploadMaxFileSize\", \"tusEndpoint\", \"pgaUrl\"];\n\nexport default class Settings extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n  }\n}\n","import BaseModel from \"./BaseModel\";\n\nconst FIELDS = [\n  \"storageResourceId\",\n  \"hostName\",\n  \"storageResourceDescription\",\n  \"enabled\",\n  \"dataMovementInterfaces\",\n  \"creationTime\",\n  \"updateTime\",\n];\n\nexport default class StorageResourceDescription extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n  }\n}\n","import BaseModel from \"./BaseModel\";\n\nconst FIELDS = [\n  \"userId\",\n  \"gatewayId\",\n  \"email\",\n  \"firstName\",\n  \"lastName\",\n  \"enabled\",\n  \"emailVerified\",\n  {\n    name: \"creationTime\",\n    type: \"date\",\n  },\n  \"userHasWriteAccess\",\n];\n\nexport default class UnverifiedEmailUserProfile extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n  }\n}\n","import BaseModel from \"./BaseModel\";\n\nconst FIELDS = [\"id\", \"username\", \"first_name\", \"last_name\", \"email\", \"pending_email_change\"];\n\nexport default class User extends BaseModel {\n  constructor(data = {}) {\n    super(FIELDS, data);\n  }\n}\n","import ApplicationDeploymentDescription from \"./models/ApplicationDeploymentDescription\";\nimport ApplicationInterfaceDefinition from \"./models/ApplicationInterfaceDefinition\";\nimport ApplicationModule from \"./models/ApplicationModule\";\nimport BatchQueue from \"./models/BatchQueue\";\nimport ComputeResourceDescription from \"./models/ComputeResourceDescription\";\nimport CredentialSummary from \"./models/CredentialSummary\";\nimport DataProduct from \"./models/DataProduct\";\nimport Experiment from \"./models/Experiment\";\nimport ExperimentSearchFields from \"./models/ExperimentSearchFields\";\nimport ExperimentStatistics from \"./models/ExperimentStatistics\";\nimport ExperimentStoragePath from \"./models/ExperimentStoragePath\";\nimport ExperimentSummary from \"./models/ExperimentSummary\";\nimport FullExperiment from \"./models/FullExperiment\";\nimport GatewayResourceProfile from \"./models/GatewayResourceProfile\";\nimport Group from \"./models/Group\";\nimport GroupResourceProfile from \"./models/GroupResourceProfile\";\nimport IAMUserProfile from \"./models/IAMUserProfile\";\nimport LogRecord from \"./models/LogRecord\";\nimport Notification from \"./models/Notification\";\nimport Parser from \"./models/Parser\";\nimport Project from \"./models/Project\";\nimport Settings from \"./models/Settings\";\nimport SharedEntity from \"./models/SharedEntity\";\nimport StoragePreference from \"./models/StoragePreference\";\nimport StorageResourceDescription from \"./models/StorageResourceDescription\";\nimport UnverifiedEmailUserProfile from \"./models/UnverifiedEmailUserProfile\";\nimport User from \"./models/User\";\nimport UserProfile from \"./models/UserProfile\";\nimport UserStoragePath from \"./models/UserStoragePath\";\nimport WorkspacePreferences from \"./models/WorkspacePreferences\";\n/*\nexamples:\n\nGenerating Services based on the API view set\n{\n  serviceName:{\n    url:'/example/api',\n    viewSet:true, // or array of supported view set method names\n    pagination: true/false,\n    modelClass: ModelClass,\n  }\n}\nNormal service configuration:\n{\n  serviceName:{\n    methods: {\n      serviceAction1:{\n        url:'/example/api/<look_up>',  # the <look_up> implies a path parameter lok_up, defaults to service's url\n        requestType:'post', # defaults to \"get\"\n        bodyParams:[...] # body parameter names for json parameter if body\n          params id=s a list of array else an object with the param name for the\n          body object\n        queryParams:[], # list query param names/ query param name to param\n          name mapping, defaults to service's queryParams\n        pagination:true, # whether to treat the response as a paginated\n          response, defaults to service's pagination\n        modelClass: ModelClass\n      }\n    }\n  }\n}\n */\n\nexport default {\n  ApplicationDeployments: {\n    url: \"/api/application-deployments\",\n    viewSet: true,\n    methods: {\n      getQueues: {\n        url: \"/api/application-deployments/<lookup>/queues/\",\n        requestType: \"get\",\n        modelClass: BatchQueue,\n      },\n    },\n    queryParams: [\"appModuleId\", \"groupResourceProfileId\"],\n    modelClass: ApplicationDeploymentDescription,\n  },\n  ApplicationInterfaces: {\n    url: \"/api/application-interfaces\",\n    viewSet: true,\n    modelClass: ApplicationInterfaceDefinition,\n  },\n  ApplicationModules: {\n    url: \"/api/applications\",\n    viewSet: true,\n    methods: {\n      getApplicationInterface: {\n        url: \"/api/applications/<lookup>/application_interface/\",\n        requestType: \"get\",\n        modelClass: ApplicationInterfaceDefinition,\n      },\n      getApplicationDeployments: {\n        url: \"/api/applications/<lookup>/application_deployments/\",\n        requestType: \"get\",\n        modelClass: ApplicationDeploymentDescription,\n      },\n      listAll: {\n        url: \"/api/applications/list_all/\",\n        requestType: \"get\",\n        modelClass: ApplicationModule,\n      },\n      favorite: {\n        url: \"/api/applications/<lookup>/favorite/\",\n        requestType: \"post\",\n      },\n      unfavorite: {\n        url: \"/api/applications/<lookup>/unfavorite/\",\n        requestType: \"post\",\n      },\n    },\n    modelClass: ApplicationModule,\n  },\n  ComputeResources: {\n    url: \"/api/compute-resources\",\n    viewSet: [\"retrieve\"],\n    methods: {\n      names: {\n        url: \"/api/compute-resources/all_names/\",\n        requestType: \"get\",\n      },\n      namesList: {\n        url: \"/api/compute-resources/all_names_list/\",\n        requestType: \"get\",\n      },\n    },\n    modelClass: ComputeResourceDescription,\n  },\n  CredentialSummaries: {\n    url: \"/api/credential-summaries/\",\n    viewSet: [\"list\", \"retrieve\", \"delete\"],\n    methods: {\n      allSSHCredentials: {\n        url: \"/api/credential-summaries/ssh/\",\n        requestType: \"get\",\n        modelClass: CredentialSummary,\n      },\n      allPasswordCredentials: {\n        url: \"/api/credential-summaries/password/\",\n        requestType: \"get\",\n        modelClass: CredentialSummary,\n      },\n      createSSH: {\n        url: \"/api/credential-summaries/create_ssh/\",\n        requestType: \"post\",\n        bodyParams: {\n          name: \"data\",\n        },\n        modelClass: CredentialSummary,\n      },\n      createPassword: {\n        url: \"/api/credential-summaries/create_password/\",\n        requestType: \"post\",\n        bodyParams: {\n          name: \"data\",\n        },\n        modelClass: CredentialSummary,\n      },\n    },\n    modelClass: CredentialSummary,\n  },\n  DataProducts: {\n    url: \"/api/data-products/\",\n    methods: {\n      retrieve: {\n        requestType: \"get\",\n        queryParams: {\n          lookup: \"product-uri\",\n        },\n        modelClass: DataProduct,\n      },\n    },\n  },\n  Experiments: {\n    url: \"/api/experiments/\",\n    viewSet: true,\n    methods: {\n      launch: {\n        url: \"/api/experiments/<lookup>/launch/\",\n        requestType: \"post\",\n        modelClass: Experiment,\n      },\n      clone: {\n        url: \"/api/experiments/<lookup>/clone/\",\n        requestType: \"post\",\n        modelClass: Experiment,\n      },\n      cancel: {\n        url: \"/api/experiments/<lookup>/cancel/\",\n        requestType: \"post\",\n        modelClass: Experiment,\n      },\n    },\n    modelClass: Experiment,\n  },\n  ExperimentSearch: {\n    url: \"/api/experiment-search\",\n    viewSet: [\n      {\n        name: \"list\",\n        initialDataParam: \"initialData\",\n      },\n    ],\n    modelClass: ExperimentSummary,\n    pagination: true,\n    queryParams: [\"limit\", \"offset\"].concat(\n      ExperimentSearchFields.values.map((f) => f.name)\n    ),\n  },\n  ExperimentStatistics: {\n    url: \"/api/experiment-statistics\",\n    methods: {\n      get: {\n        url: \"/api/experiment-statistics\",\n        requestType: \"get\",\n        queryParams: [\n          \"fromTime\",\n          \"toTime\",\n          \"userName\",\n          \"applicationName\",\n          \"resourceHostName\",\n          \"limit\",\n          \"offset\",\n        ],\n        pagination: true,\n        modelClass: ExperimentStatistics,\n      },\n    },\n  },\n  ExperimentStoragePaths: {\n    url: \"/api/experiment-storage\",\n    methods: {\n      get: {\n        url: \"/api/experiment-storage/<experimentId>/<path>\",\n        requestType: \"get\",\n        modelClass: ExperimentStoragePath,\n        encodePathParams: false,\n      },\n    },\n  },\n  FullExperiments: {\n    url: \"/api/full-experiments\",\n    viewSet: [\n      {\n        name: \"retrieve\",\n        initialDataParam: \"initialFullExperimentData\",\n      },\n    ],\n    modelClass: FullExperiment,\n  },\n  GatewayResourceProfile: {\n    url: \"/api/gateway-resource-profile/\",\n    methods: {\n      get: {\n        url: \"/api/gateway-resource-profile/\",\n        requestType: \"get\",\n        modelClass: GatewayResourceProfile,\n      },\n      update: {\n        requestType: \"put\",\n        bodyParams: {\n          name: \"data\",\n        },\n        modelClass: GatewayResourceProfile,\n      },\n    },\n    modelClass: GatewayResourceProfile,\n  },\n  GroupResourceProfiles: {\n    url: \"/api/group-resource-profiles/\",\n    viewSet: true,\n    modelClass: GroupResourceProfile,\n  },\n  Groups: {\n    url: \"/api/groups\",\n    viewSet: true,\n    pagination: true,\n    queryParams: [\"limit\", \"offset\"],\n    modelClass: Group,\n  },\n  IAMUserProfiles: {\n    url: \"/api/iam-user-profiles\",\n    viewSet: true,\n    pagination: true,\n    methods: {\n      enable: {\n        url: \"/api/iam-user-profiles/<lookup>/enable/\",\n        requestType: \"post\",\n        modelClass: IAMUserProfile,\n      },\n    },\n    queryParams: [\"limit\", \"offset\", \"search\"],\n    modelClass: IAMUserProfile,\n  },\n  LogRecords: {\n    url: \"/api/log\",\n    methods: {\n      send: {\n        url: \"/api/log\",\n        requestType: \"post\",\n        bodyParams: {\n          name: \"data\",\n        },\n        modelClass: LogRecord,\n      },\n    },\n    modelClass: LogRecord,\n  },\n  Parsers: {\n    url: \"/api/parsers\",\n    viewSet: true,\n    queryParams: [\"limit\", \"offset\"],\n    modelClass: Parser,\n  },\n  Projects: {\n    url: \"/api/projects\",\n    viewSet: true,\n    pagination: true,\n    methods: {\n      listAll: {\n        url: \"/api/projects/list_all/\",\n        requestType: \"get\",\n        modelClass: Project,\n      },\n    },\n    queryParams: [\"limit\", \"offset\"],\n    modelClass: Project,\n  },\n  Settings: {\n    url: \"/api/settings/\",\n    methods: {\n      get: {\n        url: \"/api/settings/\",\n        requestType: \"get\",\n        modelClass: Settings,\n      },\n    },\n  },\n  SharedEntities: {\n    url: \"/api/shared-entities\",\n    viewSet: [\"retrieve\", \"update\"],\n    methods: {\n      merge: {\n        url: \"/api/shared-entities/<lookup>/merge/\",\n        bodyParams: {\n          name: \"data\",\n        },\n        requestType: \"put\",\n        modelClass: SharedEntity,\n      },\n    },\n    modelClass: SharedEntity,\n  },\n  StoragePreferences: {\n    url: \"/api/storage-preferences/\",\n    viewSet: true,\n    modelClass: StoragePreference,\n  },\n  StorageResources: {\n    url: \"/api/storage-resources\",\n    viewSet: [\"retrieve\"],\n    methods: {\n      names: {\n        url: \"/api/storage-resources/all_names/\",\n        requestType: \"get\",\n      },\n    },\n    modelClass: StorageResourceDescription,\n  },\n  UnverifiedEmailUsers: {\n    url: \"/api/unverified-email-users\",\n    viewSet: true,\n    pagination: true,\n    queryParams: [\"limit\", \"offset\"],\n    modelClass: UnverifiedEmailUserProfile,\n  },\n  Users: {\n    url: \"/auth/users\",\n    viewSet: true,\n    methods: {\n      current: {\n        url: \"/auth/users/current/\",\n        requestType: \"get\",\n      },\n      resendEmailVerification: {\n        url: \"/auth/users/<lookup>/resend_email_verification/\",\n        requestType: \"post\",\n      },\n      verifyEmailChange: {\n        url: \"/auth/users/<lookup>/verify_email_change/\",\n        requestType: \"post\",\n        bodyParams: {\n          name: \"data\",\n        },\n        modelClass: User,\n      },\n    },\n    modelClass: User,\n  },\n  UserProfiles: {\n    url: \"/api/user-profiles\",\n    viewSet: [\"list\", \"retrieve\"],\n    modelClass: UserProfile,\n  },\n  UserStoragePaths: {\n    url: \"/api/user-storage\",\n    methods: {\n      get: {\n        url: \"/api/user-storage/<path>\",\n        requestType: \"get\",\n        modelClass: UserStoragePath,\n        encodePathParams: false,\n      },\n    },\n  },\n  WorkspacePreferences: {\n    url: \"/api/workspace-preferences\",\n    methods: {\n      get: {\n        url: \"/api/workspace-preferences\",\n        requestType: \"get\",\n        modelClass: WorkspacePreferences,\n      },\n    },\n  },\n  ManageNotifications: {\n    url: \"/api/manage-notifications/\",\n    viewSet: true,\n    pagination: false,\n    modelClass: Notification,\n  },\n  APIServerStatusCheck: {\n    url: \"/api/api-status-check\",\n    methods: {\n      get: {\n        url: \"/api/api-status-check/\",\n        requestType: \"get\",\n      },\n    },\n  },\n};\n","import PaginationIterator from \"../utils/PaginationIterator\";\nimport FetchUtils from \"../utils/FetchUtils\";\nimport serviceConfiguration from \"../service_config\";\n\nconst postKey = \"post\";\nconst getKey = \"get\";\nconst putKey = \"put\";\nconst delKey = \"delete\";\n\nconst parsePathParams = function (url) {\n  var pathParamsRegEx = new RegExp(\"<[a-zA-Z0-9_]+(:[a-zA-Z0-9_]*)?>\", \"g\");\n  let pathParamsMatch = url.match(pathParamsRegEx);\n  let pathParams = {};\n  if (!pathParamsMatch) {\n    return pathParams;\n  }\n  for (let pathParamMatch of pathParamsMatch) {\n    let pathParam = pathParamMatch.split(\":\");\n    if (pathParam.length == 2) {\n      pathParams[pathParam[1]] = pathParam[0].replace(/<|>/gi, \"\");\n    } else {\n      pathParams[pathParam[0].replace(/<|>/gi, \"\")] = null;\n    }\n  }\n  return pathParams;\n};\n\nconst parseServiceMapping = function (serviceConfiguration) {\n  const mappedFunctions = {};\n  let viewSetFunctions = [];\n  if (serviceConfiguration.viewSet === true) {\n    viewSetFunctions = [\"list\", \"create\", \"update\", \"delete\", \"retrieve\"];\n  } else if (serviceConfiguration.viewSet instanceof Array) {\n    viewSetFunctions = serviceConfiguration.viewSet;\n  }\n  let url = serviceConfiguration.url;\n  if (!url.endsWith(\"/\")) {\n    url = url + \"/\";\n  }\n  let modelClass = serviceConfiguration.modelClass;\n  let queryParams = serviceConfiguration.queryParams;\n  let defaultPagination = serviceConfiguration.pagination ? true : false;\n  let encodePathParams =\n    \"encodePathParams\" in serviceConfiguration\n      ? serviceConfiguration.encodePathParams\n      : true;\n  for (let viewSetFunction of viewSetFunctions) {\n    let viewSetFunctionName = viewSetFunction;\n    let pagination = defaultPagination;\n    if (typeof viewSetFunctionName !== \"string\") {\n      viewSetFunctionName = viewSetFunction.name;\n      if (\"pagination\" in viewSetFunction) {\n        pagination = viewSetFunction.pagination;\n      }\n    }\n    switch (viewSetFunctionName) {\n      case \"list\":\n        mappedFunctions[\"list\"] = {\n          url: url,\n          requestType: getKey,\n          modelClass: modelClass,\n          queryParams: queryParams,\n          initialDataParam: viewSetFunction.initialDataParam,\n          encodePathParams: encodePathParams,\n        };\n        break;\n      case \"create\":\n        mappedFunctions[\"create\"] = {\n          url: url,\n          requestType: postKey,\n          bodyParams: {\n            name: \"data\",\n          },\n          modelClass: modelClass,\n          queryParams: queryParams,\n          encodePathParams: encodePathParams,\n        };\n        break;\n      case \"update\":\n        mappedFunctions[\"update\"] = {\n          url: url + \"<lookup>/\",\n          requestType: putKey,\n          bodyParams: {\n            name: \"data\",\n          },\n          modelClass: modelClass,\n          queryParams: queryParams,\n          encodePathParams: encodePathParams,\n        };\n        break;\n      case \"retrieve\":\n        mappedFunctions[\"retrieve\"] = {\n          url: url + \"<lookup>/\",\n          requestType: getKey,\n          modelClass: modelClass,\n          queryParams: queryParams,\n          initialDataParam: viewSetFunction.initialDataParam,\n          encodePathParams: encodePathParams,\n        };\n        break;\n      case \"delete\":\n        mappedFunctions[\"delete\"] = {\n          url: url + \"<lookup>/\",\n          requestType: delKey,\n          modelClass: modelClass,\n          queryParams: queryParams,\n          encodePathParams: encodePathParams,\n        };\n        break;\n      default:\n        // Assume all fields have been provided\n        mappedFunctions[viewSetFunctionName] = viewSetFunction;\n        break;\n    }\n    mappedFunctions[viewSetFunctionName].pagination = pagination;\n  }\n  if (\"methods\" in serviceConfiguration) {\n    for (let methodName of Object.keys(serviceConfiguration[\"methods\"])) {\n      let methodConfig = serviceConfiguration[\"methods\"][methodName];\n      mappedFunctions[methodName] = {\n        url: methodConfig.url || url,\n        requestType: methodConfig.requestType || getKey,\n        queryParams: methodConfig.queryParams || queryParams,\n        pagination:\n          \"pagination\" in methodConfig\n            ? methodConfig.pagination\n            : defaultPagination,\n        encodePathParams:\n          \"encodePathParams\" in methodConfig\n            ? methodConfig.encodePathParams\n            : true,\n      };\n      if (\"modelClass\" in methodConfig) {\n        mappedFunctions[methodName][\"modelClass\"] = methodConfig.modelClass;\n      }\n      if (\"bodyParams\" in methodConfig) {\n        mappedFunctions[methodName][\"bodyParams\"] = methodConfig.bodyParams;\n      }\n      if (\"pathParams\" in methodConfig) {\n        mappedFunctions[methodName][\"pathParams\"] = methodConfig.pathParams;\n      }\n    }\n  }\n  return mappedFunctions;\n};\n\nconst parseQueryMapping = function (queryParamsMapping) {\n  let newQueryParamMapping = {};\n  if (!queryParamsMapping) {\n    return newQueryParamMapping;\n  }\n  // names of query parameters as an array of strings\n  if (queryParamsMapping instanceof Array) {\n    for (let queryParam of queryParamsMapping) {\n      if (typeof queryParam === \"string\") {\n        newQueryParamMapping[queryParam] = null;\n      }\n    }\n  }\n  // mapping of query parameters as an object of names/values\n  else {\n    for (let queryParam of Object.keys(queryParamsMapping)) {\n      newQueryParamMapping[queryParam] = queryParamsMapping[queryParam];\n    }\n  }\n  return newQueryParamMapping;\n};\n\nclass ServiceFactory {\n  constructor(serviceConfigurations) {\n    const parsedConfigurations = {};\n    for (let serviceName of Object.keys(serviceConfigurations)) {\n      parsedConfigurations[serviceName] = parseServiceMapping(\n        serviceConfigurations[serviceName]\n      );\n    }\n    this.serviceConfigurations = parsedConfigurations;\n  }\n\n  /*\n    Creates service object based serviceName in service configuration\n     */\n  service(serviceName) {\n    if (!serviceName) {\n      throw new TypeError(\"Invalid Service Name\");\n    } else if (!(serviceName in this.serviceConfigurations)) {\n      throw new Error(\"Service :\" + serviceName + \" could not be found\");\n    }\n    let serviceConfiguration = this.serviceConfigurations[serviceName];\n    let serviceObj = {};\n    let functionNames = Object.keys(serviceConfiguration);\n    for (let functionName of functionNames) {\n      let config = serviceConfiguration[functionName];\n      switch (config.requestType.toLowerCase()) {\n        case postKey:\n        case getKey:\n        case putKey:\n        case delKey:\n          break;\n        default:\n          throw new TypeError(\n            \"Invalid request type: \" +\n              config.requestType +\n              \" for the function: \" +\n              functionName +\n              \" in the service: \" +\n              serviceName\n          );\n      }\n      let pathParamsMapping = parsePathParams(config.url);\n      let queryParamsMapping = parseQueryMapping(config.queryParams);\n      serviceObj[functionName] = function (\n        params = {},\n        { ignoreErrors, showSpinner, cache } = {\n          ignoreErrors: false,\n          showSpinner: true,\n          cache: false,\n        }\n      ) {\n        let url = config.url;\n        let paramKeys = Object.keys(params);\n        let queryParams = {};\n        let bodyParams = {};\n        let initialData = undefined;\n        for (let paramKey of paramKeys) {\n          if (paramKey in pathParamsMapping) {\n            if (pathParamsMapping[paramKey] !== null) {\n              url = url.replace(\n                \"<\" + pathParamsMapping[paramKey] + \":\" + paramKey + \">\",\n                config.encodePathParams\n                  ? encodeURIComponent(params[paramKey])\n                  : params[paramKey]\n              );\n            } else {\n              url = url.replace(\n                \"<\" + paramKey + \">\",\n                config.encodePathParams\n                  ? encodeURIComponent(params[paramKey])\n                  : params[paramKey]\n              );\n            }\n          } else if (paramKey in queryParamsMapping) {\n            if (queryParamsMapping[paramKey] === null) {\n              queryParams[paramKey] = params[paramKey];\n            } else {\n              queryParams[queryParamsMapping[paramKey]] = params[paramKey];\n            }\n          } else if (\n            (config.requestType == postKey || config.requestType == putKey) &&\n            config.bodyParams instanceof Array &&\n            paramKey in config.bodyParams\n          ) {\n            bodyParams[paramKey] = params[paramKey];\n          } else if (\n            (config.requestType == postKey || config.requestType == putKey) &&\n            config.bodyParams !== null &&\n            config.bodyParams.name == paramKey\n          ) {\n            bodyParams = params[paramKey];\n          } else if (\n            config.initialDataParam &&\n            paramKey === config.initialDataParam\n          ) {\n            initialData = params[paramKey];\n          }\n        }\n        let paginationHandler = (data) => {\n          if (config.pagination === true && \"next\" in data) {\n            return new PaginationIterator(data, config.modelClass);\n          } else if (data instanceof Array) {\n            return data.map((item) => resultHandler(item));\n          } else {\n            return resultHandler(data);\n          }\n        };\n        let resultHandler = (data) => {\n          return config.modelClass ? new config.modelClass(data) : data;\n        };\n        switch (config.requestType.toLowerCase()) {\n          case postKey:\n            return FetchUtils.post(url, bodyParams, queryParams, {\n              ignoreErrors,\n              showSpinner,\n            }).then(resultHandler);\n          case getKey:\n            if (initialData) {\n              return Promise.resolve(paginationHandler(initialData));\n            } else {\n              return FetchUtils.get(url, queryParams, {\n                ignoreErrors,\n                showSpinner,\n                cache,\n              }).then(paginationHandler);\n            }\n          case putKey:\n            return FetchUtils.put(url, bodyParams, {\n              ignoreErrors,\n              showSpinner,\n            }).then(resultHandler);\n          case delKey:\n            return FetchUtils.delete(url, { ignoreErrors, showSpinner });\n        }\n      };\n    }\n    return serviceObj;\n  }\n}\n\nexport default new ServiceFactory(serviceConfiguration);\n","class Session {\n  init({ username, airavataInternalUserId, isGatewayAdmin = false }) {\n    this.username = username;\n    this.airavataInternalUserId = airavataInternalUserId;\n    this.isGatewayAdmin = isGatewayAdmin;\n  }\n}\n\nconst session = new Session();\nif (window.AiravataPortalSessionData) {\n  // Initialize portal session object with data provided by base.html template\n  session.init(window.AiravataPortalSessionData);\n}\n\nexport default session;\n","import { services } from \"../index\";\n\nconst createExperiment = async function ({\n  applicationName, // name of the application interface (usually the same as the application module)\n  applicationId, // the id of the application module\n  applicationInterfaceId, // the id of the application interface\n  computeResourceName,\n  experimentName,\n  experimentInputs,\n} = {}) {\n  let applicationInterface = null;\n  if (applicationInterfaceId) {\n    applicationInterface = await loadApplicationInterfaceById(\n      applicationInterfaceId\n    );\n  } else if (applicationId) {\n    applicationInterface = await loadApplicationInterfaceByApplicationModuleId(\n      applicationId\n    );\n  } else if (applicationName) {\n    applicationInterface = await loadApplicationInterfaceByName(\n      applicationName\n    );\n  } else {\n    throw new Error(\n      \"Either applicationInterfaceId or applicationId or applicationName is required\"\n    );\n  }\n  const applicationModuleId = applicationInterface.applicationModuleId;\n  let computeResourceId = null;\n  if (computeResourceName) {\n    computeResourceId = await loadComputeResourceIdByName(computeResourceName);\n  } else {\n    throw new Error(\"computeResourceName is required\");\n  }\n  let groupResourceProfile = await loadGroupResourceProfile(computeResourceId);\n  let deployments = await loadApplicationDeployments(\n    applicationModuleId,\n    groupResourceProfile\n  );\n  const deployment = deployments.find(\n    (d) => d.computeHostId === computeResourceId\n  );\n  if (!deployment) {\n    throw new Error(\n      `Couldn't find a deployment for compute resource ${computeResourceId}`\n    );\n  }\n  let queueDescription = await loadQueue(deployment);\n  let workspacePreferences = await loadWorkspacePreferences();\n  const projectId = workspacePreferences.most_recent_project_id;\n\n  const experiment = applicationInterface.createExperiment();\n  if (experimentName) {\n    experiment.experimentName = experimentName;\n  } else {\n    experiment.experimentName = `${\n      applicationInterface.applicationName\n    } on ${new Date().toLocaleString([], {\n      dateStyle: \"medium\",\n      timeStyle: \"short\",\n    })}`;\n  }\n  experiment.projectId = projectId;\n  experiment.userConfigurationData.groupResourceProfileId =\n    groupResourceProfile.groupResourceProfileId;\n  experiment.userConfigurationData.computationalResourceScheduling.resourceHostId = computeResourceId;\n  experiment.userConfigurationData.computationalResourceScheduling.totalCPUCount =\n    queueDescription.defaultCPUCount;\n  experiment.userConfigurationData.computationalResourceScheduling.nodeCount =\n    queueDescription.defaultNodeCount;\n  experiment.userConfigurationData.computationalResourceScheduling.wallTimeLimit =\n    queueDescription.defaultWalltime;\n  experiment.userConfigurationData.computationalResourceScheduling.queueName =\n    queueDescription.queueName;\n\n  if (experimentInputs) {\n    for (let input of experiment.experimentInputs) {\n      if (input.name in experimentInputs) {\n        input.value = experimentInputs[input.name];\n      }\n    }\n  }\n  return experiment;\n};\n\nconst loadApplicationInterfaceByName = async function (applicationName) {\n  const applicationInterfaces = await services.ApplicationInterfaceService.list();\n  const applicationInterface = applicationInterfaces.find(\n    (ai) => ai.applicationName === applicationName\n  );\n  if (!applicationInterface) {\n    throw new Error(\n      `Could not find application interface named ${applicationName}`\n    );\n  }\n  return applicationInterface;\n};\n\nconst loadApplicationInterfaceById = async function (applicationInterfaceId) {\n  return await services.ApplicationInterfaceService.retrieve({\n    lookup: applicationInterfaceId,\n  });\n};\n\nconst loadApplicationInterfaceByApplicationModuleId = async function (\n  applicationId\n) {\n  return await services.ApplicationModuleService.getApplicationInterface({\n    lookup: applicationId,\n  });\n};\n\nconst loadComputeResourceIdByName = async function (computeResourceName) {\n  const computeResourceNames = await services.ComputeResourceService.names();\n  for (const computeResourceId in computeResourceNames) {\n    if (\n      computeResourceNames.hasOwnProperty(computeResourceId) &&\n      computeResourceNames[computeResourceId] === computeResourceName\n    ) {\n      return computeResourceId;\n    }\n  }\n  throw new Error(\n    `Could not find compute resource with name ${computeResourceName}`\n  );\n};\n\nconst loadGroupResourceProfile = async function (computeResourceId) {\n  const groupResourceProfiles = await services.GroupResourceProfileService.list();\n  const groupResourceProfile = groupResourceProfiles.find((grp) => {\n    for (let computePref of grp.computePreferences) {\n      if (computePref.computeResourceId === computeResourceId) {\n        return true;\n      }\n    }\n    return false;\n  });\n  if (!groupResourceProfile) {\n    throw new Error(\n      `Couldn't find a group resource profile for compute resource ${computeResourceId}`\n    );\n  }\n  return groupResourceProfile;\n};\n\nconst loadApplicationDeployments = async function (\n  applicationModuleId,\n  groupResourceProfile\n) {\n  return await services.ApplicationDeploymentService.list({\n    appModuleId: applicationModuleId,\n    groupResourceProfileId: groupResourceProfile.groupResourceProfileId,\n  });\n};\n\nconst loadQueue = async function (applicationDeployment) {\n  const queues = await services.ApplicationDeploymentService.getQueues({\n    lookup: applicationDeployment.appDeploymentId,\n  });\n  const queue = queues.find((q) => q.isDefaultQueue);\n  if (!queue) {\n    throw new Error(\n      \"Couldn't find a default queue for deployment \" +\n        applicationDeployment.appDeploymentId\n    );\n  }\n  return queue;\n};\n\nconst loadWorkspacePreferences = async function () {\n  return await services.WorkspacePreferencesService.get();\n};\n\nconst loadExperiment = async function (experimentId) {\n  return await services.ExperimentService.retrieve({ lookup: experimentId });\n};\n\nconst readDataProduct = async function (\n  dataProductURI,\n  { bodyType = \"text\" } = {}\n) {\n  return await fetch(\n    `/sdk/download/?data-product-uri=${encodeURIComponent(dataProductURI)}`,\n    {\n      credentials: \"same-origin\",\n    }\n  ).then((r) => {\n    if (r.status === 404) {\n      return null;\n    }\n    if (!r.ok) {\n      throw new Error(r.statusText);\n    }\n    return r[bodyType]();\n  });\n};\n\nconst readExperimentDataObject = async function (\n  experimentId,\n  name,\n  dataType,\n  { bodyType = \"text\" } = {}\n) {\n  if (dataType !== \"input\" && dataType !== \"output\") {\n    throw new Error(\"dataType should be one of 'input' or 'output'\");\n  }\n  const experiment = await loadExperiment(experimentId);\n  const dataObjectsField =\n    dataType === \"input\" ? \"experimentInputs\" : \"experimentOutputs\";\n  const dataObject = experiment[dataObjectsField].find(\n    (dataObj) => dataObj.name === name\n  );\n  if (dataObject.value && dataObject.type.isFileValueType) {\n    const downloads = dataObject.value\n      .split(\",\")\n      .map((dp) => readDataProduct(dp, { bodyType }));\n    if (downloads.length === 1) {\n      return await downloads[0];\n    } else {\n      return await Promise.all(downloads);\n    }\n  }\n  return null;\n};\n\nconst readInputFile = async function (\n  experimentId,\n  inputName,\n  { bodyType = \"text\" } = {}\n) {\n  return await readExperimentDataObject(experimentId, inputName, \"input\", {\n    bodyType,\n  });\n};\n\nconst readOutputFile = async function (\n  experimentId,\n  outputName,\n  { bodyType = \"text\" } = {}\n) {\n  return await readExperimentDataObject(experimentId, outputName, \"output\", {\n    bodyType,\n  });\n};\n\nexport { createExperiment, readInputFile, readOutputFile, readDataProduct };\n\nexport default {\n  createExperiment,\n  readInputFile,\n  readOutputFile,\n  readDataProduct,\n};\n","function sortIgnoreCase(arr, keyFunction) {\n  arr.sort((a, b) =>\n    keyFunction(a).toLowerCase().localeCompare(keyFunction(b).toLowerCase())\n  );\n  return arr;\n}\n\nexport default {\n  sortIgnoreCase,\n};\n","import ErrorUtils from \"./errors/ErrorUtils\";\nimport UnhandledError from \"./errors/UnhandledError\";\nimport UnhandledErrorDispatcher from \"./errors/UnhandledErrorDispatcher\";\nimport UnhandledErrorDisplayList from \"./errors/UnhandledErrorDisplayList\";\n\nimport ApplicationDeploymentDescription from \"./models/ApplicationDeploymentDescription\";\nimport ApplicationInterfaceDefinition from \"./models/ApplicationInterfaceDefinition\";\nimport ApplicationModule from \"./models/ApplicationModule\";\nimport BaseModel from \"./models/BaseModel\";\nimport BatchQueue from \"./models/BatchQueue\";\nimport BatchQueueResourcePolicy from \"./models/BatchQueueResourcePolicy\";\nimport CommandObject from \"./models/CommandObject\";\nimport ComputationalResourceSchedulingModel from \"./models/ComputationalResourceSchedulingModel\";\nimport ComputeResourcePolicy from \"./models/ComputeResourcePolicy\";\nimport ComputeResourceReservation from \"./models/ComputeResourceReservation\";\nimport DataProduct from \"./models/DataProduct\";\nimport DataType from \"./models/DataType\";\nimport Experiment from \"./models/Experiment\";\nimport ExperimentSearchFields from \"./models/ExperimentSearchFields\";\nimport ExperimentState from \"./models/ExperimentState\";\nimport FullExperiment from \"./models/FullExperiment\";\nimport Group from \"./models/Group\";\nimport GroupComputeResourcePreference from \"./models/GroupComputeResourcePreference\";\nimport GroupPermission from \"./models/GroupPermission\";\nimport GroupResourceProfile from \"./models/GroupResourceProfile\";\nimport IAMUserProfile from \"./models/IAMUserProfile\";\nimport InputDataObjectType from \"./models/InputDataObjectType\";\nimport JobState from \"./models/JobState\";\nimport Notification from \"./models/Notification\";\nimport NotificationPriority from \"./models/NotificationPriority\";\nimport OutputDataObjectType from \"./models/OutputDataObjectType\";\nimport ParallelismType from \"./models/ParallelismType\";\nimport Project from \"./models/Project\";\nimport ResourcePermissionType from \"./models/ResourcePermissionType\";\nimport SetEnvPaths from \"./models/SetEnvPaths\";\nimport SharedEntity from \"./models/SharedEntity\";\nimport StoragePreference from \"./models/StoragePreference\";\nimport SummaryType from \"./models/SummaryType\";\nimport UserConfigurationData from \"./models/UserConfigurationData\";\nimport UserPermission from \"./models/UserPermission\";\nimport WorkspacePreferences from \"./models/WorkspacePreferences\";\n\nimport CloudJobSubmissionService from \"./services/CloudJobSubmissionService\";\nimport GlobusJobSubmissionService from \"./services/GlobusJobSubmissionService\";\nimport LocaJobSubmissionService from \"./services/LocaJobSubmissionService\";\nimport SshJobSubmissionService from \"./services/SshJobSubmissionService\";\nimport UnicoreJobSubmissionService from \"./services/UnicoreJobSubmissionService\";\nimport SCPDataMovementService from \"./services/SCPDataMovementService\";\nimport GridFTPDataMovementService from \"./services/GridFTPDataMovementService\";\nimport UnicoreDataMovementService from \"./services/UnicoreDataMovementService\";\nimport ServiceFactory from \"./services/ServiceFactory\";\n\nimport Session from \"./session/Session\";\n\nimport ExperimentUtils from \"./utils/ExperimentUtils\";\nimport FetchUtils from \"./utils/FetchUtils\";\nimport PaginationIterator from \"./utils/PaginationIterator\";\nimport StringUtils from \"./utils/StringUtils\";\n\nconst errors = {\n  ErrorUtils,\n  UnhandledError,\n  UnhandledErrorDispatcher,\n  UnhandledErrorDisplayList,\n};\n\nconst models = {\n  ApplicationDeploymentDescription,\n  ApplicationInterfaceDefinition,\n  ApplicationModule,\n  BaseModel,\n  BatchQueue,\n  BatchQueueResourcePolicy,\n  CommandObject,\n  ComputationalResourceSchedulingModel,\n  ComputeResourcePolicy,\n  ComputeResourceReservation,\n  DataProduct,\n  DataType,\n  Experiment,\n  ExperimentSearchFields,\n  ExperimentState,\n  FullExperiment,\n  Group,\n  GroupComputeResourcePreference,\n  GroupPermission,\n  GroupResourceProfile,\n  IAMUserProfile,\n  InputDataObjectType,\n  JobState,\n  Notification,\n  NotificationPriority,\n  OutputDataObjectType,\n  ParallelismType,\n  Project,\n  ResourcePermissionType,\n  SetEnvPaths,\n  SharedEntity,\n  StoragePreference,\n  SummaryType,\n  UserConfigurationData,\n  UserPermission,\n  WorkspacePreferences,\n};\n\nconst services = {\n  APIServerStatusCheckService: ServiceFactory.service(\"APIServerStatusCheck\"),\n  ApplicationDeploymentService: ServiceFactory.service(\n    \"ApplicationDeployments\"\n  ),\n  ApplicationInterfaceService: ServiceFactory.service(\"ApplicationInterfaces\"),\n  ApplicationModuleService: ServiceFactory.service(\"ApplicationModules\"),\n  CloudJobSubmissionService,\n  ComputeResourceService: ServiceFactory.service(\"ComputeResources\"),\n  CredentialSummaryService: ServiceFactory.service(\"CredentialSummaries\"),\n  DataProductService: ServiceFactory.service(\"DataProducts\"),\n  ExperimentSearchService: ServiceFactory.service(\"ExperimentSearch\"),\n  ExperimentService: ServiceFactory.service(\"Experiments\"),\n  ExperimentStatisticsService: ServiceFactory.service(\"ExperimentStatistics\"),\n  ExperimentStoragePathService: ServiceFactory.service(\n    \"ExperimentStoragePaths\"\n  ),\n  FullExperimentService: ServiceFactory.service(\"FullExperiments\"),\n  GatewayResourceProfileService: ServiceFactory.service(\n    \"GatewayResourceProfile\"\n  ),\n  GlobusJobSubmissionService,\n  GridFTPDataMovementService,\n  GroupResourceProfileService: ServiceFactory.service(\"GroupResourceProfiles\"),\n  GroupService: ServiceFactory.service(\"Groups\"),\n  LocaJobSubmissionService,\n  LoggingService: ServiceFactory.service(\"LogRecords\"),\n  IAMUserProfileService: ServiceFactory.service(\"IAMUserProfiles\"),\n  ManageNotificationService: ServiceFactory.service(\"ManageNotifications\"),\n\n  ParserService: ServiceFactory.service(\"Parsers\"),\n  ProjectService: ServiceFactory.service(\"Projects\"),\n  SCPDataMovementService,\n  ServiceFactory,\n  SettingsService: ServiceFactory.service(\"Settings\"),\n  SharedEntityService: ServiceFactory.service(\"SharedEntities\"),\n  SshJobSubmissionService,\n  StoragePreferenceService: ServiceFactory.service(\"StoragePreferences\"),\n  StorageResourceService: ServiceFactory.service(\"StorageResources\"),\n  UnicoreDataMovementService,\n  UnicoreJobSubmissionService,\n  UnverifiedEmailUserProfileService: ServiceFactory.service(\n    \"UnverifiedEmailUsers\"\n  ),\n  UserProfileService: ServiceFactory.service(\"UserProfiles\"),\n  UserService: ServiceFactory.service(\"Users\"),\n  UserStoragePathService: ServiceFactory.service(\"UserStoragePaths\"),\n  WorkspacePreferencesService: ServiceFactory.service(\"WorkspacePreferences\"),\n};\n\nconst session = {\n  Session,\n};\n\nconst utils = {\n  ExperimentUtils,\n  FetchUtils,\n  PaginationIterator,\n  StringUtils,\n};\n\nexport default {\n  errors,\n  models,\n  services,\n  session,\n  utils,\n};\n\nexport { errors, models, services, session, utils };\n","<template>\n  <div class=\"btn-group ml-3\">\n    <div class=\"dropdown\">\n      <a\n        href=\"#\"\n        class=\"dropdown-toggle text-dark\"\n        id=\"dropdownNoticeButton\"\n        data-toggle=\"dropdown\"\n        title=\"Notifications\"\n        aria-haspopup=\"true\"\n        aria-expanded=\"false\"\n      >\n        <span\n          class=\"fa-stack fa-1x has-badge\"\n          :data-count=\"unreadCount\"\n          id=\"unread_notification_count\"\n        >\n          <i class=\"fa fa-circle fa-stack-2x fa-inverse\"></i>\n          <i class=\"fa fa-bell fa-stack-1x\"></i>\n        </span>\n      </a>\n      <div\n        class=\"dropdown-menu widget-notifications no-padding\"\n        style=\"width: 300px;\"\n      >\n        <div class=\"notifications-list\">\n          <div class=\"text-center text-primary\">Notifications</div>\n\n          <template v-for=\"notice in unreadNotices\">\n            <div class=\"dropdown-divider\" :key=\"notice.notificationId\"></div>\n            <div class=\"dropdown-item\" :key=\"notice.notificationId\">\n              <div>\n                <span\n                  class=\"notification-title text-wrap\"\n                  :class=\"textColor(notice)\"\n                  >{{ notice.title }}</span\n                >\n                <a\n                  v-if=\"!notice.is_read\"\n                  class=\"fas fa-dot-circle\"\n                  data-toggle=\"tooltip\"\n                  data-placement=\"left\"\n                  title=\"Mark as read\"\n                  :id=\"notice.notificationId\"\n                  @click=\"ackNotification(notice)\"\n                >\n                </a>\n              </div>\n              <div\n                class=\"notification-description text-wrap\"\n                id=\"notification_description\"\n              >\n                <strong>{{ notice.notificationMessage }}</strong>\n              </div>\n              <div class=\"notification-ago time\">\n                {{ fromNow(notice.publishedTime) }}\n              </div>\n            </div>\n          </template>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport moment from \"moment\";\nimport { utils } from \"django-airavata-api\";\n\nexport default {\n  name: \"gateway-notices-container\",\n  props: [\"notices\", \"unreadCount\"],\n  methods: {\n    fromNow(date) {\n      return moment(date).fromNow();\n    },\n    ackNotification(notice) {\n      utils.FetchUtils.get(notice.url).then(() => {\n        notice.is_read = true;\n        this.unreadCount--;\n      });\n    },\n    textColor(notice) {\n      if (notice.priority === 0) {\n        return \"text-primary\";\n      } else if (notice.priority === 1) {\n        return \"text-warning\";\n      } else if (notice.priority === 2) {\n        return \"text-danger\";\n      }\n    },\n  },\n  computed: {\n    unreadNotices() {\n      return this.notices;\n    },\n  },\n};\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GatewayNoticesContainer.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GatewayNoticesContainer.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./GatewayNoticesContainer.vue?vue&type=template&id=42eb33c0&\"\nimport script from \"./GatewayNoticesContainer.vue?vue&type=script&lang=js&\"\nexport * from \"./GatewayNoticesContainer.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from \"vue\";\nimport GatewayNoticesContainer from \"./components/GatewayNoticesContainer\";\n\nnew Vue({\n  render(h) {\n    return h(GatewayNoticesContainer, {\n      props: {\n        unreadCount: this.unreadCount,\n        notices: this.notices,\n      },\n    });\n  },\n  data() {\n    return {\n      unreadCount: null,\n      notices: null,\n    };\n  },\n  beforeMount() {\n    this.unreadCount = parseInt(this.$el.dataset.unreadCount);\n    this.notices = JSON.parse(this.$el.dataset.notices);\n  },\n}).$mount(\"#gateway-notices\");\n"],"sourceRoot":""}