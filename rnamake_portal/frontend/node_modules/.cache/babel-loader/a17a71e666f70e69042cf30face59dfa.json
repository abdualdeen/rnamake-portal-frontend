{"ast":null,"code":"var _jsxFileName = \"/home/vanishing/git/HCC-rnamake-frontend/rnamake_portal/frontend/src/pages/PDBSettings.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\n//import * as React from 'react';\nimport React, { useState, useCallback } from 'react';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\nimport FileExplorer from '../components/FileExplorer';\nimport { useDropzone } from 'react-dropzone';\nimport dragNDropBox from '../graphics/dragNDropBox.png';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PDBSettings() {\n  _s();\n\n  const [cloudUpload, setCloudUpload] = useState(0);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"PDB file and Base Pairs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          accept: \"*\" //className={className.input}\n          ,\n          style: {\n            display: 'none'\n          },\n          id: \"raised-button-file\",\n          multiple: true,\n          type: \"file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"raised-button-file\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"raised\",\n            component: \"span\",\n            children: \"Local Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FlexRow, {\n          children: /*#__PURE__*/_jsxDEV(MyDropline, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            cloudUpload ? setCloudUpload(0) : setCloudUpload(1);\n          },\n          children: \"Cloud Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(FileExplorer, {\n          cloudUpload: cloudUpload,\n          setCloudUpload: setCloudUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PDBSettings, \"7Ituic/ZFiEYExhEocRKeRXOnxo=\");\n\n_c = PDBSettings;\n\nfunction MyDropline() {\n  _s2();\n\n  const onDrop = useCallback(acceptedFiles => {\n    // Do something with the files\n    return acceptedFiles;\n  }, []);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: dragNDropBox\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 6\n    }, this), isDragActive ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        children: [\"Submision requires a PDB containing RNA\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), \" that has at least two basepair ends\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), \" (Drag and drop here)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        children: [\"Submision requires a PDB containing RNA\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), \" that has at least two basepair ends\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), \" (Drag and drop here)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 4\n  }, this);\n}\n\n_s2(MyDropline, \"3FQVNeb5tMtY/wUBqGCt85321t8=\", false, function () {\n  return [useDropzone];\n});\n\n_c2 = MyDropline;\nconst FlexRow = styled.div`\nmargin-top: 0px;\nmargin-left: 100px;\ndisplay: flex;\nalign-items: flex-start;\nmin-width: 996px;\n`;\n_c3 = FlexRow;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"PDBSettings\");\n$RefreshReg$(_c2, \"MyDropline\");\n$RefreshReg$(_c3, \"FlexRow\");","map":{"version":3,"sources":["/home/vanishing/git/HCC-rnamake-frontend/rnamake_portal/frontend/src/pages/PDBSettings.jsx"],"names":["React","useState","useCallback","Typography","Grid","Button","FileExplorer","useDropzone","dragNDropBox","styled","PDBSettings","cloudUpload","setCloudUpload","display","MyDropline","onDrop","acceptedFiles","getRootProps","getInputProps","isDragActive","FlexRow","div"],"mappings":";;;;AACA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAAQC,WAAR,QAA0B,gBAA1B;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AAEpC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,CAAD,CAA9C;AAEA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAyB,MAAA,YAAY,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,EAAE,CAAvB;AAAA,gCACE;AACE,UAAA,MAAM,EAAC,GADT,CAEE;AAFF;AAGE,UAAA,KAAK,EAAE;AAAEY,YAAAA,OAAO,EAAE;AAAX,WAHT;AAIE,UAAA,EAAE,EAAC,oBAJL;AAKE,UAAA,QAAQ,MALV;AAME,UAAA,IAAI,EAAC;AANP;AAAA;AAAA;AAAA;AAAA,gBADF,eASE;AAAO,UAAA,OAAO,EAAC,oBAAf;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,QAAhB;AAAyB,YAAA,SAAS,EAAC,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBATF,eAcE,QAAC,OAAD;AAAA,iCACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAmBE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,EAAE,CAAvB;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,MAAM;AAACF,YAAAA,WAAW,GAAGC,cAAc,CAAC,CAAD,CAAjB,GAAsBA,cAAc,CAAC,CAAD,CAA/C;AAAmD,WAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAnBF,eAwBE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAA,+BACE,QAAC,YAAD;AAAc,UAAA,WAAW,EAAED,WAA3B;AAAwC,UAAA,cAAc,EAAEC;AAAxD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD;;GAvCuBF,W;;KAAAA,W;;AAyCxB,SAASI,UAAT,GAAsB;AAAA;;AACrB,QAAMC,MAAM,GAAGb,WAAW,CAACc,aAAa,IAAI;AACzC;AACD,WAAOA,aAAP;AACD,GAHyB,EAGvB,EAHuB,CAA1B;AAIA,QAAM;AAACC,IAAAA,YAAD;AAAeC,IAAAA,aAAf;AAA8BC,IAAAA;AAA9B,MAA8CZ,WAAW,CAAC;AAACQ,IAAAA;AAAD,GAAD,CAA/D;AAEA,sBACE,oBAASE,YAAY,EAArB;AAAA,4BACE;AAAK,MAAA,GAAG,EAAIT;AAAZ;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,sBAAWU,aAAa;AAAxB;AAAA;AAAA;AAAA;AAAA,YAFF,EAIIC,YAAY,gBACX;AAAA,6BACE;AAAA,2EACE;AAAA;AAAA;AAAA;AAAA,gBADF,uDAEE;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADW,gBAOX;AAAA,6BACE;AAAA,2EACE;AAAA;AAAA;AAAA;AAAA,gBADF,uDAEE;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAXL;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBA;;IA5BQL,U;UAK4CP,W;;;MAL5CO,U;AA8BT,MAAMM,OAAO,GAAGX,MAAM,CAACY,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA,CANA;MAAMD,O","sourcesContent":["\n//import * as React from 'react';\nimport React, { useState, useCallback } from 'react';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\nimport FileExplorer from '../components/FileExplorer'\nimport {useDropzone} from 'react-dropzone';\nimport dragNDropBox from '../graphics/dragNDropBox.png';\nimport styled from 'styled-components';\n\nexport default function PDBSettings() {\n\n  const [cloudUpload, setCloudUpload] = useState(0);\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        PDB file and Base Pairs\n      </Typography>\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={6}>\n          <input\n            accept=\"*\"\n            //className={className.input}\n            style={{ display: 'none' }}\n            id=\"raised-button-file\"\n            multiple\n            type=\"file\"\n          />\n          <label htmlFor=\"raised-button-file\">\n            <Button variant=\"raised\" component=\"span\" >\n              Local Upload\n            </Button>\n          </label> \n          <FlexRow>\n              <MyDropline></MyDropline>\n          </FlexRow>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Button onClick={() => {cloudUpload ? setCloudUpload(0): setCloudUpload(1)}}>\n            Cloud Upload\n          </Button>\n        </Grid>\n        <Grid item xs={12}>\n          <FileExplorer cloudUpload={cloudUpload} setCloudUpload={setCloudUpload} />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nfunction MyDropline() {\n const onDrop = useCallback(acceptedFiles => {\n    // Do something with the files\n   return acceptedFiles;\n }, [])\n const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\n\n return (\n   <div {...getRootProps()}>\n     <img src = {dragNDropBox}/>\n     <input {...getInputProps()} />\n     {\n       isDragActive ?\n        <p>\n          <a>Submision requires a PDB containing RNA\n            <br></br> that has at least two basepair ends\n            <br></br> (Drag and drop here)\n          </a>\n        </p> :\n        <p>\n          <a>Submision requires a PDB containing RNA\n            <br></br> that has at least two basepair ends\n            <br></br> (Drag and drop here)\n          </a>\n        </p>\n     }\n   </div>\n )\n}\n\nconst FlexRow = styled.div`\nmargin-top: 0px;\nmargin-left: 100px;\ndisplay: flex;\nalign-items: flex-start;\nmin-width: 996px;\n`;\n"]},"metadata":{},"sourceType":"module"}